!function(){var e,n={4197:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Generator=void 0;const i=t(655),r=t(8759),s=t(5558),o=t(8073),a=t(1196),m=t(6622),p=t(1935),u=t(157),c=t(5168),l=t(4251),d=t(9169),f=t(8367),y=t(3180);n.Generator=class{sourceFiles;looseMode;declarations=[];constructor(e,n,t=!1,i,s){this.sourceFiles=e,this.looseMode=n;const o=new r.Parser(e,i,s);o.disableWarning=t,this.declarations=o.parse()}generateProtobuf(){return(0,s.generateProtobuf)(this.declarations)}generateJsonSchemas(){return(0,o.generateJsonSchemas)({declarations:this.declarations,looseMode:this.looseMode})}generateGraphqlSchema(){return(0,a.generateGraphqlSchema)(this.declarations)}generateGraphqlRootType(e){return(0,l.generateGraphqlRootType)(this.declarations,e)}generateReasonTypes(){return(0,m.generateReasonTypes)(this.declarations)}generateOcamlTypes(){return(0,p.generateOcamlTypes)(this.declarations)}generateRustTypes(){return(0,u.generateRustTypes)(this.declarations)}generateMongooseSchema(){return(0,c.generateMongooseSchema)(this.declarations)}generateSwaggerDoc(e){return(0,d.generateSwaggerDoc)({declarations:this.declarations,allowFileType:!0,looseMode:this.looseMode},e)}generateTypescript(){return(0,f.generateTypescript)(this.declarations)}generateMarkdownDoc(){return(0,y.generateMarkdownDoc)(this.declarations)}},(0,i.__exportStar)(t(6787),n),(0,i.__exportStar)(t(8367),n),(0,i.__exportStar)(t(8073),n),(0,i.__exportStar)(t(9169),n)},4251:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateGraphqlRootType=void 0;const i=t(6787);function r(e,n,t,i){return i&&i.length>0?`input: { ${i.map((i=>{const r=i.optional?"?":"",s=o(i.type,e,n,t);return`${i.name}${r}: ${s}`})).join(", ")} }`:"input: {}"}function s(e){return"string"===e||"number"===e||"boolean"===e}function o(e,n,t,i){if("array"===e.kind)return`Array<${o(e.type,n,t,i)}>`;if("enum"===e.kind)return s(e.name)||n.push(e),e.name;if("reference"===e.kind){const n=t.find((n=>n.name===e.name));return n&&("enum"===n.kind||"string"===n.kind&&n.enums)?e.name:i.includes(e.name)?e.name+"<TContext>":e.name}return"map"===e.kind?`{ [name: ${o(e.key,n,t,i)}]: ${o(e.value,n,t,i)} }`:"union"===e.kind?e.members.map((e=>o(e,n,t,i))).join(" | "):void 0===e.kind?"any":e.kind}n.generateGraphqlRootType=function(e,n){const t=[],a=[],m=[],p=[];let u=[...e];const c=[];let l=[];for(;;){for(const e of u)"object"===e.kind?e.members.some((e=>e.parameters))||e.members.some((e=>(0,i.getReferencesInType)(e.type).some((e=>c.includes(e.name)))))?c.push(e.name):l.push(e):"reference"===e.kind?c.includes(e.name)?c.push(e.newName):l.push(e):"union"===e.kind&&e.members.some((e=>(0,i.getReferencesInType)(e).some((e=>c.includes(e.name)))))?c.push(e.name):l.push(e);if(l.length==u.length)break;u=l,l=[]}console.info(c);for(const n of e)if("object"===n.kind)if("Query"===n.name||"Mutation"===n.name)for(const i of n.members){const n=o(i.type,p,e,c),s=r(p,e,c,i.parameters);t.push(`  ${i.name}(${s}, context: TContext, info: GraphQLResolveInfo): ${n} | Promise<${n}>`),m.push(`  ${i.name}: DeepReturnType<${n}>`)}else{const t=[];for(const i of n.members){const n=o(i.type,p,e,c),s=i.optional?"?":"";if(i.parameters){const o=r(p,e,c,i.parameters);t.push(`  ${i.name}${s}(${o}, context: TContext, info: GraphQLResolveInfo): ${n} | Promise<${n}>`)}else t.push(`  ${i.name}${s}: ${n}`)}const i=c.includes(n.name)?"<TContext>":"";a.push(`export interface ${n.name}${i} {\n${t.join("\n")}\n}`)}else if("reference"===n.kind){const e=c.includes(n.name)?"<TContext>":"";a.push(`export type ${n.newName}${e} = ${n.name}${e}`)}else if("union"===n.kind){const t=c.includes(n.name)?"<TContext>":"",i=o(n,p,e,c);a.push(`export type ${n.name}${t} = ${i}`)}else"string"===n.kind?n.enums&&!s(n.name)&&p.push(n):"enum"===n.kind&&p.push(n);return`/**\n * This file is generated by 'types-as-schema'\n * It is not mean to be edited by hand\n */\n// tslint:disable\n/* eslint-disable */\n\nimport { GraphQLResolveInfo } from 'graphql'\n\n${n(p)}\n\nexport interface Root<TContext> {\n${t.join("\n")}\n}\n\n${a.join("\n\n")}\n\nexport type DeepReturnType<T> = {\n  [P in keyof T]: T[P] extends Array<infer U>\n    ? Array<DeepReturnType<U>>\n    : T[P] extends ReadonlyArray<infer U>\n      ? ReadonlyArray<DeepReturnType<U>>\n      : T[P] extends (...args: any[]) => infer R\n        ? R extends Promise<infer U>\n          ? U\n          : R\n        : DeepReturnType<T[P]>\n}\n\nexport interface ResolveResult<TContext> {\n${m.join("\n")}\n}\n\n/* eslint-enable */\n// tslint:enable\n`}},1196:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateGraphqlSchema=void 0;const i=t(6787),r="grapql schema generator";function s(e,n,t,i){if("object"===e.kind)for(const r of e.members){if(r.parameters)for(const e of r.parameters)if("reference"===e.type.kind){const i=e.type.name,r=n.find((e=>e.name===i));r&&s(r,n,t,!0)}if(i&&"reference"===r.type.kind){const e=r.type.name,i=n.find((n=>n.name===e));i&&s(i,n,t,!0)}}i&&!t.has(e)&&(t.add(e),s(e,n,t,!0))}function o(e,n,t){if(0===n.members.length)return;const i=n.members.map((n=>function(e,n){const t=a(e,n.type);let i,r=!1;if(t.propertyType){r=t.hasJSON;let s="";if(n.parameters){const t=function(e,n){const t=[];let i=!1;for(const r of n){const n=a(e,r.type);n.propertyType&&(r.optional?t.push(`${r.name}: ${n.propertyType}`):t.push(`${r.name}: ${n.propertyType}!`),i=n.hasJSON)}return{result:t.length>0?`(${t.join(", ")})`:"",hasJSON:i}}(e,n.parameters);s=t.result,r||(r=t.hasJSON)}i=`  ${n.name}${s}: ${n.optional?t.propertyType:t.propertyType+"!"}`}return{result:i,hasJSON:r}}(e,n))),r=i.some((e=>e.hasJSON));return{result:`${t.has(n)?"input":"type"} ${n.name} {\n${i.filter((e=>e.result)).map((e=>e.result)).join("\n")}\n}`,hasJSON:r}}function a(e,n){let t="",s=!1;if("array"===n.kind){const i=a(e,n.type);i.propertyType&&(t=`[${i.propertyType}]`,s=i.hasJSON)}else if("enum"===n.kind)t="string"===n.name?"String":n.name;else if("reference"===n.kind){const o=function(e,n){const t=e.find((e=>e.name===n.name));let s=!1,o=n.name;return t&&("enum"===t.kind&&"string"===t.type?o="String":("object"===t.kind&&0===t.members.length||"union"===t.kind&&t.members.some((e=>"reference"!==e.kind)))&&((0,i.warn)(n.position,r),o="JSON",s=!0)),{propertyType:o,hasJSON:s}}(e,n);t=o.propertyType,s=o.hasJSON}else"number"===n.kind?t="number"===n.type||"float"===n.type||"double"===n.type?"Float":"Int":"string"===n.kind?t="String":"boolean"===n.kind?t="Boolean":"map"===n.kind?((0,i.warn)(n.position,r),t="JSON",s=!0):"union"===n.kind?n.members.some((e=>"reference"!==e.kind))&&((0,i.warn)(n.position,r),t="JSON",s=!0):void 0===n.kind&&(t="JSON",s=!0);return{propertyType:t,hasJSON:s}}n.generateGraphqlSchema=function(e){const n=new Set;for(const t of e)s(t,e,n,!1);const t=[];let a=!1;for(const s of e)if("object"===s.kind){const i=o(e,s,n);i&&(t.push(i.result),a||(a=i.hasJSON))}else if("enum"===s.kind){const e=s.members.map((e=>`  ${e.name}`));t.push(`enum ${s.name} {\n${e.join("\n")}\n}`)}else if("union"===s.kind)if(s.members.every((e=>"reference"===e.kind))){const e=s.members.map((e=>e.name));t.push(`union ${s.name} = ${e.join(" | ")}`)}else(0,i.warn)(s.position,r);else if("string"===s.kind&&s.enums){const e=s.enums.map((e=>`  ${e}`));t.push(`enum ${s.name} {\n${e.join("\n")}\n}`)}return(a?"scalar JSON\n\n":"")+t.join("\n\n")+"\n"}},8073:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.getReferencedDefinitions=n.getJsonSchemaProperty=n.getAllDefinitions=n.generateJsonSchemas=void 0;const i=t(6787);function r(e){const n={};for(const t of e.declarations)"object"===t.kind||"array"===t.kind||"union"===t.kind||"string"===t.kind||"number"===t.kind?n[t.name]=o(t,e):"reference"===t.kind?n[t.newName]={type:void 0,$ref:`#/definitions/${t.name}`}:"enum"===t.kind&&(1===t.members.length?n[t.name]={type:s(t.type),const:t.members[0]}:n[t.name]={type:s(t.type),enum:t.members.map((e=>e.value))});return n}function s(e){return"boolean"===e||"string"===e?e:"double"===e||"float"===e||"number"===e?"number":"integer"}function o(e,n){return"number"===e.kind?function(e){let n;return n="double"===e.type||"float"===e.type?{type:"number",minimum:e.minimum,maximum:e.maximum}:"uint32"===e.type||"fixed32"===e.type?p(e,0,4294967295):"int32"===e.type||"sint32"===e.type||"sfixed32"===e.type?p(e,-2147483648,2147483647):"uint64"===e.type||"fixed64"===e.type?p(e,0,0x10000000000000000):"int64"===e.type||"sint64"===e.type||"sfixed64"===e.type?p(e,-0x8000000000000000,0x8000000000000000):"number"===e.type||"integer"===e.type?{type:e.type,minimum:e.minimum,maximum:e.maximum}:{type:e.kind,minimum:e.minimum,maximum:e.maximum},Object.assign(n,{multipleOf:e.multipleOf,exclusiveMinimum:e.exclusiveMinimum,exclusiveMaximum:e.exclusiveMaximum,default:e.default,title:e.title,description:e.description}),n}(e):"boolean"===e.kind?{type:"boolean",default:e.default,title:e.title,description:e.description}:"map"===e.kind?{type:"object",additionalProperties:o(e.value,n)}:"array"===e.kind?{type:"array",items:o(e.type,n),uniqueItems:e.uniqueItems,minItems:e.minItems,maxItems:e.maxItems,default:e.default,title:e.title,description:e.description}:"enum"===e.kind?1===e.enums.length?{type:s(e.type),const:e.enums[0]}:{type:s(e.type),enum:e.enums,default:e.default}:"reference"===e.kind?(0,i.isValidReference)(n.declarations,e.name)?{type:void 0,$ref:`#/definitions/${e.name}`,default:e.default}:{type:void 0}:"object"===e.kind?function(e,n){const t={},i=[];for(const r of e.members)r.optional||i.push(r.name),t[r.name]=o(r.type,n);let r;return r=void 0===e.additionalProperties?!!n.looseMode&&void 0:"boolean"==typeof e.additionalProperties?e.additionalProperties:o(e.additionalProperties,n),{type:"object",properties:t,required:i,additionalProperties:r,minProperties:e.minProperties>e.members.filter((e=>!e.optional)).length?e.minProperties:void 0,maxProperties:e.maxProperties&&e.maxProperties<e.members.length?e.maxProperties:void 0,default:e.default,title:e.title,description:e.description}}(e,n):"string"===e.kind?function(e){if(e.enums)return 1===e.enums.length?{type:"string",const:e.enums[0]}:{type:"string",enum:e.enums};let n;return n=e.templateLiteral?(0,i.templateLiteralToPattern)(e.templateLiteral):e.pattern,{type:e.kind,minLength:e.minLength,maxLength:e.maxLength,pattern:n,default:e.default,title:e.title,description:e.description}}(e):"union"===e.kind?function(e,n){if(e.members.every((e=>"enum"===e.kind||"null"===e.kind))){let n=[];for(const t of e.members)"enum"===t.kind?n=n.concat(t.enums):"null"===t.kind&&n.push(null);return{type:void 0,enum:n}}return{type:void 0,anyOf:e.members.map((e=>o(e,n)))}}(e,n):"void"===e.kind?{type:void 0}:"file"!==e.kind||n.allowFileType?{type:e.kind}:{type:void 0}}function a(e,n,t){const i={},r="string"==typeof e?n[e]:e;if(void 0===r)return i;if("string"==typeof e){if(i[e]=r,t.includes(e))return i;t.push(e)}if("array"===r.type)Object.assign(i,a(r.items,n,t));else if("object"===r.type){if(r.properties)for(const e in r.properties)if(r.properties.hasOwnProperty(e)){const s=r.properties[e];Object.assign(i,a(s,n,t))}r.additionalProperties&&!0!==r.additionalProperties&&void 0===r.additionalProperties.type&&Object.assign(i,m(r.additionalProperties,n,t))}else void 0===r.type&&Object.assign(i,m(r,n,t));return"string"==typeof e&&t.pop(),i}function m(e,n,t){const i={};if(e.$ref){const r=e.$ref.substring("#/definitions/".length);Object.assign(i,a(r,n,t))}if(e.anyOf)for(const r of e.anyOf)Object.assign(i,a(r,n,t));return i}function p(e,n,t){return{type:"integer",minimum:void 0!==e.minimum?e.minimum:n,maximum:void 0!==e.maximum?e.maximum:t}}n.generateJsonSchemas=function(e){const n=r(e),t=[];for(const i of e.declarations)"object"!==i.kind&&"array"!==i.kind&&"union"!==i.kind||!i.entry||t.push({entry:i.entry,schema:{$ref:`#/definitions/${i.name}`,definitions:a(i.name,n,[])}});return 0===t.length&&console.warn("No json schema generated because no @entry found."),t},n.getAllDefinitions=r,n.getJsonSchemaProperty=o,n.getReferencedDefinitions=a},3180:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateMarkdownDoc=void 0;const i=t(8367);function r(e){let n=!1;const t=(0,i.generateTypescriptOfType)(e,(e=>{if("reference"===e.kind)return n=!0,`[\`${e.name}\`](#${e.name})`}));return n?t:`\`${t}\``}n.generateMarkdownDoc=function(e){const n=[];for(const t of e)if("reference"===t.kind?n.push(`\n## \`${t.newName}\`\n`):n.push(`\n## \`${t.name}\`\n`),t.description&&n.push(t.description+"\n"),"object"===t.kind)n.push("Field | Required | Type | Description"),n.push("--- | --- | --- | ---"),n.push(...t.members.map((e=>{const n=e.type.description?" "+e.type.description:"";return`\`${e.name}\` | \`${e.optional?"false":"true"}\` | ${r(e.type)} |${n}`})));else if("union"===t.kind)n.push("Union | Description"),n.push("--- | ---"),n.push(...t.members.map((e=>{const n=e.description?" "+e.description:"";return`${r(e)} |${n}`})));else if("enum"===t.kind)n.push("Name | Value | Description"),n.push("--- | --- | ---"),n.push(...t.members.map((e=>{const n=e.description?" "+e.description:"";return`\`${e.name}\` | \`${e.value}\` |${n}`})));else if("reference"===t.kind){n.push("Reference | Description"),n.push("--- | ---");const e=t.description?" "+t.description:"";n.push(`${r(t)} |${e}`)}else"function"===t.kind?(n.push("Field | Required | Type | Description"),n.push("--- | --- | --- | ---"),n.push(...t.parameters.map((e=>{const n=e.type.description?" "+e.type.description:"";return`\`${e.name}\` | \`${e.optional?"false":"true"}\` | ${r(e.type)} |${n}`}))),n.push("\nReturn | Description"),n.push("--- | ---"),n.push(`${r(t.type)} |`)):"string"!==t.kind&&"number"!==t.kind||!t.enums||(n.push("Enum | Description"),n.push("--- | ---"),n.push(...t.enums.map((e=>`\`${e}\` |`))));return`# Data Models\n${n.join("\n")}\n`}},5168:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateMongooseSchema=void 0;const i=t(6787);function r(e){const n=e.members.map((e=>function(e){const n=s(e.type,2,e.optional,e.index,e.unique,e.sparse,e.select,e.alias);return`  ${e.name}: ${n},`}(e)));return`export const ${(0,i.toLowerCase)(e.name)}Schema = {\n${n.join("\n")}\n}`}function s(e,n,t=!1,i=!1,r=!1,a=!1,m=!1,p){const{propertyType:u,mapOf:c}=function(e){let n,t="";return"string"===e.kind?t="String":"boolean"===e.kind?t="Boolean":"number"===e.kind?t="Number":"array"===e.kind?t=`[\n      ${s(e.type,4)}\n    ]`:"map"===e.kind?(n=s(e.value,3),t="Map"):t="reference"===e.kind?"ObjectId"===e.name||"ObjectID"===e.name?"Schema.Types.ObjectId":"Date"===e.name?"Date":"Decimal128"===e.name?"Schema.Types.Decimal128":"Buffer"===e.name?"Schema.Types.Buffer":"Schema.Types.Mixed":"Schema.Types.Mixed",{propertyType:t,mapOf:n}}(e),l=[`type: ${u}`,`required: ${!t}`];c&&l.push(`of: ${c}`);const d=function(e){return"number"==typeof e.default?e.default:"string"==typeof e.default?o(e.default):void 0}(e);void 0!==d&&l.push(`default: ${d}`);const f=function(e){if("enum"===e.kind&&"string"===e.type&&e.enums&&e.enums.length>0)return e.enums.map((e=>`${o(e)}`)).join(", ")}(e);void 0!==f&&l.push(`enum: [${f}]`),"number"===e.kind&&(void 0!==e.minimum&&l.push(`min: ${e.minimum}`),void 0!==e.maximum&&l.push(`max: ${e.maximum}`)),"string"===e.kind&&(void 0!==e.minLength&&l.push(`minLength: ${e.minLength}`),void 0!==e.maxLength&&l.push(`maxLength: ${e.maxLength}`),void 0!==e.pattern&&l.push(`match: ${o(e.pattern)}`),e.lowercase&&l.push("lowercase: true"),e.uppercase&&l.push("uppercase: true"),e.trim&&l.push("trim: true")),i&&l.push("index: true"),r&&l.push("unique: true"),a&&l.push("sparse: true"),m&&l.push("select: true"),p&&l.push(`alias: ${o(p)}`);const y="  ".repeat(n);return`{\n${y}${l.join(",\n"+y)}\n${"  ".repeat(n-1)}}`}function o(e){return JSON.stringify(e)}n.generateMongooseSchema=function(e){const n=[];for(const t of e)"object"===t.kind?n.push(r(t)):"union"===t.kind&&t.objectType&&n.push(r({...t,...t.objectType}));return"// tslint:disable\n/* eslint-disable */\n\nimport { Schema } from 'mongoose'\n\n"+n.join("\n\n")+"\n"}},1935:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateOcamlTypes=void 0;const i=t(6787);function r(e,n){const t=n.members.map((n=>{const t=s(e,n.type);if(t)return`  ${n.name}: ${n.optional?(0,i.toLowerCase)(t)+" option":(0,i.toLowerCase)(t)}`}));return`type ${(0,i.toLowerCase)(n.name)} = {\n${t.filter((e=>e)).map((e=>e+";")).join("\n")}\n}`}function s(e,n){let t="";if("array"===n.kind){const r=s(e,n.type);r&&(t=`${(0,i.toLowerCase)(r)} list`)}else"enum"===n.kind?t=n.name:"reference"===n.kind?t=function(e,n){const t=e.find((e=>"enum"===e.kind&&e.name===n.name));return t&&"enum"===t.kind&&"string"===t.type?"string":n.name}(e,n):"number"===n.kind?t="number"===n.type||"float"===n.type||"double"===n.type?"float":"int":"string"===n.kind?t="string":"boolean"===n.kind&&(t="bool");return t}n.generateOcamlTypes=function(e){const n=[];for(const t of e)if("object"===t.kind)n.push(r(e,t));else if("enum"===t.kind){const e=t.members.map((e=>`  | ${(0,i.toUpperCase)(e.name)}`)).join("\n");n.push(`type ${(0,i.toLowerCase)(t.name)} =\n${e}`)}else"union"===t.kind&&t.objectType&&n.push(r(e,{...t,...t.objectType}));return n.join("\n\n")+"\n"}},8759:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Parser=void 0;const i=(0,t(655).__importDefault)(t(5423)),r=t(638),s=t(6787);n.Parser=class{sourceFiles;getRelativePath;checker;declarations=[];disableWarning=!1;constructor(e,n,t){this.sourceFiles=e,this.getRelativePath=n,this.checker=t}parse(){for(const e of this.sourceFiles)i.default.forEachChild(e,(n=>{i.default.isEnumDeclaration(n)&&this.preHandleEnumDeclaration(n,e)}));for(const e of this.sourceFiles)i.default.forEachChild(e,(n=>{this.handleSourceFile(n,e)}));return this.declarations}preHandleEnumDeclaration(e,n){const t=e.members;if(t.length>0){const r=t[0];if(r?.initializer)this.handleEnumDeclarationInitializer(e,t,r.initializer,n);else{const r={kind:"enum",name:e.name.text,type:"uint32",members:[],position:this.getPosition(e,n)};let s=0;for(const e of t)if(e.initializer&&i.default.isIdentifier(e.name)){const{name:t,value:i}=this.getExpression(e.initializer,e.name,n);r.members.push({name:t,value:i}),s=i+1}else r.members.push({name:e.name.text,value:s}),s++;this.declarations.push(r)}}}handleEnumDeclarationInitializer(e,n,t,r){const s={kind:"enum",name:e.name.text,type:i.default.isStringLiteral(t)?"string":"uint32",members:[],position:this.getPosition(e,r)};for(const e of n)if(e.initializer&&i.default.isIdentifier(e.name)){const{name:n,value:t}=this.getExpression(e.initializer,e.name,r);s.members.push({name:n,value:t})}this.declarations.push(s)}handleSourceFile(e,n){const t=this.getJsDocs(e,n);if(i.default.isTypeAliasDeclaration(e))this.handleTypeAliasDeclaration(e,t,n);else if(i.default.isInterfaceDeclaration(e)||i.default.isClassDeclaration(e))this.handleInterfaceOrClassDeclaration(e,t,n);else if(i.default.isFunctionDeclaration(e))this.handleFunctionDeclaration(e,t,n);else if(i.default.isExportAssignment(e))i.default.isArrowFunction(e.expression)&&this.handleFunctionDeclaration(e.expression,t,n);else if(i.default.isVariableStatement(e)){const r=e.declarationList.declarations[0];r?.initializer&&i.default.isArrowFunction(r.initializer)&&this.handleFunctionDeclaration(r.initializer,t,n,i.default.isIdentifier(r.name)?r.name.text:void 0)}}handleFunctionDeclaration(e,{jsDocs:n,comments:t},r,s){const o=e.type?this.getType(e.type,r):{kind:void 0,position:this.getPosition(e,r)},a={kind:"function",name:s??(e.name&&!i.default.isFunctionTypeNode(e)?e.name.text:""),type:o,optional:!i.default.isFunctionTypeNode(e)&&!!e.questionToken,parameters:e.parameters.map((e=>this.handleFunctionParameter(e,r))),comments:t,jsDocs:n,position:this.getPosition(e,r),body:i.default.isFunctionTypeNode(e)?void 0:e.body?.getText(r)};for(const e of n||[])e.comment?"method"===e.name?a.method=e.comment:"path"===e.name?a.path=e.comment:"description"===e.name?a.description=e.comment:"summary"===e.name?a.summary=e.comment:"tags"===e.name&&(a.tags=e.comment.split(",")):"deprecated"===e.name&&(a.deprecated=!0);this.declarations.push(a)}handleFunctionParameter(e,n){const t=this.getParameter(e,n),{jsDocs:i,comments:r}=this.getJsDocs(e,n);t.comments=r,t.jsDocs=i;for(const e of i||[])e.comment&&"in"===e.name?t.in=e.comment:this.setJsDoc(e,t.type);return void 0!==t.type.default&&(t.optional=!0),t}handleInterfaceOrClassDeclaration(e,{jsDocs:n,comments:t},r){if(e.name){const n=e.name.text;if(this.declarations.some((e=>"reference"===e.kind?e.newName===n:e.name===n)))return}const s=this.getObjectMembers(e.members,r),o=s.members;let a=s.minProperties,m=s.maxProperties,p=s.additionalProperties;const u=this.handleHeritageClauses(e,o,a,m);a=u.minProperties,m=u.maxProperties,u.additionalProperties&&(p=u.additionalProperties);const c={kind:"object",name:e.name?e.name.text:"",members:o,minProperties:a,maxProperties:void 0===p?m:void 0,additionalProperties:p,entry:n?.find((e=>"entry"===e.name))?.comment,position:this.getPosition(e,r),comments:t,jsDocs:n,decorators:i.default.isClassDeclaration(e)?this.getDecorators(r,e.decorators):void 0};for(const e of n||[])this.setJsDocObject(e,c);this.declarations.push(c)}handleHeritageClauses(e,n,t,r){let s;if(e.heritageClauses)for(const o of e.heritageClauses)if(i.default.isHeritageClause(o))for(const e of o.types)i.default.isExpressionWithTypeArguments(e)&&i.default.isIdentifier(e.expression)&&({minProperties:t,maxProperties:r,additionalProperties:s}=this.handleExpressionWithTypeArguments(e.expression,n,t,r));return{minProperties:t,maxProperties:r,additionalProperties:s}}handleExpressionWithTypeArguments(e,n,t,i){const r=e.text;let s;this.preHandleType(r);const o=this.declarations.find((e=>"object"===e.kind&&e.name===r));if(o&&"object"===o.kind){s=o.additionalProperties;for(const e of o.members)n.every((n=>n.name!==e.name))&&(n.push(e),i++,e.optional||t++)}return{minProperties:t,maxProperties:i,additionalProperties:s}}handleTypeAliasDeclaration(e,n,t){if(i.default.isArrayTypeNode(e.type))this.handleArrayTypeInTypeAliasDeclaration(e.type,e.name,n,t);else if(i.default.isTypeLiteralNode(e.type)||i.default.isUnionTypeNode(e.type)||i.default.isIntersectionTypeNode(e.type))this.handleTypeLiteralOrUnionTypeOrIntersectionType(e.type,e.name,n,t);else if(i.default.isTypeReferenceNode(e.type)&&i.default.isIdentifier(e.type.typeName)){if(e.type.typeArguments&&e.type.typeArguments.length>0)if(this.checker){const n=this.getTypeOfComplexType(e.type,t);if(n)return void this.declarations.push({name:e.name.text,...n});this.disableWarning||(0,s.warn)(this.getPosition(e,t),"parse")}else if("Pick"===e.type.typeName.text){const n=this.getTypeOfPick(e.type.typeName,e.type.typeArguments,t);if(n)return void this.declarations.push({name:e.name.text,...n})}else this.disableWarning||(0,s.warn)(this.getPosition(e,t),"parse");const n={kind:"reference",newName:e.name.text,name:e.type.typeName.text,position:this.getPosition(e,t)};this.declarations.push(n)}else if(i.default.isTemplateLiteralTypeNode(e.type)){const n=this.getTemplateSpans(e.type,t);n.every((e=>"enum"===e.kind))?this.declarations.push({kind:"string",name:e.name.text,enums:this.getTemplateLiteralTypeEnums(e.type,n),position:this.getPosition(e.name,t)}):n.every((e=>"enum"===e.kind||"string"===e.kind||"number"===e.kind||"boolean"===e.kind))&&this.declarations.push({kind:"string",name:e.name.text,templateLiteral:this.getTemplateLiteral(e.type,n),position:this.getPosition(e.type,t)})}else if(i.default.isFunctionTypeNode(e.type))this.handleFunctionDeclaration(e.type,n,t,i.default.isIdentifier(e.name)?e.name.text:void 0);else{const r=this.getType(e.type,t),s=e.name&&!i.default.isFunctionTypeNode(e)?e.name.text:"";"reference"===r.kind?this.declarations.push({newName:s,...r,...n}):"enum"===r.kind?this.declarations.push({members:r.enums.map((e=>({name:e,value:e}))),...r,...n,name:s}):void 0!==r.kind&&"file"!==r.kind&&"void"!==r.kind&&this.declarations.push({...r,...n,name:s})}}handleTypeLiteralOrUnionTypeOrIntersectionType(e,n,{jsDocs:t,comments:r},s){let o;if(i.default.isUnionTypeNode(e)){if(e.types.every((e=>i.default.isLiteralTypeNode(e)||e.kind===i.default.SyntaxKind.NullKeyword)))return void this.handleUnionTypeOfLiteralType(e,n,s);e.types.every((e=>i.default.isTypeReferenceNode(e)))&&(o={kind:"union",name:n.text,members:e.types.map((e=>this.getType(e,s))),entry:t?.find((e=>"entry"===e.name))?.comment,position:this.getPosition(n,s),comments:r,jsDocs:t},this.declarations.push(o))}const{members:a,minProperties:m,maxProperties:p,additionalProperties:u}=this.getMembersInfo(e,s),c={kind:"object",name:n.text,members:a,minProperties:m,maxProperties:void 0===u?p:void 0,additionalProperties:u,entry:t?.find((e=>"entry"===e.name))?.comment,position:this.getPosition(n,s),comments:r,jsDocs:t};for(const e of t||[])this.setJsDocObject(e,c);o?o.objectType=c:this.declarations.push(c)}handleUnionTypeOfLiteralType(e,n,t){let r;const s=[];for(const n of e.types)if(i.default.isLiteralTypeNode(n)){const{type:e,value:t}=this.getEnumOfLiteralType(n);void 0!==e&&(r=e),void 0!==t&&s.push(t)}else n.kind===i.default.SyntaxKind.NullKeyword&&s.push(null);if(r)if("string"===r){const e={kind:"string",name:n.text,enums:s,position:this.getPosition(n,t)};this.declarations.push(e)}else if("number"===r){const e={kind:"number",type:r,name:n.text,enums:s,position:this.getPosition(n,t)};this.declarations.push(e)}else if("boolean"===r){const i={kind:"union",name:n.text,members:e.types.map((e=>this.getType(e,t))),entry:void 0,position:this.getPosition(n,t)};this.declarations.push(i)}}handleArrayTypeInTypeAliasDeclaration(e,n,{jsDocs:t,comments:i},r){const s=this.getType(e.elementType,r),o={kind:"array",name:n.text,type:s,entry:t?.find((e=>"entry"===e.name))?.comment,position:this.getPosition(n,r),comments:i,jsDocs:t};for(const e of t||[])this.setJsDocArray(e,o);this.declarations.push(o)}getJsDocs(e,n){const t=i.default.getLeadingCommentRanges(n.text,e.getFullStart()),s=t?t.map((e=>n.text.slice(e.pos,e.end))):void 0,o=(0,r.getJsDocs)(e),a=[];for(const e of o)a.push({...e,type:e.type?this.getType(e.type,n):void 0});return{jsDocs:0===a.length?void 0:a,comments:s}}getType(e,n){if(e.kind===i.default.SyntaxKind.StringKeyword)return{kind:"string",position:this.getPosition(e,n)};if(e.kind===i.default.SyntaxKind.NumberKeyword)return{kind:"number",type:"number",position:this.getPosition(e,n)};if(e.kind===i.default.SyntaxKind.BooleanKeyword)return{kind:"boolean",position:this.getPosition(e,n)};if(e.kind===i.default.SyntaxKind.VoidKeyword)return{kind:"void",position:this.getPosition(e,n)};if(i.default.isTypeLiteralNode(e))return this.getTypeOfTypeLiteral(e,n);if(i.default.isArrayTypeNode(e))return{kind:"array",type:this.getType(e.elementType,n),position:this.getPosition(e,n)};if(i.default.isTypeReferenceNode(e))return this.getTypeOfTypeReference(e,n);if(i.default.isUnionTypeNode(e)||i.default.isIntersectionTypeNode(e))return this.getTypeOfUnionTypeOrIntersectionType(e,n);if(i.default.isLiteralTypeNode(e))return e.literal.kind===i.default.SyntaxKind.NullKeyword?{kind:"null",position:this.getPosition(e,n)}:this.getTypeOfLiteralType(e,n);if(e.kind===i.default.SyntaxKind.NullKeyword)return{kind:"null",position:this.getPosition(e,n)};if(i.default.isTupleTypeNode(e)){let t;const i=e.elements||e.elementTypes;for(const e of i)t=this.getType(e,n);if(t)return{kind:"array",type:t,minItems:i.length,maxItems:i.length,position:this.getPosition(e,n)}}if(i.default.isTemplateLiteralTypeNode(e)){const t=this.getTemplateSpans(e,n);if(t.every((e=>"enum"===e.kind)))return{kind:"enum",type:"string",name:"string",enums:this.getTemplateLiteralTypeEnums(e,t),position:this.getPosition(e,n)};if(t.every((e=>"enum"===e.kind||"string"===e.kind||"number"===e.kind||"boolean"===e.kind)))return{kind:"string",templateLiteral:this.getTemplateLiteral(e,t),position:this.getPosition(e,n)}}if(i.default.isTemplateMiddleOrTemplateTail(e))return{kind:"enum",type:"string",name:"string",enums:[e.text],position:this.getPosition(e,n)};if(i.default.isParenthesizedTypeNode(e))return this.getType(e.type,n);if(i.default.isTypeOperatorNode(e)&&e.operator===i.default.SyntaxKind.KeyOfKeyword&&i.default.isTypeReferenceNode(e.type)){const t=this.getTypeOfComplexType(e.type,n);if(t)return{kind:"enum",type:"string",name:"string",enums:t.members.map((e=>e.name)),position:this.getPosition(e,n)}}const t=this.getPosition(e,n);return e.kind===i.default.SyntaxKind.AnyKeyword||this.disableWarning||(0,s.warn)(t,"parser"),{kind:void 0,position:t}}getTemplateSpans(e,n){const t=[];for(const i of e.templateSpans)t.push(this.getType(i.type,n),this.getType(i.literal,n));return t}getTemplateLiteralTypeEnums(e,n){let t=[e.head.text];for(const e of n)if("enum"===e.kind){const n=[];for(const i of e.enums)n.push(...t.map((e=>e+i)));t=n}return t}getTemplateLiteral(e,n){const t=[];e.head.text&&t.push({kind:"enum",enums:[e.head.text]});for(const e of n)if("string"===e.kind)t.push({kind:"string"});else if("number"===e.kind)t.push({kind:"number"});else if("boolean"===e.kind)t.push({kind:"boolean"});else if("enum"===e.kind){const n=e.enums.filter((e=>e));n.length>0&&t.push({kind:"enum",enums:n})}return t}getEnumOfLiteralType(e){return i.default.isStringLiteral(e.literal)?{type:"string",value:e.literal.text}:i.default.isNumericLiteral(e.literal)?{type:"number",value:+e.literal.text}:e.literal.kind===i.default.SyntaxKind.TrueKeyword?{type:"boolean",value:!0}:e.literal.kind===i.default.SyntaxKind.FalseKeyword?{type:"boolean",value:!1}:{type:void 0,value:void 0}}getTypeOfLiteralType(e,n){let t;const i=[],{type:r,value:s}=this.getEnumOfLiteralType(e);return void 0!==r&&(t=r),void 0!==s&&i.push(s),t?{kind:"enum",type:t,name:t,enums:i,position:this.getPosition(e,n)}:{kind:void 0,position:this.getPosition(e,n)}}getTypeOfUnionTypeOrIntersectionType(e,n){if(!e.types.every((e=>i.default.isLiteralTypeNode(e))))return{kind:"union",members:e.types.map((e=>this.getType(e,n))),position:this.getPosition(e,n)};{let t;const r=[];for(const n of e.types)if(i.default.isLiteralTypeNode(n)){const{type:e,value:i}=this.getEnumOfLiteralType(n);void 0!==e&&(t=e),void 0!==i&&r.push(i)}if(t)return{kind:"enum",type:t,name:t,enums:r,position:this.getPosition(e,n)}}return{kind:void 0,position:this.getPosition(e,n)}}getTypeOfArrayTypeReference(e,n){if(e.typeArguments&&1===e.typeArguments.length){const t=e.typeArguments[0];return{kind:"array",type:this.getType(t,n),position:this.getPosition(t,n)}}{const t=this.getPosition(e,n);return{kind:"array",type:{kind:void 0,position:t},position:t}}}getTypeOfTypeReference(e,n){if(i.default.isIdentifier(e.typeName)){if(o.includes(e.typeName.text))return{kind:"number",type:e.typeName.text,position:this.getPosition(e.typeName,n)};if("File"===e.typeName.text)return{kind:"file",position:this.getPosition(e.typeName,n)};if("Array"===e.typeName.text||"ReadonlyArray"===e.typeName.text)return this.getTypeOfArrayTypeReference(e,n);if(e.typeArguments&&e.typeArguments.length>0){if("Promise"===e.typeName.text||"ReturnType"===e.typeName.text||"DeepReturnType"===e.typeName.text){const t=e.typeArguments[0];return this.getType(t,n)}if(this.checker){const t=this.getTypeOfComplexType(e,n);if(t)return t}else if("Pick"===e.typeName.text){const t=this.getTypeOfPick(e.typeName,e.typeArguments,n);if(t)return t}}return{kind:"reference",name:e.typeName.text,position:this.getPosition(e.typeName,n)}}if(i.default.isQualifiedName(e.typeName)&&i.default.isIdentifier(e.typeName.left)){const t=e.typeName.left.text,i=this.declarations.find((e=>"enum"===e.kind&&e.name===t));if(i)return{kind:"enum",name:i.name,type:i.type,enums:i.members.map((e=>e.value)),position:this.getPosition(e.typeName,n)}}return{kind:void 0,position:this.getPosition(e.typeName,n)}}getTypeOfTsType(e,n,t,r){if(e.flags&i.default.TypeFlags.String)return{kind:"string",position:this.getPosition(n,t)};if(e.flags&i.default.TypeFlags.Number)return{kind:"number",type:"number",position:this.getPosition(n,t)};if(e.flags&i.default.TypeFlags.Boolean)return{kind:"boolean",position:this.getPosition(n,t)};if(e.flags&i.default.TypeFlags.Void)return{kind:"void",position:this.getPosition(n,t)};if(e.flags&i.default.TypeFlags.Null)return{kind:"null",position:this.getPosition(n,t)};const s=r.typeToString(e);return"File"===s?{kind:"file",position:this.getPosition(n,t)}:{kind:"reference",name:s,position:this.getPosition(n,t)}}getTypeOfPick(e,n,t){const r=n[0];if(i.default.isTypeReferenceNode(r)&&i.default.isIdentifier(r.typeName)){const o=r.typeName.escapedText.toString();this.preHandleType(o);const a=this.declarations.find((e=>"object"===e.kind&&e.name===o));if(a&&"object"===a.kind){const r=n[1],o=[];if(i.default.isLiteralTypeNode(r))i.default.isStringLiteral(r.literal)&&o.push(r.literal.text);else{if(!i.default.isUnionTypeNode(r))return void(this.disableWarning||(0,s.warn)(this.getPosition(e,t),"parser"));for(const e of r.types)i.default.isLiteralTypeNode(e)&&i.default.isStringLiteral(e.literal)&&o.push(e.literal.text)}const m=[];let p=0,u=0;for(const e of a.members)o.includes(e.name)&&(u++,e.optional||p++,m.push(e));return{kind:"object",members:m,minProperties:p,maxProperties:u,position:this.getPosition(e,t)}}}}getTypeOfComplexType(e,n){if(!this.checker)return;const t=this.checker.getTypeAtLocation(e);if(t.flags&i.default.TypeFlags.Object){const r=[];let s=0,o=0;for(const a of t.getProperties()){const t=this.checker.getTypeOfSymbolAtLocation(a,e);o++,a.flags&i.default.SymbolFlags.Optional||s++,r.push({name:a.getName(),type:this.getTypeOfTsType(t,e.typeName,n,this.checker)})}return{kind:"object",members:r,minProperties:s,maxProperties:o,position:this.getPosition(e.typeName,n)}}}getTypeOfTypeLiteral(e,n){if(1!==e.members.length||!i.default.isIndexSignatureDeclaration(e.members[0])){const{members:t,minProperties:i,maxProperties:r,additionalProperties:s}=this.getMembersInfo(e,n);return{kind:"object",members:t,minProperties:i,maxProperties:void 0===s?r:void 0,additionalProperties:s,position:this.getPosition(e,n)}}{const t=e.members[0];if(i.default.isIndexSignatureDeclaration(t)&&1===t.parameters.length){const e=t.parameters[0]?.type;if(e&&t.type)return{kind:"map",key:this.getType(e,n),value:this.getType(t.type,n),position:this.getPosition(e,n)}}}return{kind:void 0,position:this.getPosition(e,n)}}getDecorators(e,n){if(!n)return;const t=[];for(const r of n)i.default.isCallExpression(r.expression)&&i.default.isIdentifier(r.expression.expression)&&t.push({name:r.expression.expression.escapedText.toString(),parameters:r.expression.arguments.map((n=>this.getTypeAndValueOfExpression(n,e).value))});return t}getMembersInfo(e,n){return i.default.isTypeLiteralNode(e)?this.getObjectMembers(e.members,n):i.default.isUnionTypeNode(e)?this.getMembersInfoOfUnionType(e,n):i.default.isIntersectionTypeNode(e)?this.getMembersInfoOfIntersectionType(e,n):i.default.isParenthesizedTypeNode(e)?this.getMembersInfoOfParenthesizedType(e,n):i.default.isTypeReferenceNode(e)?this.getMembersInfoOfTypeReference(e):{members:[],minProperties:0,maxProperties:0}}getMembersInfoOfUnionType(e,n){const t=[];let i=1/0,r=0;for(const s of e.types){const e=this.getMembersInfo(s,n);if(i>e.minProperties&&(i=e.minProperties),r<e.maxProperties&&(r=e.maxProperties),0===t.length){const n=JSON.parse(JSON.stringify(e.members));t.push(...n)}else{const n=e.members;this.setOptionalAndEnumOfUnionType(t,n);for(const e of n)if(t.every((n=>n.name!==e.name))){const n=JSON.parse(JSON.stringify(e));n.optional=!0,t.push(n)}}}return{members:t,minProperties:i,maxProperties:r}}setOptionalAndEnumOfUnionType(e,n){for(const t of e){const e=n.find((e=>e.name===t.name));e?this.setEnumOfUnionType(t,e):t.optional=!0}}setEnumOfUnionType(e,n){if("enum"===n.type.kind&&"enum"===e.type.kind)for(const t of n.type.enums)e.type.enums.every((e=>e!==t))&&e.type.enums.push(t)}getMembersInfoOfIntersectionType(e,n){const t=[];let i=0,r=0;for(const s of e.types){const e=this.getMembersInfo(s,n);i+=e.minProperties,r+=e.maxProperties;const o=e.members;for(const e of o)t.every((n=>n.name!==e.name))&&t.push(JSON.parse(JSON.stringify(e)))}return{members:t,minProperties:i,maxProperties:r}}getMembersInfoOfParenthesizedType(e,n){const t=[],i=this.getMembersInfo(e.type,n),r=i.minProperties,s=i.maxProperties,o=JSON.parse(JSON.stringify(i.members));for(const e of o)t.push(e);return{members:t,minProperties:r,maxProperties:s}}getMembersInfoOfTypeReference(e){const n=[];let t=0,i=0;const r=e.typeName.text;this.preHandleType(r);const s=this.declarations.find((e=>"object"===e.kind&&e.name===r));if(s&&"object"===s.kind)for(const e of s.members)n.every((n=>n.name!==e.name))&&(n.push(JSON.parse(JSON.stringify(e))),i++,e.optional||t++);return{members:n,minProperties:t,maxProperties:i}}preHandleType(e){if(this.declarations.some((n=>n.name===e)))return;let n=!1;for(const t of this.sourceFiles){if(n)return;i.default.forEachChild(t,(r=>{n||(i.default.isInterfaceDeclaration(r)?r.name.text===e&&(n=!0,this.handleSourceFile(r,t)):i.default.isTypeAliasDeclaration(r)&&r.name.text===e&&(n=!0,this.handleSourceFile(r,t)))}))}}getObjectMembers(e,n){const t=[];let r,s=0,o=0;for(const a of e)if(i.default.isPropertySignature(a)||i.default.isPropertyDeclaration(a)){const e=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(a,n);t.push(e),a.questionToken||s++,o++}else if(i.default.isIndexSignatureDeclaration(a))a.type&&(r=this.getType(a.type,n));else if(i.default.isMethodSignature(a)||i.default.isMethodDeclaration(a)){const e=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(a,n);t.push(e)}else if(i.default.isConstructorDeclaration(a))for(const e of a.parameters)if(e.modifiers&&e.modifiers.some((e=>e.kind===i.default.SyntaxKind.PublicKeyword||e.kind===i.default.SyntaxKind.PrivateKeyword||e.kind===i.default.SyntaxKind.ProtectedKeyword))){const i=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(e,n);t.push(i),e.questionToken||s++,o++}return{members:t,minProperties:s,maxProperties:o,additionalProperties:r}}getExpression(e,n,t){const{type:i,value:r}=this.getTypeAndValueOfExpression(e,t);return{name:n.text,type:i,value:r}}getTypeAndValueOfExpression(e,n){if(i.default.isStringLiteral(e))return{type:{kind:"string",position:this.getPosition(e,n)},value:e.text};if(i.default.isNumericLiteral(e))return{type:{kind:"number",type:"number",position:this.getPosition(e,n)},value:+e.text};if(e.kind===i.default.SyntaxKind.FalseKeyword||e.kind===i.default.SyntaxKind.TrueKeyword)return{type:{kind:"boolean",position:this.getPosition(e,n)},value:e.kind===i.default.SyntaxKind.TrueKeyword};if(i.default.isArrayLiteralExpression(e)){let t={kind:void 0,position:this.getPosition(e,n)};const i=[];for(const r of e.elements){const{type:e,value:s}=this.getTypeAndValueOfExpression(r,n);t=e,i.push(s)}return{type:{kind:"array",type:t,position:this.getPosition(e,n)},value:i}}if(i.default.isObjectLiteralExpression(e)){const t=[],r={};for(const s of e.properties)if(i.default.isPropertyAssignment(s)&&i.default.isIdentifier(s.name)){const e=this.getExpression(s.initializer,s.name,n);t.push({name:e.name,type:e.type}),r[e.name]=e.value}return{type:{kind:"object",members:t,minProperties:t.length,position:this.getPosition(e,n)},value:r}}return i.default.isIdentifier(e)?{type:{kind:"reference",name:e.escapedText.toString(),position:this.getPosition(e,n)},value:e.escapedText.toString()}:{type:{kind:void 0,position:this.getPosition(e,n)},value:void 0}}getObjectMemberOfPropertyOrMethodOrConstructorParameter(e,n){const t={name:i.default.isIdentifier(e.name)?e.name.text:"",type:{kind:void 0,position:this.getPosition(e,n)},decorators:this.getDecorators(n,e.decorators)};let r;if(e.questionToken&&(t.optional=!0),(i.default.isPropertySignature(e)||i.default.isPropertyDeclaration(e))&&e.initializer){const{type:i,value:s}=this.getTypeAndValueOfExpression(e.initializer,n);t.type=i,r=s}return e.type&&(t.type=this.getType(e.type,n)),void 0!==r&&(t.type.default=r),(i.default.isPropertySignature(e)||i.default.isPropertyDeclaration(e))&&this.setPropertyJsDoc(e,t,n),(i.default.isMethodSignature(e)||i.default.isMethodDeclaration(e))&&(t.parameters=e.parameters.map((e=>this.handleFunctionParameter(e,n)))),t}getParameter(e,n){let t,i;if(e.initializer){const r=this.getTypeAndValueOfExpression(e.initializer,n);t=r.type,i=r.value}return e.type&&(t=this.getType(e.type,n)),t||(t={kind:void 0,position:this.getPosition(e,n)}),t.default=i,{name:e.name.text,type:t,optional:!!e.questionToken||void 0!==t.default,decorators:this.getDecorators(n,e.decorators)}}setJsDoc(e,n){"mapValueType"===e.name?this.setJsDocMapValue(e,n):"type"===e.name?this.overrideType(n,e):"array"===n.kind?this.setJsDocArray(e,n):"number"===n.kind?this.setJsDocNumber(e,n):"string"===n.kind?this.setJsDocString(e,n):"boolean"===n.kind?this.setJsDocBoolean(e,n):"object"===n.kind?this.setJsDocObject(e,n):"reference"===n.kind?this.setJsDocReference(e,n):"enum"===n.kind&&this.setJsDocEnum(e,n)}setPropertyJsDoc(e,n,t){const{jsDocs:i,comments:r}=this.getJsDocs(e,t);n.comments=r,n.jsDocs=i;for(const e of i||[])"tag"===e.name?this.setJsDocTag(e,n):"param"===e.name?this.setJsDocParam(e,n):"index"===e.name?n.index=!0:"unique"===e.name?n.unique=!0:"sparse"===e.name?n.sparse=!0:"select"===e.name?n.select=!0:"alias"===e.name?e.comment&&(n.alias=e.comment):this.setJsDoc(e,n.type)}setJsDocReference(e,n){if(e.comment)try{n.default=JSON.parse(this.getJsDocComment(e.comment))}catch(e){this.disableWarning||(0,s.warn)(n.position,"parser")}}setJsDocTag(e,n){e.comment&&(n.tag=+e.comment)}setJsDocMapValue(e,n){e.comment&&"map"===n.kind&&"number"===n.value.kind&&(n.value.type=e.comment)}setJsDocParam(e,n){e.paramName&&e.type&&(n.parameters||(n.parameters=[]),n.parameters.push({name:e.paramName,type:e.type,optional:e.optional})),this.overrideType(n.type,e)}setJsDocBoolean(e,n){e.comment&&("default"===e.name?n.default="true"===this.getJsDocComment(e.comment).toLowerCase():"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment))}setJsDocEnum(e,n){e.comment&&"default"===e.name&&(n.default=this.getJsDocComment(e.comment))}getJsDocComment(e){return e.length>=2&&(e.startsWith("'")&&e.endsWith("'")||e.startsWith('"')&&e.endsWith('"')||e.startsWith("`")&&e.endsWith("`"))?e.substring(1,e.length-1):e}setJsDocString(e,n){e.comment&&("minLength"===e.name?n.minLength=+e.comment:"maxLength"===e.name?n.maxLength=+e.comment:"pattern"===e.name?n.pattern=e.comment:"default"===e.name?n.default=this.getJsDocComment(e.comment):"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment)),"lowercase"===e.name?n.lowercase=!0:"uppercase"===e.name?n.uppercase=!0:"trim"===e.name&&(n.trim=!0)}setJsDocNumber(e,n){e.comment&&("multipleOf"===e.name?n.multipleOf=+e.comment:"maximum"===e.name?n.maximum=+e.comment:"minimum"===e.name?n.minimum=+e.comment:"exclusiveMaximum"===e.name?n.exclusiveMaximum=+e.comment:"exclusiveMinimum"===e.name?n.exclusiveMinimum=+e.comment:"default"===e.name?n.default=+this.getJsDocComment(e.comment):"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment))}overrideType(e,n){n&&n.comment&&("number"===e.kind?e.type=n.comment:"array"===e.kind&&"number"===e.type.kind&&(e.type={kind:e.type.kind,type:n.comment,position:e.type.position}))}setJsDocArray(e,n){e.comment?"minItems"===e.name?n.minItems=+e.comment:"maxItems"===e.name?n.maxItems=+e.comment:"itemType"===e.name?this.overrideType(n,e):"number"===n.type.kind?this.setJsDocNumberArray(e,n.type):"string"===n.type.kind?this.setJsDocStringArray(e,n.type):"boolean"===n.type.kind?"itemDefault"===e.name&&(n.type.default="true"===this.getJsDocComment(e.comment).toLowerCase()):"default"===e.name?n.default=JSON.parse(this.getJsDocComment(e.comment)):"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment):"uniqueItems"===e.name&&(n.uniqueItems=!0)}setJsDocNumberArray(e,n){e.comment&&("itemMultipleOf"===e.name?n.multipleOf=+e.comment:"itemMinimum"===e.name?n.minimum=+e.comment:"itemMaximum"===e.name?n.maximum=+e.comment:"itemExclusiveMinimum"===e.name?n.exclusiveMinimum=+e.comment:"itemExclusiveMaximum"===e.name?n.exclusiveMaximum=+e.comment:"itemDefault"===e.name&&(n.default=+this.getJsDocComment(e.comment)))}setJsDocStringArray(e,n){e.comment&&("itemMinLength"===e.name?n.minLength=+e.comment:"itemMaxLength"===e.name?n.maxLength=+e.comment:"itemPattern"===e.name?n.pattern=e.comment:"itemDefault"===e.name&&(n.default=this.getJsDocComment(e.comment)))}setJsDocObject(e,n){e.comment?"minProperties"===e.name?n.minProperties=+e.comment:"maxProperties"===e.name?n.maxProperties=+e.comment:"default"===e.name?n.default=JSON.parse(this.getJsDocComment(e.comment)):"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment):"additionalProperties"===e.name&&(n.additionalProperties=!0)}getPosition(e,n){return{file:this.getRelativePath(n.fileName),...i.default.getLineAndCharacterOfPosition(n,e.getStart(n))}}};const o=["double","float","uint32","fixed32","integer","int32","sint32","sfixed32","uint64","fixed64","int64","sint64","sfixed64"]},5558:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateProtobuf=void 0;const i=t(6787);function r(e,n){const t=[];let r=n.members.reduce(((e,n)=>n.tag?Math.max(e,n.tag):e),0);for(const s of n.members){s.tag||r++;const{modifier:n,propertyType:a}=o(e,s.type);a?t.push(`    ${n}${a} ${s.name} = ${s.tag?s.tag:r};`):(0,i.warn)(s.type.position,"protobuf generator")}return`message ${n.name} {\n${t.join("\n")}\n}`}function s(e){const n=[];for(const t of e.members)"number"==typeof t.value&&n.push(`    ${t.name} = ${t.value};`);if(n.length>0)return`enum ${e.name} {\n${n.join("\n")}\n}`}function o(e,n){let t="",i="";return"map"===n.kind?i=function(e,n){let t="";return"number"===n.value.kind?({propertyType:t}=o(e,n.value)):"reference"===n.value.kind&&(t=n.value.name),t?`map<${n.key.kind}, ${t}>`:""}(e,n):"array"===n.kind?(t="repeated ",({propertyType:i}=o(e,n.type))):"enum"===n.kind?i="string"===n.type?"string":n.name:"reference"===n.kind?i=function(e,n){const t=e.find((e=>"enum"===e.kind&&e.name===n.name));return t&&"enum"===t.kind&&"string"===t.type?"string":n.name}(e,n):"number"===n.kind?i="number"===n.type?"double":"integer"===n.type?"int32":n.type:"string"===n.kind?i=n.kind:"boolean"===n.kind&&(i="bool"),{modifier:t,propertyType:i}}n.generateProtobuf=function(e){const n=[];for(const t of e)if("object"===t.kind){const i=r(e,t);n.push(i)}else if("enum"===t.kind){const e=s(t);e&&n.push(e)}else if("union"===t.kind&&t.objectType){const i=r(e,{...t,...t.objectType});n.push(i)}return`syntax = "proto3";\n\n${n.join("\n\n")}\n`}},6622:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateReasonTypes=void 0;const i=t(6787);function r(e,n){const t=n.members.map((n=>{const t=s(e,n.type);if(t){const e=n.optional?`option(${(0,i.toLowerCase)(t)})`:(0,i.toLowerCase)(t);return`  ${n.name}: ${e}`}}));return`type ${(0,i.toLowerCase)(n.name)} = {\n  .\n${t.filter((e=>e)).map((e=>e+",")).join("\n")}\n};`}function s(e,n){let t="";if("array"===n.kind){const r=s(e,n.type);r&&(t=`list(${(0,i.toLowerCase)(r)})`)}else"enum"===n.kind?t=n.name:"reference"===n.kind?t=function(e,n){const t=e.find((e=>"enum"===e.kind&&e.name===n.name));return t&&"enum"===t.kind&&"string"===t.type?"string":n.name}(e,n):"number"===n.kind?t="number"===n.type||"float"===n.type||"double"===n.type?"float":"int":"string"===n.kind?t="string":"boolean"===n.kind&&(t="bool");return t}n.generateReasonTypes=function(e){const n=[];for(const t of e)if("object"===t.kind)n.push(r(e,t));else if("enum"===t.kind){const e=t.members.map((e=>`  | ${(0,i.toUpperCase)(e.name)}`)).join("\n");n.push(`type ${(0,i.toLowerCase)(t.name)} =\n${e};`)}else"union"===t.kind&&t.objectType&&n.push(r(e,{...t,...t.objectType}));return n.join("\n\n")+"\n"}},157:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.generateRustTypes=void 0;const i=t(655),r=t(6787),s=(0,i.__importDefault)(t(1865));function o(e,n){const t=e.members.map((e=>{const t=p(n,e.type,e.optional);if(t){const n=(0,s.default)(e.name);return e.name===n?`  pub ${(0,s.default)(e.name)}: ${t}`:`  #[serde(rename = "${e.name}")] pub ${(0,s.default)(e.name)}: ${t}`}}));return`#[derive(Serialize, Deserialize, Debug)]\npub struct ${e.name} {\n${t.filter((e=>e)).map((e=>e+",")).join("\n")}\n}`}function a(e){const n=[];let t=!1;if("string"===e.type){t=!0;const i=e.members.map((e=>`  ${(0,r.toUpperCase)(e.name)},`)).join("\n");n.push(`#[derive(Debug)]\npub enum ${e.name} {\n${i}\n}`);const s=e.members.map((n=>`      ${e.name}::${(0,r.toUpperCase)(n.name)} => "${n.value}",`)).join("\n");n.push(`impl Serialize for ${e.name} {\n  fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n  where\n    S: Serializer,\n  {\n    serializer.serialize_str(match *self {\n${s}\n    })\n  }\n}`);const o=e.members.map((n=>`      "${n.value}" => Ok(${e.name}::${(0,r.toUpperCase)(n.name)}),`)).join("\n");n.push(`impl<'de> Deserialize<'de> for ${e.name} {\n  fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>\n  where\n    D: Deserializer<'de>,\n  {\n    let s = String::deserialize(deserializer)?;\n    match s.as_str() {\n${o}\n      _ => Err(Error::custom("wrong enum value.")),\n    }\n  }\n}`)}else{const t=e.members.map((e=>`  ${(0,r.toUpperCase)(e.name)} = ${e.value},`)).join("\n");n.push(`#[derive(Serialize, Deserialize, Debug)]\npub enum ${e.name} {\n${t}\n}`)}return{messages:n,useSerde:t}}function m(e,n){const t=e.members.map((e=>{const t=p(n,e,void 0);if(t)return`  ${t}(${t})`}));return`#[derive(Serialize, Deserialize, Debug)]\npub enum ${e.name} {\n${t.filter((e=>e)).map((e=>e+",")).join("\n")}\n}`}function p(e,n,t=!1){let i="";if("array"===n.kind){const t=p(e,n.type,void 0);t&&(i=`Vec<${t}>`)}else"enum"===n.kind?i="string"===n.name?"String":"boolean"===n.name?"bool":n.name:"reference"===n.kind?i=function(e,n){const t=e.find((e=>"enum"===e.kind&&e.name===n.name));return t&&"enum"===t.kind&&"string"===t.type?"String":n.name}(e,n):"number"===n.kind?i=function(e){return"number"===e.type||"float"===e.type?"f32":"double"===e.type?"f64":"integer"===e.type||"int32"===e.type||"sint32"===e.type||"sfixed32"===e.type?"i32":"uint32"===e.type||"fixed32"===e.type?"u32":"int64"===e.type||"sint64"===e.type||"sfixed64"===e.type?"i64":"uint64"===e.type||"fixed64"===e.type?"u64":e.type}(n):"string"===n.kind?i="String":"boolean"===n.kind&&(i="bool");return t?`Option<${i}>`:i}n.generateRustTypes=function(e){const n=[];let t=!1;for(const r of e)if("object"===r.kind){const t=o(r,e);n.push(t)}else if("enum"===r.kind){const{messages:e,useSerde:i}=a(r);n.push(...e),i&&(t=!0)}else if("union"===r.kind){const t=m(r,e);n.push(t)}else if("reference"===r.kind){const e=`type ${(i=r).newName} = ${i.name};`;n.push(e)}var i;return t&&n.unshift("extern crate serde;\n\npub use self::serde::ser::{Serialize, Serializer};\npub use self::serde::de::{Deserialize, Deserializer, Error};"),n.join("\n\n")+"\n"}},9169:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.getDeclarationParameters=n.generateSwaggerDoc=void 0;const i=t(6787),r=t(8073);n.generateSwaggerDoc=function(e,n){const t={},s=[];for(const n of e.declarations)if("function"===n.kind&&n.path&&n.method){t[n.path]||(t[n.path]={}),s.push(...(0,i.getReferencesInType)(n.type).map((e=>e.name)));const a=o(n,e.declarations),m=a.some((e=>"file"===e.type.kind));t[n.path][n.method]={consumes:m?["multipart/form-data"]:void 0,operationId:n.name,parameters:a.map((n=>{s.push(...(0,i.getReferencesInType)(n.type).map((e=>e.name)));const t=(0,r.getJsonSchemaProperty)(n.type,e);return{name:n.name,required:!n.optional,in:m?"formData":n.in,schema:m?void 0:t,type:m?t.type:void 0,description:m?void 0:n.type.description}})),summary:n.summary,description:n.description,deprecated:n.deprecated,tags:n.tags,responses:{200:{schema:(0,r.getJsonSchemaProperty)(n.type,e)}}}}const a=(0,r.getAllDefinitions)(e),m={};for(const e of s){const n=(0,r.getReferencedDefinitions)(e,a,[]);Object.assign(m,n)}let p={swagger:"2.0",paths:t,definitions:m};return n&&(p={...n,...p}),JSON.stringify(p,null,2)};const s=["path","query","body","cookie"];function o(e,n){const t=[];for(const i of e.parameters)if(!i.in&&s.includes(i.name)){const e=i.type;if("reference"===e.kind){const r=n.find((n=>n.name===e.name));r&&"object"===r.kind&&t.push(...r.members.map((e=>({...e,in:i.name}))))}else if("union"===e.kind)for(const r of e.members)if("reference"===r.kind){const e=n.find((e=>e.name===r.name));e&&"object"===e.kind&&t.push(...e.members.map((e=>({...e,in:i.name}))))}else"object"===r.kind&&t.push(...r.members.map((e=>({...e,in:i.name}))));else"object"===e.kind&&t.push(...e.members.map((e=>({...e,in:i.name}))))}else t.push(i);return t}n.getDeclarationParameters=o},8367:function(e,n){"use strict";function t(e){return`${e.comments?e.comments.join("\n")+"\n":""}type ${e.newName} = ${e.name}`}function i(e){const n=e.comments?e.comments.join("\n")+"\n":"",t=e.enums?e.enums.map((e=>JSON.stringify(e))).join(" | "):e.kind;return`${n}type ${e.name} = ${t}`}function r(e){const n=e.members.map((e=>c(e)));return`${e.comments?e.comments.join("\n")+"\n":""}type ${e.name} = ${n.join(" | ")}`}function s(e){const n=e.members.map((e=>"  "+(e.comments?e.comments.join("\n")+"\n  ":"")+u(e)));return e.additionalProperties&&n.push("  "+o(e.additionalProperties)),`${e.comments?e.comments.join("\n")+"\n":""}interface ${e.name} {\n${n.join("\n")}\n}`}function o(e){return`[name: string]: ${!0===e?"unknown":c(e)}`}function a(e){const n=e.members.map(m);return`const enum ${e.name} {\n${n.join("\n")}\n}`}function m(e){const n=JSON.stringify(e.value);return`  ${e.name} = ${n},`}function p(e){const n=e.parameters.map((e=>u(e))),t=c(e.type);return`${e.comments?e.comments.join("\n")+"\n":""}declare function ${e.name}(${n.join(", ")}): ${t}`}function u(e,n){const t=e.optional?"?":"";return`${e.name}${t}: ${c(e.type,n)}`}function c(e,n){if(n){const t=n(e);if(void 0!==t)return t}if("enum"===e.kind)return e.enums.map((e=>JSON.stringify(e))).join(" | ");if("string"===e.kind&&e.templateLiteral)return function(e){let n="";for(const t of e)"string"===t.kind?n+="${string}":"number"===t.kind?n+="${number}":"boolean"===t.kind?n+="${boolean}":"enum"===t.kind&&(1===t.enums.length?n+=t.enums[0]:n+=`\${${t.enums.map((e=>JSON.stringify(e))).join(" | ")}}`);return`\`${n}\``}(e.templateLiteral);if("boolean"===e.kind||"number"===e.kind||"string"===e.kind||"null"===e.kind)return e.kind;if("array"===e.kind){const t=c(e.type,n);return e.minItems&&e.maxItems&&e.minItems===e.maxItems?`[${Array.from({length:e.minItems}).fill(t).join(", ")}]`:("enum"===e.type.kind||"number"===e.type.kind||"string"===e.type.kind)&&e.type.enums&&e.type.enums.length>1?`(${t})[]`:`${t}[]`}if("reference"===e.kind)return e.name;if("file"===e.kind)return"File";if("void"===e.kind)return"void";if("union"===e.kind)return e.members.map((e=>c(e,n))).join(" | ");if("object"===e.kind){const t=e.members.map((e=>u(e,n)));return e.additionalProperties&&t.push(o(e.additionalProperties)),`{ ${t.join(", ")} }`}return"map"===e.kind?`{ [name: ${c(e.key,n)}]: ${c(e.value,n)} }`:"unknown"}Object.defineProperty(n,"__esModule",{value:!0}),n.generateTypescriptOfType=n.generateTypescriptOfFunctionParameter=n.generateTypescriptOfFunctionDeclaration=n.generateTypescriptOfEnumMember=n.generateTypescriptOfEnumDeclaration=n.generateTypescriptOfObjectAdditionalProperties=n.generateTypescriptOfObjectDeclaration=n.generateTypescriptOfUnionDeclaration=n.generateTypescriptOfStringOrNumberDeclaration=n.generateTypescriptOfReferenceDeclaration=n.generateTypescript=void 0,n.generateTypescript=function(e){const n=[];for(const o of e)"function"===o.kind?o.name&&n.push(p(o)):"enum"===o.kind?n.push(a(o)):"object"===o.kind?n.push(s(o)):"union"===o.kind?n.push(r(o)):"string"===o.kind||"number"===o.kind?n.push(i(o)):"reference"===o.kind&&n.push(t(o));return`/* eslint-disable */\n\n${n.join("\n\n")}\n`},n.generateTypescriptOfReferenceDeclaration=t,n.generateTypescriptOfStringOrNumberDeclaration=i,n.generateTypescriptOfUnionDeclaration=r,n.generateTypescriptOfObjectDeclaration=s,n.generateTypescriptOfObjectAdditionalProperties=o,n.generateTypescriptOfEnumDeclaration=a,n.generateTypescriptOfEnumMember=m,n.generateTypescriptOfFunctionDeclaration=p,n.generateTypescriptOfFunctionParameter=u,n.generateTypescriptOfType=c},6787:function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.templateLiteralToPattern=n.getReferencesInType=n.isValidReference=n.warn=n.toLowerCase=n.toUpperCase=void 0,n.toUpperCase=function(e){return e[0]?.toUpperCase()+e.substring(1)},n.toLowerCase=function(e){return e[0]?.toLowerCase()+e.substring(1)},n.warn=function(e,n){console.warn(`Warning for ${n}: ${e.file}:${e.line+1}:${e.character+1}`)},n.isValidReference=function(e,n){for(const t of e)if("reference"===t.kind){if(t.newName===n)return!0}else if(t.name===n)return!0;return!1},n.getReferencesInType=function e(n){const t=[];if("reference"===n.kind)t.push(n);else if("object"===n.kind)for(const i of n.members)t.push(...e(i.type));else"array"===n.kind&&t.push(...e(n.type));return t},n.templateLiteralToPattern=function(e){let n="";for(const t of e)"string"===t.kind?n+=".*":"number"===t.kind?n+="\\d+":"boolean"===t.kind?n+="true|false":"enum"===t.kind&&(n+=t.enums.map((e=>e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"))).join("|"));return`^${n}$`}},8882:function(e,n,t){"use strict";var i=t(655),r=t(5423),s=t.n(r),o=t(6252),a=t(9963),m=t(4197),p=t(3577),u=t(8367),c="types-as-schema:source",l=(0,o.aZ)({data:function(){return{protobuf:"",options:["protobuf"],selectedOption:"protobuf",graphqlSchema:"",reasonTypes:"",ocamlTypes:"",rustTypes:"",mongooseSchema:"",graphqlRootType:"",swaggerDoc:"",custom:"",typescript:"",markdown:"",debug:"",innerSource:localStorage.getItem(c)||"type TypeLiteral = {\n  typeLiteralMember1: number;\n  typeLiteralMember2: string;\n}\n\n/**\n * @minProperties 1\n * @maxProperties 1\n */\ninterface Interface {\n  interfaceMember1?: number\n  interfaceMember2?: string\n\n  [name: string]: any\n}\n\ntype TypeUnion1 = TypeLiteral | {\n  typeUnionMember1: number;\n  typeUnionMember2: string;\n}\ntype TypeUnion2 =\n  {\n    kind: StringEnum.enumMember1;\n    typeUnionMember1: string;\n  } | {\n    kind: StringEnum.enumMember2;\n    typeUnionMember2: string;\n  }\ntype TypeUnion3 =\n  {\n    kind: NumberEnum.enumMember1;\n    typeUnionMember1: string;\n  } | {\n    kind: NumberEnum.enumMember2;\n    typeUnionMember2: string;\n  }\ntype TypeUnion4 =\n  {\n    kind: 'foo';\n    typeUnionMember1: string;\n  } | {\n    kind: 'bar';\n    typeUnionMember2: string;\n  }\ntype TypeUnion5 = TypeLiteral | Interface\ntype TypeUnion8 = 'foo' | 'bar' | null | false\nexport type TypeUnion9 = 'foo' | 'bar'\ntype TypeUnion = {\n  typeUnionMember1: TypeUnion1;\n  typeUnionMember2: TypeUnion2;\n  typeUnionMember3: TypeUnion3;\n  typeUnionMember4: TypeUnion4;\n  typeUnionMember5: TypeUnion5;\n  typeUnionMember6: string | null | false;\n  typeUnionMember7: 'foo' | 'bar';\n  typeUnionMember8: TypeUnion8;\n  typeUnionMember9: TypeUnion9;\n}\n\ninterface InterfaceExtends extends Interface {\n  interfaceExtendsMember1: number\n  interfaceExtendsMember2: string\n}\n\ntype TypeIntersection1 = Interface & {\n  typeIntersectionMember1: number;\n  typeIntersectionMember2: string;\n}\ntype TypeIntersection2 =\n  {\n    typeIntersectionMember1: number;\n    typeIntersectionMember2: string;\n  } & {\n    typeIntersectionMember3: number;\n    typeIntersectionMember4: string;\n  }\n\ntype TypeIntersection = {\n  typeIntersectionMember1: TypeIntersection1;\n  typeIntersectionMember2: TypeIntersection2;\n  typeIntersectionMember3: TypeLiteral & Interface;\n}\n\ntype TypeUnionAndIntersection =\n  {\n    typeIntersectionMember1: number;\n  } & (\n    {\n      kind: NumberEnum.enumMember1;\n      typeUnionMember1: string;\n    } | {\n      kind: NumberEnum.enumMember2;\n      typeUnionMember2: string;\n    }\n  )\n\nexport type TaggedField = {\n  /**\n   * @tag 2\n   */\n  taggedFieldMember1: number;\n  /**\n   * @tag 3\n   */\n  taggedFieldMember2: string;\n}\n\nexport const enum StringEnum {\n  enumMember1 = 'enum member 1',\n  enumMember2 = 'enum member 2'\n}\nexport const enum NumberEnum {\n  enumMember1,\n  enumMember2\n}\nexport const enum NumberEnum2 {\n  enumMember1 = 3,\n  enumMember2 = 4\n}\nexport type Enum = {\n  stringEnum: StringEnum;\n  numberEnum: NumberEnum;\n  numberEnum2: NumberEnum2;\n  stringEnum2: 'foo';\n}\n\ntype integer = number\ntype uint32 = number\ntype int32 = number\ntype sint32 = number\ntype fixed32 = number\ntype sfixed32 = number\ntype uint64 = number\ntype int64 = number\ntype sint64 = number\ntype fixed64 = number\ntype sfixed64 = number\ntype float = number\ntype double = number\n\ntype NumberType = {\n  /**\n   * @multipleOf 10\n   * @minimum 70\n   * @maximum 90\n   * @exclusiveMinimum 70\n   * @exclusiveMaximum 90\n   */\n  numberMember: number;\n\n  integerMember: integer;\n\n  uint32Member: uint32;\n  int32Member: int32;\n  sint32Member: sint32;\n  fixed32Member: fixed32;\n  sfixed32Member: sfixed32;\n\n  uint64Member: uint64;\n  int64Member: int64;\n  sint64Member: sint64;\n  fixed64Member: fixed64;\n  sfixed64Member: sfixed64;\n\n  floatMember: float;\n  doubleMember: double;\n\n  /**\n   * @title foo\n   * @description bar\n   */\n  titleMember: number;\n}\n\ntype StringType = {\n  /**\n   * @minLength 10\n   * @maxLength 20\n   * @pattern ^[A-z]{3}$\n   */\n  stringMember: string;\n}\n\ntype ArrayType = {\n  /**\n   * @itemMinLength 10\n   * @itemMaxLength 20\n   * @itemPattern ^[A-z]{3}$\n   */\n  arrayType1: string[];\n  /**\n   * @uniqueItems\n   * @minItems 1\n   * @maxItems 10\n   */\n  arrayType2: TypeLiteral[];\n  arrayType3: { literal: number }[];\n  /**\n   * @itemMultipleOf 100\n   * @itemMinimum 100\n   * @itemMaximum 200\n   * @itemExclusiveMinimum 300\n   * @itemExclusiveMaximum 400\n   */\n  arrayType4: uint32[];\n  arrayType5: { literal: number | string }[];\n  arrayType6: { literal: number | null }[];\n  arrayType7: { literal: TypeLiteral | null }[];\n  arrayType8: Array<{ literal: number }>;\n  arrayType9: ReadonlyArray<string>;\n  arrayType10: Array<'foo' | 'bar'>;\n}\n\ntype MapType7 = {\n  foo: string\n  [name: string]: string\n}\n\ntype MapType8 = {\n  [name: string]: string\n}\n\ntype MapType = {\n  mapType: { [name: string]: number };\n  mapType2: { [name: string]: TypeLiteral };\n  mapType3: { [name: string]: { literal: number } };\n  mapType4: { [name: string]: uint32 };\n  mapType5: { [name: string]: any };\n  mapType6: {\n    foo: number\n    [name: string]: number\n  };\n  mapType7: MapType7\n  mapType8: MapType8\n}\n\ntype ID = any\n\ntype Parameter = {\n  /**\n   * @param {string} name\n   * @param {number} age\n   */\n  member1: string\n  /**\n   * @param {string} [name]\n   */\n  member2: string\n}\n\ntype DefaultValue = {\n  /**\n   * @default foo\n   */\n  stringMember: string\n  /**\n   * @default 123\n   */\n  numberMember: number\n  /**\n   * @default true\n   */\n  booleanMember: boolean\n  /**\n   * @default 'foo bar'\n   */\n  stringMember2: string\n  /**\n   * @default ''\n   */\n  stringMember3: string\n  /**\n   * @default []\n   */\n  arrayMember: any[]\n  /**\n   * @default {}\n   */\n  objectMember: { foo: string }\n  /**\n   * @default 123\n   */\n  numberMember1: integer\n  /**\n   * @default {}\n   */\n  objectMember2: TypeLiteral\n}\n\ntype TypeReferenceMember2 = TypeLiteral\n\ntype ReferenceType = {\n  typeReferenceMember1: TypeLiteral\n  typeReferenceMember2: TypeReferenceMember2\n}\n\nclass ClassType1 {\n  classMember1: string\n  classMember2: number\n}\n\nclass ClassType2 extends ClassType1 {\n  constructor(public classMember3: string) { super() }\n  classMember4: number\n}\n\nclass ClassType3 {\n  classMember1 = 'foo'\n  classMember2 = 123\n  classMember3 = false\n  classMember4: string = 'foo'\n  classMember5 = ['foo']\n  classMember6 = { a: 1 }\n}\n\ntype ClassType = {\n  classType1: ClassType1;\n  classType2: ClassType2;\n  classType3: ClassType3;\n}\n\ntype Circular = {\n  children: Circular[]\n}\n\nimport { OuterType } from './case2'\n\n/**\n * @entry cases.json\n * @additionalProperties\n */\nexport type EntryType = {\n  optionalMember?: string;\n  booleanMember: boolean;\n  stringMember: string;\n  numberType: NumberType;\n  arrayType: ArrayType;\n  typeLiteral: { literal: number };\n  referenceType: ReferenceType;\n  interfaceType: Interface;\n  typeUnion: TypeUnion;\n  interfaceExtends: InterfaceExtends;\n  typeIntersection: TypeIntersection;\n  typeUnionAndIntersection: TypeUnionAndIntersection;\n  mapType: MapType;\n  taggedField: TaggedField;\n  enum: Enum;\n  stringNumber: StringType;\n  id: ID;\n  parameter: Parameter;\n  optionalArrayMember?: string[];\n  tupleType: [string, string];\n  defaultType: DefaultValue;\n  anyType: any;\n  classType: ClassType;\n  circular: Circular;\n  outerType: OuterType;\n  typeAlias: TypeAlias;\n  pick: Pick<TypeAlias, 'result'>\n  pick2: Pick<CreateInput, 'member1' | 'member2'>\n  pick3: CreateInput2\n  unknown: LayoutMetadataMap\n  template: `1-${'left' | 'right'}-${'top' | 'bottom'}`\n  template2: `https://${string}.svg`\n  template3: `/api/users/${number}`\n  template4: `https://${string}.${'png' | 'jpg'}`\n  template5: `/api/users?isAdmin=${boolean}`\n  keyof: keyof CreateInput2\n}\n\nexport interface Mutation {\n  create(input: CreateInput): Promise<MutationResult>\n}\n\nexport interface CreateInput {\n  member1: string\n  member2: File\n  member3: CreateInputMember3\n}\n\nexport interface MutationResult {\n  result: boolean\n}\n\nexport abstract class Query {\n  abstract user(id: string): GetResult\n  abstract users(): GetResult\n}\n\nexport interface GetResult {\n  result: Result\n}\n\ninterface Result {\n  member1: string\n\n  member2(input: string): string\n}\n\ninterface CreateInputMember3 {\n  member1: string\n}\n\nexport interface TypeAlias {\n  result: Result2\n}\n\ntype Result2 = Result3\n\ninterface Result3 {\n  result3: string\n}\n\ninterface Pet {\n  id?: number\n  name: string\n  photoUrls: string[]\n  status: 'available' | 'pending' | 'sold'\n}\n\n/**\n * @method get\n * @path /pet/{id}\n * @summary get pet by id.\n * @description get pet by id\n * @deprecated\n * @tags pet\n */\nexport declare function getPetById(\n  /**\n   * @in query\n   */\n  status: 'health' | 'sick',\n  /**\n   * @in body\n   * @minItems 1\n   */\n  tags: string[],\n  /**\n   * @in body\n   */\n  pet: Pet,\n  /**\n   * @in path\n   * @description pet id\n   * @minimum 1\n   * @default 2\n   */\n  id: integer,\n  /**\n   * @in query\n   * @default asc\n   */\n  sortType: 'asc' | 'desc',\n): Promise<Pet>\n\ntype ObjectId = any\n\nexport interface MongooseScheme {\n  objectId: ObjectId\n  date: Date\n  decimal128: Decimal128\n  /**\n   * @index\n   * @autoincrement\n   */\n  index1: string\n  /**\n   * @unique\n   */\n  index2: string\n  /**\n   * @sparse\n   * @select\n   * @alias index4\n   * @lowercase\n   * @uppercase\n   * @trim\n   */\n  index3: string\n  buffer: Buffer\n}\n\ntype Decimal128 = number\ntype Buffer = any\n\ntype CreateInput2 = Pick<CreateInput, 'member1' | 'member2'>\n\ninterface LayoutMetadataMap {\n  [layoutId: string]: Metadata\n}\n\ninterface Metadata {\n  [key: string]: unknown\n}\n\nexport type WsCommand =\n  | CreateBlog\n  | UpdateBlog\n\nexport type WsPush =\n  | BlogChange\n\n/**\n * @public\n */\nexport interface CreateBlog {\n  type: 'create blog'\n  content: string\n}\n\n/**\n * @public\n */\nexport interface UpdateBlog {\n  type: 'update blog'\n  id: number\n  content: string\n}\n\n/**\n * @public\n */\nexport interface BlogChange {\n  type: 'blog change'\n  id: number\n  content: string\n}\n\n@Controller('/api/v1/tests')\nexport class TestController {\n  @Get()\n  @Bar(TypeLiteral)\n  get(\n    @Query('foo') foo: number,\n    @Query('foo') bar: string,\n  ) {\n  }\n}\n\ntype Template = `${'left' | 'right'}-${'top' | 'bottom'}`\n\n/**\n * @method get\n * @path /download\n */\nexport declare function downloadFile(): Promise<File>\n\n/**\n * @method get\n * @path /empty\n */\nexport declare function returnEmpty(): Promise<void>\n\n/**\n * @method post\n * @path /upload\n */\nexport declare function uploadFile(\n  /**\n   * @in body\n   */\n  file: File,\n): Promise<void>\n\nexport default () => {\n  return 1\n}\n\nexport function Test1() {\n  return 1\n}\n\nexport const Test2 = () => {\n  return 1\n}\n\n/**\n * @method get\n * @path /pet/{id}\n * @summary get pet by id.\n * @description get pet by id\n * @deprecated\n * @tags pet\n */\ntype getPetById = (\n  /**\n   * @in query\n   */\n  status: 'health' | 'sick',\n  /**\n   * @in body\n   * @minItems 1\n   */\n  tags: string[],\n  /**\n   * @in body\n   */\n  pet: Pet,\n  /**\n   * @in path\n   * @description pet id\n   * @minimum 1\n   * @default 2\n   */\n  id: integer,\n  /**\n   * @in query\n   * @default asc\n   */\n  sortType: 'asc' | 'desc',\n) => Promise<Pet>\n\ntype Boolean = boolean\n",jsonSchemas:[]}},computed:{source:{get:function(){return this.innerSource},set:function(e){this.innerSource=e,localStorage.setItem(c,e)}},jsonSchema:function(){var e=this;if(this.selectedOption){var n=this.jsonSchemas.find((function(n){return n.entry===e.selectedOption}));if(n)return n.content}return""}},methods:{generate:function(){var e,n;if(this.source){var t=s().createSourceFile("",this.source,s().ScriptTarget.ESNext,!1,s().ScriptKind.TS),r=new m.Generator([t],!1,void 0,(function(){return""}));this.protobuf=r.generateProtobuf(),this.options=["protobuf"],this.jsonSchemas=r.generateJsonSchemas().map((function(e){return{entry:e.entry,content:JSON.stringify(e.schema,null,"  ")}}));try{for(var o=(0,i.__values)(this.jsonSchemas),a=o.next();!a.done;a=o.next()){var p=a.value;this.options.push(p.entry)}}catch(n){e={error:n}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(e)throw e.error}}this.graphqlSchema=r.generateGraphqlSchema(),this.options.push("graphql schema"),this.reasonTypes=r.generateReasonTypes(),this.options.push("reason types"),this.ocamlTypes=r.generateOcamlTypes(),this.options.push("ocaml types"),this.rustTypes=r.generateRustTypes(),this.options.push("rust types"),this.mongooseSchema=r.generateMongooseSchema(),this.options.push("mongoose schema"),this.graphqlRootType=r.generateGraphqlRootType((function(){return""})),this.options.push("graphql root type"),this.swaggerDoc=r.generateSwaggerDoc(),this.options.push("swagger doc"),this.custom=d(r.declarations),this.options.push("custom"),this.typescript=r.generateTypescript(),this.options.push("typescript"),this.markdown=r.generateMarkdownDoc(),this.options.push("markdown"),this.debug=JSON.stringify(r.declarations,null,2),this.options.push("debug")}}},render:function(e,n){return(0,o.wg)(),(0,o.iD)("div",{class:"app"},[(0,o.wy)((0,o._)("textarea",{class:"source","onUpdate:modelValue":n[0]||(n[0]=function(n){return e.source=n})},null,512),[[a.nr,e.source]]),(0,o._)("div",{class:"result"},[(0,o._)("button",{onClick:n[1]||(n[1]=function(n){return e.generate()})},"generate"),(0,o._)("div",{class:"options"},[(0,o.wy)((0,o._)("select",{"onUpdate:modelValue":n[2]||(n[2]=function(n){return e.selectedOption=n})},[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(e.options,(function(e){return(0,o.wg)(),(0,o.iD)("option",{value:e,key:e},(0,p.zw)(e),9,["value"])})),128))],512),[[a.bM,e.selectedOption]])]),"protobuf"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:0,class:"protobuf"},(0,p.zw)(e.protobuf),1)):(0,o.kq)("v-if",!0),e.jsonSchema?((0,o.wg)(),(0,o.iD)("pre",{key:1,class:"json-schema"},(0,p.zw)(e.jsonSchema),1)):(0,o.kq)("v-if",!0),"graphql schema"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:2,class:"graphql-schema"},(0,p.zw)(e.graphqlSchema),1)):(0,o.kq)("v-if",!0),"reason types"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:3,class:"reason-types"},(0,p.zw)(e.reasonTypes),1)):(0,o.kq)("v-if",!0),"ocaml types"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:4,class:"ocaml-types"},(0,p.zw)(e.ocamlTypes),1)):(0,o.kq)("v-if",!0),"rust types"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:5,class:"rust-types"},(0,p.zw)(e.rustTypes),1)):(0,o.kq)("v-if",!0),"mongoose schema"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:6,class:"mongoose-schema"},(0,p.zw)(e.mongooseSchema),1)):(0,o.kq)("v-if",!0),"graphql root type"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:7,class:"graphql-root-type"},(0,p.zw)(e.graphqlRootType),1)):(0,o.kq)("v-if",!0),"swagger doc"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:8,class:"swagger-doc"},(0,p.zw)(e.swaggerDoc),1)):(0,o.kq)("v-if",!0),"custom"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:9,class:"custom"},(0,p.zw)(e.custom),1)):(0,o.kq)("v-if",!0),"typescript"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:10,class:"typescript"},(0,p.zw)(e.typescript),1)):(0,o.kq)("v-if",!0),"markdown"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:11,class:"markdown"},(0,p.zw)(e.markdown),1)):(0,o.kq)("v-if",!0),"debug"===e.selectedOption?((0,o.wg)(),(0,o.iD)("pre",{key:12,class:"debug"},(0,p.zw)(e.debug),1)):(0,o.kq)("v-if",!0)])])}}),d=function(e){var n,t,r=[];try{for(var s=(0,i.__values)(e),o=s.next();!o.done;o=s.next()){var a=o.value;if("function"===a.kind){var m=(0,i.__spreadArray)(["functionName: '".concat(a.name,"'")],(0,i.__read)(a.parameters.map((function(e){return(0,u.generateTypescriptOfFunctionParameter)(e)}))),!1);r.push("  (".concat(m.join(", "),"): string"))}}}catch(e){n={error:e}}finally{try{o&&!o.done&&(t=s.return)&&t.call(s)}finally{if(n)throw n.error}}return"type TestType = {\n".concat(r.join("\n"),"\n}\n")};(0,a.ri)(l).mount("#container")},3411:function(e){function n(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}n.keys=function(){return[]},n.resolve=n,n.id=3411,e.exports=n},2183:function(){},3024:function(){},2715:function(){},3611:function(){},8353:function(){},1210:function(){},3454:function(){}},t={};function i(e){var r=t[e];if(void 0!==r)return r.exports;var s=t[e]={exports:{}};return n[e].call(s.exports,s,s.exports,i),s.exports}i.m=n,e=[],i.O=function(n,t,r,s){if(!t){var o=1/0;for(u=0;u<e.length;u++){t=e[u][0],r=e[u][1],s=e[u][2];for(var a=!0,m=0;m<t.length;m++)(!1&s||o>=s)&&Object.keys(i.O).every((function(e){return i.O[e](t[m])}))?t.splice(m--,1):(a=!1,s<o&&(o=s));if(a){e.splice(u--,1);var p=r();void 0!==p&&(n=p)}}return n}s=s||0;for(var u=e.length;u>0&&e[u-1][2]>s;u--)e[u]=e[u-1];e[u]=[t,r,s]},i.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(n,{a:n}),n},i.d=function(e,n){for(var t in n)i.o(n,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},function(){var e={826:0};i.O.j=function(n){return 0===e[n]};var n=function(n,t){var r,s,o=t[0],a=t[1],m=t[2],p=0;if(o.some((function(n){return 0!==e[n]}))){for(r in a)i.o(a,r)&&(i.m[r]=a[r]);if(m)var u=m(i)}for(n&&n(t);p<o.length;p++)s=o[p],i.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return i.O(u)},t=self.webpackChunktypes_as_schema=self.webpackChunktypes_as_schema||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))}();var r=i.O(void 0,[736],(function(){return i(8882)}));r=i.O(r)}();