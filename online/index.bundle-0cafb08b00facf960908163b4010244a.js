!function(n){function e(e){for(var i,r,a=e[0],u=e[1],d=e[2],p=0,c=[];p<a.length;p++)r=a[p],o[r]&&c.push(o[r][0]),o[r]=0;for(i in u)Object.prototype.hasOwnProperty.call(u,i)&&(n[i]=u[i]);for(f&&f(e);c.length;)c.shift()();return s.push.apply(s,d||[]),t()}function t(){for(var n,e=0;e<s.length;e++){for(var t=s[e],i=!0,a=1;a<t.length;a++){var u=t[a];0!==o[u]&&(i=!1)}i&&(s.splice(e--,1),n=r(r.s=t[0]))}return n}var i={},o={0:0},s=[];function r(e){if(i[e])return i[e].exports;var t=i[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=n,r.c=i,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)r.d(t,i,function(e){return n[e]}.bind(null,i));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="";var a=window.webpackJsonp=window.webpackJsonp||[],u=a.push.bind(a);a.push=e,a=a.slice();for(var d=0;d<a.length;d++)e(a[d]);var f=u;s.push([194,1]),t()}({11:function(n,e,t){"use strict";(function(n){Object.defineProperty(e,"__esModule",{value:!0});const i=t(12),o=i.__importDefault(t(15)),s=i.__importStar(t(41));e.toUpperCase=function(n){return n[0].toUpperCase()+n.substring(1)},e.toLowerCase=function(n){return n[0].toLowerCase()+n.substring(1)},e.warn=function(n,e){console.warn(`Warning for ${e}: ${n.file}:${n.line+1}:${n.character+1}`)},e.getPosition=function(e,t){return{file:s.relative(n.cwd(),t.fileName),...o.default.getLineAndCharacterOfPosition(t,e.getStart(t))}}}).call(this,t(5))},127:function(n,e){},128:function(n,e){},183:function(n,e){function t(n){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}t.keys=function(){return[]},t.resolve=t,n.exports=t,t.id=183},184:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(12).__importDefault(t(15)),o=t(11);e.Parser=class{constructor(n){this.sourceFiles=n,this.declarations=[]}parse(){for(const n of this.sourceFiles)i.default.forEachChild(n,e=>{e.kind===i.default.SyntaxKind.EnumDeclaration&&this.preHandleEnumDeclaration(e,n)});for(const n of this.sourceFiles)i.default.forEachChild(n,e=>{this.handleSourceFile(e,n)});return this.declarations}preHandleEnumDeclaration(n,e){const t=n.members;if(t.length>0){const i=t[0];if(i.initializer)this.handleEnumDeclarationInitializer(n,t,i.initializer,e);else{const i={kind:"enum",name:n.name.text,type:"uint32",members:[],position:o.getPosition(n,e)};let s=0;for(const n of t)if(n.initializer){const{name:t,value:o}=this.getExpression(n.initializer,n.name,e);i.members.push({name:t,value:o}),s=o+1}else i.members.push({name:n.name.text,value:s}),s++;this.declarations.push(i)}}}handleEnumDeclarationInitializer(n,e,t,s){const r={kind:"enum",name:n.name.text,type:t.kind===i.default.SyntaxKind.StringLiteral?i.default.ClassificationTypeNames.stringLiteral:"uint32",members:[],position:o.getPosition(n,s)};for(const n of e)if(n.initializer){const{name:e,value:t}=this.getExpression(n.initializer,n.name,s);r.members.push({name:e,value:t})}this.declarations.push(r)}handleSourceFile(n,e){const t=this.getJsDocs(n,e),o=t.find(n=>"entry"===n.name);n.kind===i.default.SyntaxKind.TypeAliasDeclaration?this.handleTypeAliasDeclaration(n,t,o,e):n.kind===i.default.SyntaxKind.InterfaceDeclaration||n.kind===i.default.SyntaxKind.ClassDeclaration?this.handleInterfaceOrClassDeclaration(n,t,o,e):n.kind===i.default.SyntaxKind.FunctionDeclaration&&this.handleFunctionDeclaration(n,t,e)}handleFunctionDeclaration(n,e,t){const i=n.type?this.getType(n.type,t):{kind:void 0,position:o.getPosition(n,t)},s={kind:"function",name:n.name?n.name.text:"",type:i,optional:!!n.questionToken,parameters:n.parameters.map(n=>this.handleFunctionParameter(n,t))};for(const n of e)n.comment?"method"===n.name?s.method=n.comment:"path"===n.name?s.path=n.comment:"description"===n.name?s.description=n.comment:"summary"===n.name?s.summary=n.comment:"tags"===n.name&&(s.tags=n.comment.split(",")):"deprecated"===n.name&&(s.deprecated=!0);this.declarations.push(s)}handleFunctionParameter(n,e){const t=this.getParameter(n,e),i=this.getJsDocs(n,e);for(const n of i)n.comment&&"in"===n.name?t.in=n.comment:this.setJsDoc(n,t.type,e);return t}handleInterfaceOrClassDeclaration(n,e,t,i){if(this.declarations.some(e=>"enum"===e.kind&&e.name===n.name.text))return;let s,{members:r,minProperties:a,maxProperties:u,additionalProperties:d}=this.getObjectMembers(n.members,i);({minProperties:a,maxProperties:u,additionalProperties:s}=this.handleHeritageClauses(n,r,a,u)),s&&(d=s);const f={kind:"object",name:n.name.text,members:r,minProperties:a,maxProperties:void 0===d?u:void 0,additionalProperties:d,entry:t?t.comment:void 0,position:o.getPosition(n,i)};for(const n of e)this.setJsDocObject(n,f);this.declarations.push(f)}handleHeritageClauses(n,e,t,o){let s;if(n.heritageClauses)for(const r of n.heritageClauses)if(r.kind===i.default.SyntaxKind.HeritageClause)for(const n of r.types)n.kind===i.default.SyntaxKind.ExpressionWithTypeArguments&&({minProperties:t,maxProperties:o,additionalProperties:s}=this.handleExpressionWithTypeArguments(n.expression,e,t,o));return{minProperties:t,maxProperties:o,additionalProperties:s}}handleExpressionWithTypeArguments(n,e,t,i){const o=n.text;let s;this.preHandleType(o);const r=this.declarations.find(n=>"object"===n.kind&&n.name===o);if(r&&"object"===r.kind){s=r.additionalProperties;for(const n of r.members)e.every(e=>e.name!==n.name)&&(e.push(n),i++,n.optional||t++)}return{minProperties:t,maxProperties:i,additionalProperties:s}}handleTypeAliasDeclaration(n,e,t,s){if(n.type.kind===i.default.SyntaxKind.ArrayType)this.handleArrayTypeInTypeAliasDeclaration(n.type,n.name,e,t,s);else if(n.type.kind===i.default.SyntaxKind.TypeLiteral||n.type.kind===i.default.SyntaxKind.UnionType||n.type.kind===i.default.SyntaxKind.IntersectionType)this.handleTypeLiteralOrUnionTypeOrIntersectionType(n.type,n.name,e,t,s);else if(n.type.kind===i.default.SyntaxKind.TypeReference){const e=n.type,t={kind:"reference",newName:n.name.text,name:e.typeName.text,position:o.getPosition(n,s)};this.declarations.push(t)}}handleTypeLiteralOrUnionTypeOrIntersectionType(n,e,t,s,r){if(n.kind===i.default.SyntaxKind.UnionType){const t=n;if(t.types.every(n=>n.kind===i.default.SyntaxKind.LiteralType||n.kind===i.default.SyntaxKind.NullKeyword))return void this.handleUnionTypeOfLiteralType(t,e,r);if(t.types.every(n=>n.kind===i.default.SyntaxKind.TypeReference)){const n={kind:"union",name:e.text,members:t.types.map(n=>this.getType(n,r)),entry:s?s.comment:void 0,position:o.getPosition(e,r)};return void this.declarations.push(n)}}const{members:a,minProperties:u,maxProperties:d,additionalProperties:f}=this.getMembersInfo(n,r),p={kind:"object",name:e.text,members:a,minProperties:u,maxProperties:void 0===f?d:void 0,additionalProperties:f,entry:s?s.comment:void 0,position:o.getPosition(e,r)};for(const n of t)this.setJsDocObject(n,p);this.declarations.push(p)}handleUnionTypeOfLiteralType(n,e,t){let s;const r=[];for(const e of n.types)if(e.kind===i.default.SyntaxKind.LiteralType){const{type:n,value:t}=this.getEnumOfLiteralType(e);void 0!==n&&(s=n),void 0!==t&&r.push(t)}else e.kind===i.default.SyntaxKind.NullKeyword&&r.push(null);if(s)if("string"===s){const n={kind:"string",name:e.text,enums:r,position:o.getPosition(e,t)};this.declarations.push(n)}else if("number"===s){const n={kind:"number",type:s,name:e.text,enums:r,position:o.getPosition(e,t)};this.declarations.push(n)}else if("boolean"===s){const i={kind:"union",name:e.text,members:n.types.map(n=>this.getType(n,t)),entry:void 0,position:o.getPosition(e,t)};this.declarations.push(i)}}handleArrayTypeInTypeAliasDeclaration(n,e,t,i,s){const r=this.getType(n.elementType,s),a={kind:"array",name:e.text,type:r,entry:i?i.comment:void 0,position:o.getPosition(e,s)};for(const n of t)this.setJsDocArray(n,a,s);this.declarations.push(a)}getJsDocs(n,e){const t=n.jsDoc,i=[];if(t&&t.length>0)for(const n of t)if(n.tags)for(const t of n.tags)i.push(this.getJsDocFromTag(t,e));return i}getJsDocFromTag(n,e){let t,i,o;if("param"===n.tagName.text){const s=n.typeExpression;t=this.getType(s.type,e),i=n.name.text,o=n.isBracketed}return{name:n.tagName.text,type:t,paramName:i,comment:n.comment,optional:o}}getType(n,e){if(n.kind===i.default.SyntaxKind.StringKeyword)return{kind:"string",position:o.getPosition(n,e)};if(n.kind===i.default.SyntaxKind.NumberKeyword)return{kind:"number",type:"number",position:o.getPosition(n,e)};if(n.kind===i.default.SyntaxKind.BooleanKeyword)return{kind:"boolean",position:o.getPosition(n,e)};if(n.kind===i.default.SyntaxKind.TypeLiteral)return this.getTypeOfTypeLiteral(n,e);if(n.kind===i.default.SyntaxKind.ArrayType){const t=n;return{kind:"array",type:this.getType(t.elementType,e),position:o.getPosition(n,e)}}if(n.kind===i.default.SyntaxKind.TypeReference)return this.getTypeOfTypeReference(n,e);if(n.kind===i.default.SyntaxKind.UnionType)return this.getTypeOfUnionType(n,e);if(n.kind===i.default.SyntaxKind.LiteralType)return this.getTypeOfLiteralType(n,e);if(n.kind===i.default.SyntaxKind.NullKeyword)return{kind:"null",position:o.getPosition(n,e)};if(n.kind===i.default.SyntaxKind.TupleType){const t=n;let i;for(const n of t.elementTypes)i=this.getType(n,e);if(i)return{kind:"array",type:i,minItems:t.elementTypes.length,maxItems:t.elementTypes.length,position:o.getPosition(n,e)}}const t=o.getPosition(n,e);return n.kind!==i.default.SyntaxKind.AnyKeyword&&o.warn(t,"parser"),{kind:void 0,position:t}}getEnumOfLiteralType(n){return n.literal.kind===i.default.SyntaxKind.StringLiteral?{type:"string",value:n.literal.text}:n.literal.kind===i.default.SyntaxKind.NumericLiteral?{type:"number",value:+n.literal.text}:n.literal.kind===i.default.SyntaxKind.TrueKeyword?{type:"boolean",value:!0}:n.literal.kind===i.default.SyntaxKind.FalseKeyword?{type:"boolean",value:!1}:{type:void 0,value:void 0}}getTypeOfLiteralType(n,e){let t;const i=[],{type:s,value:r}=this.getEnumOfLiteralType(n);return void 0!==s&&(t=s),void 0!==r&&i.push(r),t?{kind:"enum",type:t,name:t,enums:i,position:o.getPosition(n,e)}:{kind:void 0,position:o.getPosition(n,e)}}getTypeOfUnionType(n,e){if(!n.types.every(n=>n.kind===i.default.SyntaxKind.LiteralType))return{kind:"union",members:n.types.map(n=>this.getType(n,e)),position:o.getPosition(n,e)};{let t;const i=[];for(const e of n.types){const{type:n,value:o}=this.getEnumOfLiteralType(e);void 0!==n&&(t=n),void 0!==o&&i.push(o)}if(t)return{kind:"enum",type:t,name:t,enums:i,position:o.getPosition(n,e)}}return{kind:void 0,position:o.getPosition(n,e)}}getTypeOfArrayTypeReference(n,e){if(n.typeArguments&&1===n.typeArguments.length){const t=n.typeArguments[0];return{kind:"array",type:this.getType(t,e),position:o.getPosition(t,e)}}return{kind:"array",type:{kind:void 0},position:o.getPosition(n,e)}}getTypeOfTypeReference(n,e){if(n.typeName.kind===i.default.SyntaxKind.Identifier){if(s.includes(n.typeName.text))return{kind:"number",type:n.typeName.text,position:o.getPosition(n.typeName,e)};if("Array"===n.typeName.text||"ReadonlyArray"===n.typeName.text)return this.getTypeOfArrayTypeReference(n,e);if(("Promise"===n.typeName.text||"ReturnType"===n.typeName.text||"DeepReturnType"===n.typeName.text)&&n.typeArguments&&n.typeArguments.length>0){const t=n.typeArguments[0];if(t.kind===i.default.SyntaxKind.TypeReference)return this.getTypeOfTypeReference(t,e)}return{kind:"reference",name:n.typeName.text,position:o.getPosition(n.typeName,e)}}if(n.typeName.kind===i.default.SyntaxKind.QualifiedName){const t=n.typeName.left.text,i=this.declarations.find(n=>"enum"===n.kind&&n.name===t);if(i)return{kind:"enum",name:i.name,type:i.type,enums:i.members.map(n=>n.value),position:o.getPosition(n.typeName,e)}}return{kind:void 0,position:o.getPosition(n.typeName,e)}}getTypeOfTypeLiteral(n,e){if(1!==n.members.length||n.members[0].kind!==i.default.SyntaxKind.IndexSignature){const{members:t,minProperties:i,maxProperties:s,additionalProperties:r}=this.getMembersInfo(n,e);return{kind:"object",members:t,minProperties:i,maxProperties:void 0===r?s:void 0,additionalProperties:r,position:o.getPosition(n,e)}}{const t=n.members[0];if(1===t.parameters.length){const n=t.parameters[0].type;if(n&&t.type)return{kind:"map",key:this.getType(n,e),value:this.getType(t.type,e),position:o.getPosition(n,e)}}}return{kind:void 0,position:o.getPosition(n,e)}}getMembersInfo(n,e){if(n.kind===i.default.SyntaxKind.TypeLiteral){const t=n;return this.getObjectMembers(t.members,e)}return n.kind===i.default.SyntaxKind.UnionType?this.getMembersInfoOfUnionType(n,e):n.kind===i.default.SyntaxKind.IntersectionType?this.getMembersInfoOfIntersectionType(n,e):n.kind===i.default.SyntaxKind.ParenthesizedType?this.getMembersInfoOfParenthesizedType(n,e):n.kind===i.default.SyntaxKind.TypeReference?this.getMembersInfoOfTypeReference(n):{members:[],minProperties:0,maxProperties:0}}getMembersInfoOfUnionType(n,e){const t=[];let i=1/0,o=0;for(const s of n.types){const n=this.getMembersInfo(s,e);if(i>n.minProperties&&(i=n.minProperties),o<n.maxProperties&&(o=n.maxProperties),0===t.length){const e=JSON.parse(JSON.stringify(n.members));t.push(...e)}else{const e=n.members;this.setOptionalAndEnumOfUnionType(t,e);for(const n of e)if(t.every(e=>e.name!==n.name)){const e=JSON.parse(JSON.stringify(n));e.optional=!0,t.push(e)}}}return{members:t,minProperties:i,maxProperties:o}}setOptionalAndEnumOfUnionType(n,e){for(const t of n){const n=e.find(n=>n.name===t.name);n?this.setEnumOfUnionType(t,n):t.optional=!0}}setEnumOfUnionType(n,e){if("enum"===e.type.kind&&"enum"===n.type.kind)for(const t of e.type.enums)n.type.enums.every(n=>n!==t)&&n.type.enums.push(t)}getMembersInfoOfIntersectionType(n,e){const t=[];let i=0,o=0;for(const s of n.types){const n=this.getMembersInfo(s,e);i+=n.minProperties,o+=n.maxProperties;const r=n.members;for(const n of r)t.every(e=>e.name!==n.name)&&t.push(JSON.parse(JSON.stringify(n)))}return{members:t,minProperties:i,maxProperties:o}}getMembersInfoOfParenthesizedType(n,e){const t=[],i=this.getMembersInfo(n.type,e),o=i.minProperties,s=i.maxProperties,r=JSON.parse(JSON.stringify(i.members));for(const n of r)t.push(n);return{members:t,minProperties:o,maxProperties:s}}getMembersInfoOfTypeReference(n){const e=[];let t=0,i=0;const o=n.typeName.text;this.preHandleType(o);const s=this.declarations.find(n=>"object"===n.kind&&n.name===o);if(s&&"object"===s.kind)for(const n of s.members)e.every(e=>e.name!==n.name)&&(e.push(JSON.parse(JSON.stringify(n))),i++,n.optional||t++);return{members:e,minProperties:t,maxProperties:i}}preHandleType(n){if(this.declarations.some(e=>e.name===n))return;let e=!1;for(const t of this.sourceFiles){if(e)return;i.default.forEachChild(t,o=>{e||(o.kind===i.default.SyntaxKind.InterfaceDeclaration?o.name.text===n&&(e=!0,this.handleSourceFile(o,t)):o.kind===i.default.SyntaxKind.TypeAliasDeclaration&&o.name.text===n&&(e=!0,this.handleSourceFile(o,t)))})}}getObjectMembers(n,e){const t=[];let o,s=0,r=0;for(const a of n)if(a.kind===i.default.SyntaxKind.PropertySignature||a.kind===i.default.SyntaxKind.PropertyDeclaration){const n=a,i=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(n,e);t.push(i),n.questionToken||s++,r++}else if(a.kind===i.default.SyntaxKind.IndexSignature){const n=a;n.type&&(o=this.getType(n.type,e))}else if(a.kind===i.default.SyntaxKind.MethodSignature||a.kind===i.default.SyntaxKind.MethodDeclaration){const n=a,i=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(n,e);t.push(i)}else if(a.kind===i.default.SyntaxKind.Constructor){const n=a;for(const o of n.parameters)if(o.modifiers&&o.modifiers.some(n=>n.kind===i.default.SyntaxKind.PublicKeyword||n.kind===i.default.SyntaxKind.PrivateKeyword||n.kind===i.default.SyntaxKind.ProtectedKeyword)){const n=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(o,e);t.push(n),o.questionToken||s++,r++}}return{members:t,minProperties:s,maxProperties:r,additionalProperties:o}}getExpression(n,e,t){const{type:i,value:o}=this.getTypeAndValueOfExpression(n,t);return{name:e.text,type:i,value:o}}getTypeAndValueOfExpression(n,e){if(n.kind===i.default.SyntaxKind.StringLiteral)return{type:{kind:"string",position:o.getPosition(n,e)},value:n.text};if(n.kind===i.default.SyntaxKind.NumericLiteral)return{type:{kind:"number",type:"number",position:o.getPosition(n,e)},value:+n.text};if(n.kind===i.default.SyntaxKind.FalseKeyword||n.kind===i.default.SyntaxKind.TrueKeyword)return{type:{kind:"boolean",position:o.getPosition(n,e)},value:n.kind===i.default.SyntaxKind.TrueKeyword};if(n.kind===i.default.SyntaxKind.ArrayLiteralExpression){const t=n;let i={kind:void 0,position:o.getPosition(n,e)};const s=[];for(const n of t.elements){const{type:t,value:o}=this.getTypeAndValueOfExpression(n,e);i=t,s.push(o)}return{type:{kind:"array",type:i,position:o.getPosition(n,e)},value:s}}if(n.kind===i.default.SyntaxKind.ObjectLiteralExpression){const t=n,s=[],r={};for(const n of t.properties)if(n.kind===i.default.SyntaxKind.PropertyAssignment){const t=this.getExpression(n.initializer,n.name,e);s.push({name:t.name,type:t.type}),r[t.name]=t.value}return{type:{kind:"object",members:s,minProperties:s.length,position:o.getPosition(n,e)},value:r}}return{type:{kind:void 0,position:o.getPosition(n,e)},value:void 0}}getObjectMemberOfPropertyOrMethodOrConstructorParameter(n,e){const t={name:n.name.text,type:{kind:void 0,position:o.getPosition(n,e)}};let s;if(n.questionToken&&(t.optional=!0),(n.kind===i.default.SyntaxKind.PropertySignature||n.kind===i.default.SyntaxKind.PropertyDeclaration)&&n.initializer){const{type:i,value:o}=this.getTypeAndValueOfExpression(n.initializer,e);t.type=i,s=o}return n.type&&(t.type=this.getType(n.type,e)),void 0!==s&&(t.type.default=s),n.kind!==i.default.SyntaxKind.PropertySignature&&n.kind!==i.default.SyntaxKind.PropertyDeclaration||this.setPropertyJsDoc(n,t,e),n.kind!==i.default.SyntaxKind.MethodSignature&&n.kind!==i.default.SyntaxKind.MethodDeclaration||(t.parameters=n.parameters.map(n=>this.getParameter(n,e))),t}getParameter(n,e){let t,i;if(n.initializer){const o=this.getTypeAndValueOfExpression(n.initializer,e);t=o.type,i=o.value}return n.type&&(t=this.getType(n.type,e)),t||(t={kind:void 0,position:o.getPosition(n,e)}),t.default=i,{name:n.name.text,type:t,optional:!!n.questionToken}}setJsDoc(n,e,t){"mapValueType"===n.name?this.setJsDocMapValue(n,e):"type"===n.name?this.overrideType(e,n):"array"===e.kind?this.setJsDocArray(n,e,t):"number"===e.kind?this.setJsDocNumber(n,e):"string"===e.kind?this.setJsDocString(n,e):"boolean"===e.kind?this.setJsDocBoolean(n,e):"object"===e.kind?this.setJsDocObject(n,e):"reference"===e.kind&&this.setJsDocReference(n,e)}setPropertyJsDoc(n,e,t){const i=this.getJsDocs(n,t);for(const n of i)"tag"===n.name?this.setJsDocTag(n,e):"param"===n.name?this.setJsDocParam(n,e):"index"===n.name?e.index=!0:"unique"===n.name?e.unique=!0:"sparse"===n.name?e.sparse=!0:"select"===n.name?e.select=!0:"alias"===n.name?n.comment&&(e.alias=n.comment):this.setJsDoc(n,e.type,t)}setJsDocReference(n,e){if(n.comment)try{e.default=JSON.parse(this.getJsDocComment(n.comment))}catch(n){o.warn(e.position,"parser")}}setJsDocTag(n,e){n.comment&&(e.tag=+n.comment)}setJsDocMapValue(n,e){n.comment&&"map"===e.kind&&"number"===e.value.kind&&(e.value.type=n.comment)}setJsDocParam(n,e){n.paramName&&n.type&&(e.parameters||(e.parameters=[]),e.parameters.push({name:n.paramName,type:n.type,optional:n.optional})),this.overrideType(e.type,n)}setJsDocBoolean(n,e){n.comment&&("default"===n.name?e.default="true"===this.getJsDocComment(n.comment).toLowerCase():"title"===n.name?e.title=n.comment:"description"===n.name&&(e.description=n.comment))}getJsDocComment(n){return n.length>=2&&(n.startsWith("'")&&n.endsWith("'")||n.startsWith('"')&&n.endsWith('"')||n.startsWith("`")&&n.endsWith("`"))?n.substring(1,n.length-1):n}setJsDocString(n,e){n.comment&&("minLength"===n.name?e.minLength=+n.comment:"maxLength"===n.name?e.maxLength=+n.comment:"pattern"===n.name?e.pattern=n.comment:"default"===n.name?e.default=this.getJsDocComment(n.comment):"title"===n.name?e.title=n.comment:"description"===n.name&&(e.description=n.comment)),"lowercase"===n.name?e.lowercase=!0:"uppercase"===n.name?e.uppercase=!0:"trim"===n.name&&(e.trim=!0)}setJsDocNumber(n,e){n.comment&&("multipleOf"===n.name?e.multipleOf=+n.comment:"maximum"===n.name?e.maximum=+n.comment:"minimum"===n.name?e.minimum=+n.comment:"exclusiveMaximum"===n.name?e.exclusiveMaximum=+n.comment:"exclusiveMinimum"===n.name?e.exclusiveMinimum=+n.comment:"default"===n.name?e.default=+this.getJsDocComment(n.comment):"title"===n.name?e.title=n.comment:"description"===n.name&&(e.description=n.comment))}overrideType(n,e){e&&e.comment&&("number"===n.kind?n.type=e.comment:"array"===n.kind&&"number"===n.type.kind&&(n.type={kind:n.type.kind,type:e.comment,position:n.type.position}))}setJsDocArray(n,e,t){n.comment?"minItems"===n.name?e.minItems=+n.comment:"maxItems"===n.name?e.maxItems=+n.comment:"itemType"===n.name?this.overrideType(e,n):"number"===e.type.kind?this.setJsDocNumberArray(n,e.type):"string"===e.type.kind?this.setJsDocStringArray(n,e.type):"boolean"===e.type.kind?"itemDefault"===n.name&&(e.type.default="true"===this.getJsDocComment(n.comment).toLowerCase()):"default"===n.name&&(e.default=JSON.parse(this.getJsDocComment(n.comment))):"uniqueItems"===n.name?e.uniqueItems=!0:"title"===n.name?e.title=n.comment:"description"===n.name&&(e.description=n.comment)}setJsDocNumberArray(n,e){n.comment&&("itemMultipleOf"===n.name?e.multipleOf=+n.comment:"itemMinimum"===n.name?e.minimum=+n.comment:"itemMaximum"===n.name?e.maximum=+n.comment:"itemExclusiveMinimum"===n.name?e.exclusiveMinimum=+n.comment:"itemExclusiveMaximum"===n.name?e.exclusiveMaximum=+n.comment:"itemDefault"===n.name&&(e.default=+this.getJsDocComment(n.comment)))}setJsDocStringArray(n,e){n.comment&&("itemMinLength"===n.name?e.minLength=+n.comment:"itemMaxLength"===n.name?e.maxLength=+n.comment:"itemPattern"===n.name?e.pattern=n.comment:"itemDefault"===n.name&&(e.default=this.getJsDocComment(n.comment)))}setJsDocObject(n,e){n.comment?"minProperties"===n.name?e.minProperties=+n.comment:"maxProperties"===n.name?e.maxProperties=+n.comment:"default"===n.name?e.default=JSON.parse(this.getJsDocComment(n.comment)):"title"===n.name?e.title=n.comment:"description"===n.name&&(e.description=n.comment):"additionalProperties"===n.name&&(e.additionalProperties=!0)}};const s=["double","float","uint32","fixed32","integer","int32","sint32","sfixed32","uint64","fixed64","int64","sint64","sfixed64"]},185:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(11);function o(n,e){const t=[];let o=e.members.reduce((n,e)=>e.tag?Math.max(n,e.tag):n,0);for(const s of e.members){s.tag||o++;const{modifier:e,propertyType:a}=r(n,s.type);a?t.push(`    ${e}${a} ${s.name} = ${s.tag?s.tag:o};`):i.warn(s.type.position,"protobuf generator")}return`message ${e.name} {\n${t.join("\n")}\n}`}function s(n){const e=[];for(const t of n.members)"number"==typeof t.value&&e.push(`    ${t.name} = ${t.value};`);if(e.length>0)return`enum ${n.name} {\n${e.join("\n")}\n}`}function r(n,e){let t="",i="";return"map"===e.kind?i=function(n,e){let t="";"number"===e.value.kind?({propertyType:t}=r(n,e.value)):"reference"===e.value.kind&&(t=e.value.name);if(t)return`map<${e.key.kind}, ${t}>`;return""}(n,e):"array"===e.kind?(t="repeated ",({propertyType:i}=r(n,e.type))):"enum"===e.kind?i="string"===e.type?"string":e.name:"reference"===e.kind?i=function(n,e){const t=n.find(n=>"enum"===n.kind&&n.name===e.name);if(t&&"enum"===t.kind&&"string"===t.type)return"string";return e.name}(n,e):"number"===e.kind?i="number"===e.type?"double":"integer"===e.type?"int32":e.type:"string"===e.kind?i=e.kind:"boolean"===e.kind&&(i="bool"),{modifier:t,propertyType:i}}e.generateProtobuf=function(n){const e=[];for(const t of n)if("object"===t.kind){const i=o(n,t);e.push(i)}else if("enum"===t.kind){const n=s(t);n&&e.push(n)}return`syntax = "proto3";\n\n${e.join("\n\n")}\n`}},186:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(11),o="grapql schema generator";function s(n,e,t,i){if("object"===n.kind)for(const o of n.members){if(o.parameters)for(const n of o.parameters)if("reference"===n.type.kind){const i=n.type.name,o=e.find(n=>n.name===i);o&&s(o,e,t,!0)}if(i&&"reference"===o.type.kind){const n=o.type.name,i=e.find(e=>e.name===n);i&&s(i,e,t,!0)}}i&&!t.has(n)&&(t.add(n),s(n,e,t,!0))}function r(n,e,t){if(0===e.members.length)return;const i=e.members.map(e=>(function(n,e){const t=a(n,e.type);let i,o=!1;if(t.propertyType){o=t.hasJSON;let s="";if(e.parameters){const t=function(n,e){const t=[];let i=!1;for(const o of e){const e=a(n,o.type);e.propertyType&&(o.optional?t.push(`${o.name}: ${e.propertyType}`):t.push(`${o.name}: ${e.propertyType}!`),i=e.hasJSON)}return{result:t.length>0?`(${t.join(", ")})`:"",hasJSON:i}}(n,e.parameters);s=t.result,o||(o=t.hasJSON)}i=`  ${e.name}${s}: ${e.optional?t.propertyType:t.propertyType+"!"}`}return{result:i,hasJSON:o}})(n,e)),o=i.some(n=>n.hasJSON);return{result:`${t.has(e)?"input":"type"} ${e.name} {\n${i.filter(n=>n.result).map(n=>n.result).join("\n")}\n}`,hasJSON:o}}function a(n,e){let t="",s=!1;if("array"===e.kind){const i=a(n,e.type);i.propertyType&&(t=`[${i.propertyType}]`,s=i.hasJSON)}else if("enum"===e.kind)t="string"===e.name?"String":e.name;else if("reference"===e.kind){const r=function(n,e){const t=n.find(n=>n.name===e.name);let s=!1,r=e.name;t&&("enum"===t.kind&&"string"===t.type?r="String":"object"===t.kind&&0===t.members.length?(i.warn(e.position,o),r="JSON",s=!0):"union"===t.kind&&t.members.some(n=>"reference"!==n.kind)&&(i.warn(e.position,o),r="JSON",s=!0));return{propertyType:r,hasJSON:s}}(n,e);t=r.propertyType,s=r.hasJSON}else"number"===e.kind?t="number"===e.type||"float"===e.type||"double"===e.type?"Float":"Int":"string"===e.kind?t="String":"boolean"===e.kind?t="Boolean":"map"===e.kind?(i.warn(e.position,o),t="JSON",s=!0):"union"===e.kind?e.members.some(n=>"reference"!==n.kind)&&(i.warn(e.position,o),t="JSON",s=!0):void 0===e.kind&&(t="JSON",s=!0);return{propertyType:t,hasJSON:s}}e.generateGraphqlSchema=function(n){const e=new Set;for(const t of n)s(t,n,e,!1);const t=[];let a=!1;for(const s of n)if("object"===s.kind){const i=r(n,s,e);i&&(t.push(i.result),a||(a=i.hasJSON))}else if("enum"===s.kind){const n=s.members.map(n=>`  ${n.name}`);t.push(`enum ${s.name} {\n${n.join("\n")}\n}`)}else if("union"===s.kind)if(s.members.every(n=>"reference"===n.kind)){const n=s.members.map(n=>n.name);t.push(`union ${s.name} = ${n.join(" | ")}`)}else i.warn(s.position,o);else if("string"===s.kind&&s.enums){const n=s.enums.map(n=>`  ${n}`);t.push(`enum ${s.name} {\n${n.join("\n")}\n}`)}return(a?"scalar JSON\n\n":"")+t.join("\n\n")+"\n"}},187:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(11);function o(n,e){let t="";if("array"===e.kind){const s=o(n,e.type);s&&(t=`list(${i.toLowerCase(s)})`)}else"enum"===e.kind?t=e.name:"reference"===e.kind?t=function(n,e){const t=n.find(n=>"enum"===n.kind&&n.name===e.name);if(t&&"enum"===t.kind&&"string"===t.type)return"string";return e.name}(n,e):"number"===e.kind?t="number"===e.type||"float"===e.type||"double"===e.type?"float":"int":"string"===e.kind?t="string":"boolean"===e.kind&&(t="bool");return t}e.generateReasonTypes=function(n){const e=[];for(const t of n)if("object"===t.kind){const s=t.members.map(e=>{const t=o(n,e.type);if(t){const n=e.optional?`option(${i.toLowerCase(t)})`:i.toLowerCase(t);return`  ${e.name}: ${n}`}});e.push(`type ${i.toLowerCase(t.name)} = {\n  .\n${s.filter(n=>n).map(n=>n+",").join("\n")}\n};`)}else if("enum"===t.kind){const n=t.members.map(n=>`  | ${i.toUpperCase(n.name)}`).join("\n");e.push(`type ${i.toLowerCase(t.name)} =\n${n};`)}return e.join("\n\n")+"\n"}},188:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(11);function o(n,e){let t="";if("array"===e.kind){const s=o(n,e.type);s&&(t=`${i.toLowerCase(s)} list`)}else"enum"===e.kind?t=e.name:"reference"===e.kind?t=function(n,e){const t=n.find(n=>"enum"===n.kind&&n.name===e.name);if(t&&"enum"===t.kind&&"string"===t.type)return"string";return e.name}(n,e):"number"===e.kind?t="number"===e.type||"float"===e.type||"double"===e.type?"float":"int":"string"===e.kind?t="string":"boolean"===e.kind&&(t="bool");return t}e.generateOcamlTypes=function(n){const e=[];for(const t of n)if("object"===t.kind){const s=t.members.map(e=>{const t=o(n,e.type);if(t)return`  ${e.name}: ${e.optional?i.toLowerCase(t)+" option":i.toLowerCase(t)}`});e.push(`type ${i.toLowerCase(t.name)} = {\n${s.filter(n=>n).map(n=>n+";").join("\n")}\n}`)}else if("enum"===t.kind){const n=t.members.map(n=>`  | ${i.toUpperCase(n.name)}`).join("\n");e.push(`type ${i.toLowerCase(t.name)} =\n${n}`)}return e.join("\n\n")+"\n"}},189:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(11),o=t(190);function s(n,e){const t=n.members.map(n=>{const t=u(e,n.type,n.optional);if(t){const e=o(n.name);return n.name===e?`  pub ${o(n.name)}: ${t}`:`  #[serde(rename = "${n.name}")] pub ${o(n.name)}: ${t}`}});return`#[derive(Serialize, Deserialize, Debug)]\npub struct ${n.name} {\n${t.filter(n=>n).map(n=>n+",").join("\n")}\n}`}function r(n){const e=[];let t=!1;if("string"===n.type){t=!0;const o=n.members.map(n=>`  ${i.toUpperCase(n.name)},`).join("\n");e.push(`#[derive(Debug)]\npub enum ${n.name} {\n${o}\n}`);const s=n.members.map(e=>`      ${n.name}::${i.toUpperCase(e.name)} => "${e.value}",`).join("\n");e.push(`impl Serialize for ${n.name} {\n  fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n  where\n    S: Serializer,\n  {\n    serializer.serialize_str(match *self {\n${s}\n    })\n  }\n}`);const r=n.members.map(e=>`      "${e.value}" => Ok(${n.name}::${i.toUpperCase(e.name)}),`).join("\n");e.push(`impl<'de> Deserialize<'de> for ${n.name} {\n  fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>\n  where\n    D: Deserializer<'de>,\n  {\n    let s = String::deserialize(deserializer)?;\n    match s.as_str() {\n${r}\n      _ => Err(Error::custom("wrong enum value.")),\n    }\n  }\n}`)}else{const t=n.members.map(n=>`  ${i.toUpperCase(n.name)} = ${n.value},`).join("\n");e.push(`#[derive(Serialize, Deserialize, Debug)]\npub enum ${n.name} {\n${t}\n}`)}return{messages:e,useSerde:t}}function a(n,e){const t=n.members.map(n=>{const t=u(e,n,void 0);if(t)return`  ${t}(${t})`});return`#[derive(Serialize, Deserialize, Debug)]\npub enum ${n.name} {\n${t.filter(n=>n).map(n=>n+",").join("\n")}\n}`}function u(n,e,t){let i="";if("array"===e.kind){const t=u(n,e.type,void 0);t&&(i=`Vec<${t}>`)}else"enum"===e.kind?i="string"===e.name?"String":"boolean"===e.name?"bool":e.name:"reference"===e.kind?i=function(n,e){const t=n.find(n=>"enum"===n.kind&&n.name===e.name);if(t&&"enum"===t.kind&&"string"===t.type)return"String";return e.name}(n,e):"number"===e.kind?i=function(n){if("number"===n.type||"float"===n.type)return"f32";if("double"===n.type)return"f64";if("integer"===n.type||"int32"===n.type||"sint32"===n.type||"sfixed32"===n.type)return"i32";if("uint32"===n.type||"fixed32"===n.type)return"u32";if("int64"===n.type||"sint64"===n.type||"sfixed64"===n.type)return"i64";if("uint64"===n.type||"fixed64"===n.type)return"u64";return n.type}(e):"string"===e.kind?i="String":"boolean"===e.kind&&(i="bool");return t?`Option<${i}>`:i}e.generateRustTypes=function(n){const e=[];let t=!1;for(const o of n)if("object"===o.kind){const t=s(o,n);e.push(t)}else if("enum"===o.kind){const{messages:n,useSerde:i}=r(o);e.push(...n),i&&(t=!0)}else if("union"===o.kind){const t=a(o,n);e.push(t)}else if("reference"===o.kind){const n=`type ${(i=o).newName} = ${i.name};`;e.push(n)}var i;return t&&e.unshift("extern crate serde;\n\npub use self::serde::ser::{Serialize, Serializer};\npub use self::serde::de::{Deserialize, Deserializer, Error};"),e.join("\n\n")+"\n"}},191:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(11);function o(n){const e=n.members.map(n=>(function(n){const e=s(n.type,2,n.optional,n.index,n.unique,n.sparse,n.select,n.alias);return`  ${n.name}: ${e},`})(n));return`export const ${i.toLowerCase(n.name)}Schema = {\n${e.join("\n")}\n}`}function s(n,e,t,i,o,a,u,d){const{propertyType:f,mapOf:p}=function(n){let e,t="";if("string"===n.kind)t="String";else if("boolean"===n.kind)t="Boolean";else if("number"===n.kind)t="Number";else if("array"===n.kind){const e=s(n.type,4);t=`[\n      ${e}\n    ]`}else"map"===n.kind?(e=s(n.value,3),t="Map"):t="reference"===n.kind?"ObjectId"===n.name||"ObjectID"===n.name?"Schema.Types.ObjectId":"Date"===n.name?"Date":"Decimal128"===n.name?"Schema.Types.Decimal128":"Buffer"===n.name?"Schema.Types.Buffer":"Schema.Types.Mixed":"Schema.Types.Mixed";return{propertyType:t,mapOf:e}}(n),c=[`type: ${f}`,`required: ${!t}`];p&&c.push(`of: ${p}`);const m=function(n){if("number"==typeof n.default)return n.default;if("string"==typeof n.default)return r(n.default);return}(n);void 0!==m&&c.push(`default: ${m}`);const l=function(n){if("enum"===n.kind&&"string"===n.type&&n.enums&&n.enums.length>0)return n.enums.map(n=>`${r(n)}`).join(", ");return}(n);void 0!==l&&c.push(`enum: [${l}]`),"number"===n.kind&&(void 0!==n.minimum&&c.push(`min: ${n.minimum}`),void 0!==n.maximum&&c.push(`max: ${n.maximum}`)),"string"===n.kind&&(void 0!==n.minLength&&c.push(`minLength: ${n.minLength}`),void 0!==n.maxLength&&c.push(`maxLength: ${n.maxLength}`),void 0!==n.pattern&&c.push(`match: ${r(n.pattern)}`),n.lowercase&&c.push("lowercase: true"),n.uppercase&&c.push("uppercase: true"),n.trim&&c.push("trim: true")),i&&c.push("index: true"),o&&c.push("unique: true"),a&&c.push("sparse: true"),u&&c.push("select: true"),d&&c.push(`alias: ${r(d)}`);const h="  ".repeat(e);return`{\n${h}${c.join(",\n"+h)}\n${"  ".repeat(e-1)}}`}function r(n){return JSON.stringify(n)}e.generateMongooseSchema=function(n){const e=[];for(const t of n)"object"===t.kind&&e.push(o(t));return"// tslint:disable\n\nimport { Schema } from 'mongoose'\n\n"+e.join("\n\n")+"\n"}},192:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(12).__importStar(t(41));function o(n,e,t){if(t&&t.length>0){return`input: { ${t.map(t=>{const i=t.optional?"?":"",o=r(t.type,n,e);return`${t.name}${i}: ${o}`}).join(", ")} }`}return"input: {}"}function s(n){return"string"===n||"number"===n||"boolean"===n}function r(n,e,t){if("array"===n.kind)return`Array<${r(n.type,e,t)}>`;if("enum"===n.kind)return s(n.name)||e.push(n),n.name;if("reference"===n.kind){const e=t.find(e=>e.name===n.name);return e&&("enum"===e.kind||"string"===e.kind&&e.enums)?n.name:n.name+"<TContext>"}if("map"===n.kind){return`{ [name: ${r(n.key,e,t)}]: ${r(n.value,e,t)} }`}return"union"===n.kind?n.members.map(n=>r(n,e,t)).join(" | "):void 0===n.kind?"any":n.kind}e.generateGraphqlRootType=function(n,e){const t=[],a=[],u=[],d=[],f=[];for(const e of n)if("object"===e.kind){const i="Query"===e.name||"Mutation"===e.name;if(i)for(const i of e.members){const e=r(i.type,f,n),s=o(f,n,i.parameters);t.push(`  ${i.name}(${s}, context: TContext, info: GraphQLResolveInfo): DeepPromisifyReturnType<${e}> | Promise<DeepPromisifyReturnType<${e}>>`),u.push(`  ${i.name}: DeepReturnType<${e}>`)}else{const t=[];for(const i of e.members){const e=r(i.type,f,n),s=i.optional?"?":"";if(i.parameters){const r=o(f,n,i.parameters);t.push(`  ${i.name}${s}(${r}, context: TContext, info: GraphQLResolveInfo): ${e} | Promise<${e}>`)}else t.push(`  ${i.name}${s}: ${e}`)}a.push(`export interface ${e.name}<TContext = any> {\n${t.join("\n")}\n}`)}const s=[],p=i?"":"?";for(const t of e.members){const e=o(f,n,t.parameters);s.push(`    ${t.name}${p}(parent: any, ${e}, context: TContext, info: GraphQLResolveInfo): any,`)}d.push(`  ${e.name}${p}: {\n${s.join("\n")}\n  },`)}else if("reference"===e.kind)a.push(`export type ${e.newName}<TContext = any> = ${e.name}<TContext>`);else if("union"===e.kind){const t=r(e,f,n);a.push(`export type ${e.name}<TContext = any> = ${t}`)}else"string"===e.kind?e.enums&&!s(e.name)&&f.push(e):"enum"===e.kind&&f.push(e);return`/**\n * This file is generated by 'types-as-schema'\n * It is not mean to be edited by hand\n */\n// tslint:disable\n\nimport { GraphQLResolveInfo } from 'graphql'\n\n${function(n,e){const t={};for(const e of n){const n=e.position.file;t[n]||(t[n]=[]),t[n].every(n=>n!==e.name)&&t[n].push(e.name)}const o=i.dirname(e),s=[];for(const n in t){let e=i.relative(o,n);e.startsWith("."+i.sep)||e.startsWith(".."+i.sep)||(e="."+i.sep+e),e=e.substring(0,e.length-i.extname(e).length),s.push(`import { ${t[n].join(", ")} } from '${e}'`)}return s.join("\n")}(f,e)}\n\nexport type DeepPromisifyReturnType<T> = {\n  [P in keyof T]: T[P] extends Array<infer U>\n    ? Array<DeepPromisifyReturnType<U>>\n    : T[P] extends ReadonlyArray<infer U>\n      ? ReadonlyArray<DeepPromisifyReturnType<U>>\n      : T[P] extends (...args: infer P) => infer R\n        ? (...args: P) => R | Promise<R>\n        : DeepPromisifyReturnType<T[P]>\n}\n\nexport type DeepReturnType<T> = {\n  [P in keyof T]: T[P] extends Array<infer U>\n    ? Array<DeepReturnType<U>>\n    : T[P] extends ReadonlyArray<infer U>\n      ? ReadonlyArray<DeepReturnType<U>>\n      : T[P] extends (...args: any[]) => infer R\n        ? R extends Promise<infer U>\n          ? U\n          : R\n        : DeepReturnType<T[P]>\n}\n\nexport interface Root<TContext = any> {\n${t.join("\n")}\n}\n\n${a.join("\n\n")}\n\nexport interface ApolloResolvers<TContext = any> {\n${d.join("\n")}\n}\n\nexport interface ResolveResult<TContext = any> {\n${u.join("\n")}\n}\n\n// tslint:enable\n`}},193:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(82);function o(n){const e=i.getJsonSchemaProperty(n);return"reference"===n.kind?{schema:e}:e}e.generateSwaggerDoc=function(n,e){const t={},s=[];for(const e of n)"function"===e.kind&&e.path&&e.method&&(t[e.path]||(t[e.path]={}),"reference"===e.type.kind&&s.push(e.type.name),t[e.path][e.method]={operationId:e.name,parameters:e.parameters.map(n=>("reference"===n.type.kind&&s.push(n.type.name),{name:n.name,required:!n.optional,in:n.in,...o(n.type)})),summary:e.summary,description:e.description,deprecated:e.deprecated,tags:e.tags,responses:{200:o(e.type)}});const r=i.getAllDefinitions(n),a={};for(const n of s){const e=i.getReferencedDefinitions(n,r,[]);Object.assign(a,e)}let u={swagger:"2.0",paths:t,definitions:a};return e&&(u={...e,...u}),JSON.stringify(u,null,2)}},194:function(n,e,t){"use strict";t.r(e);var i=t(12),o=t(15),s=t.n(o),r=t(42),a=t(83),u=t.n(a),d=t(84),f="type TypeLiteral = {\n  typeLiteralMember1: number;\n  typeLiteralMember2: string;\n}\n\n/**\n * @minProperties 1\n * @maxProperties 1\n */\ninterface Interface {\n  interfaceMember1?: number\n  interfaceMember2?: string\n\n  [name: string]: any\n}\n\ntype TypeUnion1 = TypeLiteral | {\n  typeUnionMember1: number;\n  typeUnionMember2: string;\n}\ntype TypeUnion2 =\n  {\n    kind: StringEnum.enumMember1;\n    typeUnionMember1: string;\n  } | {\n    kind: StringEnum.enumMember2;\n    typeUnionMember2: string;\n  }\ntype TypeUnion3 =\n  {\n    kind: NumberEnum.enumMember1;\n    typeUnionMember1: string;\n  } | {\n    kind: NumberEnum.enumMember2;\n    typeUnionMember2: string;\n  }\ntype TypeUnion4 =\n  {\n    kind: 'foo';\n    typeUnionMember1: string;\n  } | {\n    kind: 'bar';\n    typeUnionMember2: string;\n  }\ntype TypeUnion5 = TypeLiteral | Interface\ntype TypeUnion8 = 'foo' | 'bar' | null | false\nexport type TypeUnion9 = 'foo' | 'bar'\ntype TypeUnion = {\n  typeUnionMember1: TypeUnion1;\n  typeUnionMember2: TypeUnion2;\n  typeUnionMember3: TypeUnion3;\n  typeUnionMember4: TypeUnion4;\n  typeUnionMember5: TypeUnion5;\n  typeUnionMember6: string | null | false;\n  typeUnionMember7: 'foo' | 'bar';\n  typeUnionMember8: TypeUnion8;\n  typeUnionMember9: TypeUnion9;\n}\n\ninterface InterfaceExtends extends Interface {\n  interfaceExtendsMember1: number\n  interfaceExtendsMember2: string\n}\n\ntype TypeIntersection1 = Interface & {\n  typeIntersectionMember1: number;\n  typeIntersectionMember2: string;\n}\ntype TypeIntersection2 =\n  {\n    typeIntersectionMember1: number;\n    typeIntersectionMember2: string;\n  } & {\n    typeIntersectionMember3: number;\n    typeIntersectionMember4: string;\n  }\n\ntype TypeIntersection = {\n  typeIntersectionMember1: TypeIntersection1;\n  typeIntersectionMember2: TypeIntersection2;\n  typeIntersectionMember3: TypeLiteral & Interface;\n}\n\ntype TypeUnionAndIntersection =\n  {\n    typeIntersectionMember1: number;\n  } & (\n    {\n      kind: NumberEnum.enumMember1;\n      typeUnionMember1: string;\n    } | {\n      kind: NumberEnum.enumMember2;\n      typeUnionMember2: string;\n    }\n  )\n\nexport type TaggedField = {\n  /**\n   * @tag 2\n   */\n  taggedFieldMember1: number;\n  /**\n   * @tag 3\n   */\n  taggedFieldMember2: string;\n}\n\nexport const enum StringEnum {\n  enumMember1 = 'enum member 1',\n  enumMember2 = 'enum member 2'\n}\nexport const enum NumberEnum {\n  enumMember1,\n  enumMember2\n}\nexport const enum NumberEnum2 {\n  enumMember1 = 3,\n  enumMember2 = 4\n}\nexport type Enum = {\n  stringEnum: StringEnum;\n  numberEnum: NumberEnum;\n  numberEnum2: NumberEnum2;\n  stringEnum2: 'foo';\n}\n\ntype integer = number\ntype uint32 = number\ntype int32 = number\ntype sint32 = number\ntype fixed32 = number\ntype sfixed32 = number\ntype uint64 = number\ntype int64 = number\ntype sint64 = number\ntype fixed64 = number\ntype sfixed64 = number\ntype float = number\ntype double = number\n\ntype NumberType = {\n  /**\n   * @multipleOf 10\n   * @minimum 70\n   * @maximum 90\n   * @exclusiveMinimum 70\n   * @exclusiveMaximum 90\n   */\n  numberMember: number;\n\n  integerMember: integer;\n\n  uint32Member: uint32;\n  int32Member: int32;\n  sint32Member: sint32;\n  fixed32Member: fixed32;\n  sfixed32Member: sfixed32;\n\n  uint64Member: uint64;\n  int64Member: int64;\n  sint64Member: sint64;\n  fixed64Member: fixed64;\n  sfixed64Member: sfixed64;\n\n  floatMember: float;\n  doubleMember: double;\n\n  /**\n   * @title foo\n   * @description bar\n   */\n  titleMember: number;\n}\n\ntype StringType = {\n  /**\n   * @minLength 10\n   * @maxLength 20\n   * @pattern ^[A-z]{3}$\n   */\n  stringMember: string;\n}\n\ntype ArrayType = {\n  /**\n   * @itemMinLength 10\n   * @itemMaxLength 20\n   * @itemPattern ^[A-z]{3}$\n   */\n  arrayType1: string[];\n  /**\n   * @uniqueItems\n   * @minItems 1\n   * @maxItems 10\n   */\n  arrayType2: TypeLiteral[];\n  arrayType3: { literal: number }[];\n  /**\n   * @itemMultipleOf 100\n   * @itemMinimum 100\n   * @itemMaximum 200\n   * @itemExclusiveMinimum 300\n   * @itemExclusiveMaximum 400\n   */\n  arrayType4: uint32[];\n  arrayType5: { literal: number | string }[];\n  arrayType6: { literal: number | null }[];\n  arrayType7: { literal: TypeLiteral | null }[];\n  arrayType8: Array<{ literal: number }>;\n  arrayType9: ReadonlyArray<string>;\n}\n\ntype MapType7 = {\n  foo: string\n  [name: string]: string\n}\n\ntype MapType8 = {\n  [name: string]: string\n}\n\ntype MapType = {\n  mapType: { [name: string]: number };\n  mapType2: { [name: string]: TypeLiteral };\n  mapType3: { [name: string]: { literal: number } };\n  mapType4: { [name: string]: uint32 };\n  mapType5: { [name: string]: any };\n  mapType6: {\n    foo: number\n    [name: string]: number\n  };\n  mapType7: MapType7\n  mapType8: MapType8\n}\n\ntype ID = any\n\ntype Parameter = {\n  /**\n   * @param {string} name\n   * @param {number} age\n   */\n  member1: string\n  /**\n   * @param {string} [name]\n   */\n  member2: string\n}\n\ntype DefaultValue = {\n  /**\n   * @default foo\n   */\n  stringMember: string\n  /**\n   * @default 123\n   */\n  numberMember: number\n  /**\n   * @default true\n   */\n  booleanMember: boolean\n  /**\n   * @default 'foo bar'\n   */\n  stringMember2: string\n  /**\n   * @default ''\n   */\n  stringMember3: string\n  /**\n   * @default []\n   */\n  arrayMember: any[]\n  /**\n   * @default {}\n   */\n  objectMember: { foo: string }\n  /**\n   * @default 123\n   */\n  numberMember1: integer\n  /**\n   * @default {}\n   */\n  objectMember2: TypeLiteral\n}\n\ntype TypeReferenceMember2 = TypeLiteral\n\ntype ReferenceType = {\n  typeReferenceMember1: TypeLiteral\n  typeReferenceMember2: TypeReferenceMember2\n}\n\nclass ClassType1 {\n  classMember1: string\n  classMember2: number\n}\n\nclass ClassType2 extends ClassType1 {\n  constructor(public classMember3: string) { super() }\n  classMember4: number\n}\n\nclass ClassType3 {\n  classMember1 = 'foo'\n  classMember2 = 123\n  classMember3 = false\n  classMember4: string = 'foo'\n  classMember5 = ['foo']\n  classMember6 = { a: 1 }\n}\n\ntype ClassType = {\n  classType1: ClassType1;\n  classType2: ClassType2;\n  classType3: ClassType3;\n}\n\ntype Circular = {\n  children: Circular[]\n}\n\nimport { OuterType } from './case2'\n\n/**\n * @entry cases.json\n * @additionalProperties\n */\nexport type EntryType = {\n  optionalMember?: string;\n  booleanMember: boolean;\n  stringMember: string;\n  numberType: NumberType;\n  arrayType: ArrayType;\n  typeLiteral: { literal: number };\n  referenceType: ReferenceType;\n  interfaceType: Interface;\n  typeUnion: TypeUnion;\n  interfaceExtends: InterfaceExtends;\n  typeIntersection: TypeIntersection;\n  typeUnionAndIntersection: TypeUnionAndIntersection;\n  mapType: MapType;\n  taggedField: TaggedField;\n  enum: Enum;\n  stringNumber: StringType;\n  id: ID;\n  parameter: Parameter;\n  optionalArrayMember?: string[];\n  tupleType: [string, string];\n  defaultType: DefaultValue;\n  anyType: any;\n  classType: ClassType;\n  circular: Circular;\n  outerType: OuterType;\n  typeAlias: TypeAlias;\n}\n\nexport interface Mutation {\n  create(input: CreateInput): Promise<MutationResult>\n}\n\nexport interface CreateInput {\n  member1: string\n  member2: number\n  member3: CreateInputMember3\n}\n\nexport interface MutationResult {\n  result: boolean\n}\n\nexport abstract class Query {\n  abstract user(id: string): GetResult\n  abstract users(): GetResult\n}\n\nexport interface GetResult {\n  result: Result\n}\n\ninterface Result {\n  member1: string\n\n  member2(input: string): string\n}\n\ninterface CreateInputMember3 {\n  member1: string\n}\n\nexport interface TypeAlias {\n  result: Result2\n}\n\ntype Result2 = Result3\n\ninterface Result3 {\n  result3: string\n}\n\ninterface Pet {\n  id?: number\n  name: string\n  photoUrls: string[]\n  status: 'available' | 'pending' | 'sold'\n}\n\n/**\n * @method get\n * @path /pet/{id}\n * @summary get pet by id.\n * @description get pet by id\n * @deprecated\n * @tags pet\n */\nexport declare function getPetById(\n  /**\n   * @in path\n   * @description pet id\n   * @minimum 1\n   * @default 2\n   */\n  id: integer,\n  /**\n   * @in query\n   */\n  status: 'health' | 'sick',\n  /**\n   * @in body\n   * @minItems 1\n   */\n  tags: string[],\n  /**\n   * @in body\n   */\n  pet: Pet\n): Promise<Pet>\n\ntype ObjectId = any\n\nexport interface MongooseScheme {\n  objectId: ObjectId\n  date: Date\n  decimal128: Decimal128\n  /**\n   * @index\n   */\n  index1: string\n  /**\n   * @unique\n   */\n  index2: string\n  /**\n   * @sparse\n   * @select\n   * @alias index4\n   * @lowercase\n   * @uppercase\n   * @trim\n   */\n  index3: string\n  buffer: Buffer\n}\n\ntype Decimal128 = number\ntype Buffer = any\n";function p(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"app"},[t("textarea",{directives:[{name:"model",rawName:"v-model",value:n.source,expression:"source"}],staticClass:"source",domProps:{value:n.source},on:{input:function(e){e.target.composing||(n.source=e.target.value)}}}),n._v(" "),t("div",{staticClass:"result"},[t("button",{on:{click:function(e){n.generate()}}},[n._v("generate")]),n._v(" "),t("div",{staticClass:"options"},[t("select",{directives:[{name:"model",rawName:"v-model",value:n.selectedOption,expression:"selectedOption"}],on:{change:function(e){var t=Array.prototype.filter.call(e.target.options,function(n){return n.selected}).map(function(n){return"_value"in n?n._value:n.value});n.selectedOption=e.target.multiple?t:t[0]}}},n._l(n.options,function(e){return t("option",{key:e,domProps:{value:e}},[n._v(n._s(e))])}),0)]),n._v(" "),"protobuf"===n.selectedOption?t("pre",{staticClass:"protobuf"},[n._v(n._s(n.protobuf))]):n._e(),n._v(" "),n.jsonSchema?t("pre",{staticClass:"json-schema"},[n._v(n._s(n.jsonSchema))]):n._e(),n._v(" "),"graphql schema"===n.selectedOption?t("pre",{staticClass:"graphql-schema"},[n._v(n._s(n.graphqlSchema))]):n._e(),n._v(" "),"reason types"===n.selectedOption?t("pre",{staticClass:"reason-types"},[n._v(n._s(n.reasonTypes))]):n._e(),n._v(" "),"ocaml types"===n.selectedOption?t("pre",{staticClass:"ocaml-types"},[n._v(n._s(n.ocamlTypes))]):n._e(),n._v(" "),"rust types"===n.selectedOption?t("pre",{staticClass:"rust-types"},[n._v(n._s(n.rustTypes))]):n._e(),n._v(" "),"mongoose schema"===n.selectedOption?t("pre",{staticClass:"mongoose-schema"},[n._v(n._s(n.mongooseSchema))]):n._e(),n._v(" "),"graphql root type"===n.selectedOption?t("pre",{staticClass:"graphql-root-type"},[n._v(n._s(n.graphqlRootType))]):n._e(),n._v(" "),"swagger doc"===n.selectedOption?t("pre",{staticClass:"swagger-doc"},[n._v(n._s(n.swaggerDoc))]):n._e()])])}var c=[];t.d(e,"App",function(){return l});var m="types-as-schema:source",l=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e.protobuf="",e.options=["protobuf"],e.selectedOption="protobuf",e.graphqlSchema="",e.reasonTypes="",e.ocamlTypes="",e.rustTypes="",e.mongooseSchema="",e.graphqlRootType="",e.swaggerDoc="",e.innerSource=localStorage.getItem(m)||f,e.jsonSchemas=[],e}return i.__extends(e,n),Object.defineProperty(e.prototype,"source",{get:function(){return this.innerSource},set:function(n){this.innerSource=n,localStorage.setItem(m,n)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"jsonSchema",{get:function(){var n=this;if(this.selectedOption){var e=this.jsonSchemas.find(function(e){return e.entry===n.selectedOption});if(e)return e.content}return""},enumerable:!0,configurable:!0}),e.prototype.generate=function(){var n,e;if(this.source){var t=s.a.createSourceFile("",this.source,s.a.ScriptTarget.ESNext,!1,s.a.ScriptKind.TS),o=new d.Generator([t]);this.protobuf=o.generateProtobuf(),this.options=["protobuf"],this.jsonSchemas=o.generateJsonSchemas().map(function(n){return{entry:n.entry,content:JSON.stringify(n.schema,null,"  ")}});try{for(var r=i.__values(this.jsonSchemas),a=r.next();!a.done;a=r.next()){var u=a.value;this.options.push(u.entry)}}catch(e){n={error:e}}finally{try{a&&!a.done&&(e=r.return)&&e.call(r)}finally{if(n)throw n.error}}this.graphqlSchema=o.generateGraphqlSchema(),this.options.push("graphql schema"),this.reasonTypes=o.generateReasonTypes(),this.options.push("reason types"),this.ocamlTypes=o.generateOcamlTypes(),this.options.push("ocaml types"),this.rustTypes=o.generateRustTypes(),this.options.push("rust types"),this.mongooseSchema=o.generateMongooseSchema(),this.options.push("mongoose schema"),this.graphqlRootType=o.generateGraphqlRootType("."),this.options.push("graphql root type"),this.swaggerDoc=o.generateSwaggerDoc(),this.options.push("swagger doc")}},e=i.__decorate([u()({render:p,staticRenderFns:c})],e)}(r.default);new l({el:"#container"})},82:function(n,e,t){"use strict";function i(n){const e={};for(const t of n)"object"===t.kind||"array"===t.kind||"union"===t.kind||"string"===t.kind||"number"===t.kind?e[t.name]=s(t):"reference"===t.kind?e[t.newName]={type:void 0,$ref:`#/definitions/${t.name}`}:"enum"===t.kind&&(1===t.members.length?e[t.name]={type:o(t.type),const:t.members[0]}:e[t.name]={type:o(t.type),enum:t.members.map(n=>n.value)});return e}function o(n){return"boolean"===n||"string"===n?n:"double"===n||"float"===n||"number"===n?"number":"integer"}function s(n){return"number"===n.kind?function(n){let e;e="double"===n.type||"float"===n.type?{type:"number",minimum:n.minimum,maximum:n.maximum}:"uint32"===n.type||"fixed32"===n.type?a(n,0,4294967295):"int32"===n.type||"sint32"===n.type||"sfixed32"===n.type?a(n,-2147483648,2147483647):"uint64"===n.type||"fixed64"===n.type?a(n,0,0x10000000000000000):"int64"===n.type||"sint64"===n.type||"sfixed64"===n.type?a(n,-0x8000000000000000,0x8000000000000000):"number"===n.type||"integer"===n.type?{type:n.type,minimum:n.minimum,maximum:n.maximum}:{type:n.kind,minimum:n.minimum,maximum:n.maximum};return Object.assign(e,{multipleOf:n.multipleOf,exclusiveMinimum:n.exclusiveMinimum,exclusiveMaximum:n.exclusiveMaximum,default:n.default,title:n.title,description:n.description}),e}(n):"boolean"===n.kind?{type:"boolean",default:n.default,title:n.title,description:n.description}:"map"===n.kind?{type:"object",additionalProperties:s(n.value)}:"array"===n.kind?{type:"array",items:s(n.type),uniqueItems:n.uniqueItems,minItems:n.minItems,maxItems:n.maxItems,default:n.default,title:n.title,description:n.description}:"enum"===n.kind?1===n.enums.length?{type:o(n.type),const:n.enums[0]}:{type:o(n.type),enum:n.enums}:"reference"===n.kind?{type:void 0,$ref:`#/definitions/${n.name}`,default:n.default}:"object"===n.kind?function(n){const e={},t=[];for(const i of n.members)i.optional||t.push(i.name),e[i.name]=s(i.type);let i;i=void 0===n.additionalProperties?void 0!==n.additionalProperties&&void 0:!0===n.additionalProperties||!1===n.additionalProperties?n.additionalProperties:s(n.additionalProperties);return{type:"object",properties:e,required:t,additionalProperties:i,minProperties:n.minProperties>n.members.filter(n=>!n.optional).length?n.minProperties:void 0,maxProperties:n.maxProperties&&n.maxProperties<n.members.length?n.maxProperties:void 0,default:n.default,title:n.title,description:n.description}}(n):"string"===n.kind?function(n){if(n.enums)return 1===n.enums.length?{type:"string",const:n.enums[0]}:{type:"string",enum:n.enums};return{type:n.kind,minLength:n.minLength,maxLength:n.maxLength,pattern:n.pattern,default:n.default,title:n.title,description:n.description}}(n):"union"===n.kind?function(n){if(n.members.every(n=>"enum"===n.kind||"null"===n.kind)){let e=[];for(const t of n.members)"enum"===t.kind?e=e.concat(t.enums):"null"===t.kind&&e.push(null);return{type:void 0,enum:e}}return{type:void 0,anyOf:n.members.map(n=>s(n))}}(n):"null"===n.kind?{type:"null"}:{type:n.kind}}function r(n,e,t){const i={},o="string"==typeof n?e[n]:n;if(void 0===o)return i;if("string"==typeof n){if(i[n]=o,t.includes(n))return i;t.push(n)}if("array"===o.type)Object.assign(i,r(o.items,e,t));else if("object"===o.type){if(o.properties)for(const n in o.properties)if(o.properties.hasOwnProperty(n)){const s=o.properties[n];Object.assign(i,r(s,e,t))}}else void 0===o.type&&Object.assign(i,function(n,e,t){const i={};if(n.$ref){const o=n.$ref.substring("#/definitions/".length);Object.assign(i,r(o,e,t))}if(n.anyOf)for(const o of n.anyOf)Object.assign(i,r(o,e,t));return i}(o,e,t));return"string"==typeof n&&t.pop(),i}function a(n,e,t){return{type:"integer",minimum:void 0!==n.minimum?n.minimum:e,maximum:void 0!==n.maximum?n.maximum:t}}Object.defineProperty(e,"__esModule",{value:!0}),e.generateJsonSchemas=function(n){const e=i(n);return n.filter(n=>("object"===n.kind||"array"===n.kind||"union"===n.kind)&&n.entry).map(n=>({entry:n.entry,schema:{$ref:`#/definitions/${n.name}`,definitions:r(n.name,e,[])}}))},e.getAllDefinitions=i,e.getJsonSchemaProperty=s,e.getReferencedDefinitions=r},84:function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=t(184),o=t(185),s=t(82),r=t(186),a=t(187),u=t(188),d=t(189),f=t(191),p=t(192),c=t(193);e.Generator=class{constructor(n){this.sourceFiles=n,this.declarations=[];const e=new i.Parser(n);this.declarations=e.parse()}generateProtobuf(){return o.generateProtobuf(this.declarations)}generateJsonSchemas(){return s.generateJsonSchemas(this.declarations)}generateGraphqlSchema(){return r.generateGraphqlSchema(this.declarations)}generateGraphqlRootType(n){return p.generateGraphqlRootType(this.declarations,n)}generateReasonTypes(){return a.generateReasonTypes(this.declarations)}generateOcamlTypes(){return u.generateOcamlTypes(this.declarations)}generateRustTypes(){return d.generateRustTypes(this.declarations)}generateMongooseSchema(){return f.generateMongooseSchema(this.declarations)}generateSwaggerDoc(n){return c.generateSwaggerDoc(this.declarations,n)}}},85:function(n,e){},86:function(n,e){},87:function(n,e){},91:function(n,e){},93:function(n,e){}});