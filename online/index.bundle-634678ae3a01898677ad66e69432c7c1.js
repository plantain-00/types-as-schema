!function(e){function n(n){for(var i,s,a=n[0],m=n[1],p=n[2],l=0,c=[];l<a.length;l++)s=a[l],r[s]&&c.push(r[s][0]),r[s]=0;for(i in m)Object.prototype.hasOwnProperty.call(m,i)&&(e[i]=m[i]);for(u&&u(n);c.length;)c.shift()();return o.push.apply(o,p||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],i=!0,a=1;a<t.length;a++){var m=t[a];0!==r[m]&&(i=!1)}i&&(o.splice(n--,1),e=s(s.s=t[0]))}return e}var i={},r={0:0},o=[];function s(n){if(i[n])return i[n].exports;var t=i[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.m=e,s.c=i,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,n){if(1&n&&(e=s(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var i in e)s.d(t,i,function(n){return e[n]}.bind(null,i));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,"a",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p="";var a=window.webpackJsonp=window.webpackJsonp||[],m=a.push.bind(a);a.push=n,a=a.slice();for(var p=0;p<a.length;p++)n(a[p]);var u=m;o.push([194,1]),t()}({11:function(e,n,t){"use strict";(function(e){Object.defineProperty(n,"__esModule",{value:!0});const i=t(12),r=i.__importDefault(t(15)),o=i.__importStar(t(41));n.toUpperCase=function(e){return e[0].toUpperCase()+e.substring(1)},n.toLowerCase=function(e){return e[0].toLowerCase()+e.substring(1)},n.warn=function(e,n){console.warn(`Warning for ${n}: ${e.file}:${e.line+1}:${e.character+1}`)},n.getPosition=function(n,t){return{file:o.relative(e.cwd(),t.fileName),...r.default.getLineAndCharacterOfPosition(t,n.getStart(t))}}}).call(this,t(5))},127:function(e,n){},128:function(e,n){},183:function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id=183},184:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(12).__importDefault(t(15)),r=t(11);n.Parser=class{constructor(e){this.sourceFiles=e,this.declarations=[]}parse(){for(const e of this.sourceFiles)i.default.forEachChild(e,n=>{n.kind===i.default.SyntaxKind.EnumDeclaration&&this.preHandleEnumDeclaration(n,e)});for(const e of this.sourceFiles)i.default.forEachChild(e,n=>{this.handleSourceFile(n,e)});return this.declarations}preHandleEnumDeclaration(e,n){const t=e.members;if(t.length>0){const i=t[0];if(i.initializer)this.handleEnumDeclarationInitializer(e,t,i.initializer,n);else{const i={kind:"enum",name:e.name.text,type:"uint32",members:[],position:r.getPosition(e,n)};let o=0;for(const e of t)if(e.initializer){const{name:t,value:r}=this.getExpression(e.initializer,e.name,n);i.members.push({name:t,value:r}),o=r+1}else i.members.push({name:e.name.text,value:o}),o++;this.declarations.push(i)}}}handleEnumDeclarationInitializer(e,n,t,o){const s={kind:"enum",name:e.name.text,type:t.kind===i.default.SyntaxKind.StringLiteral?i.default.ClassificationTypeNames.stringLiteral:"uint32",members:[],position:r.getPosition(e,o)};for(const e of n)if(e.initializer){const{name:n,value:t}=this.getExpression(e.initializer,e.name,o);s.members.push({name:n,value:t})}this.declarations.push(s)}handleSourceFile(e,n){const t=this.getJsDocs(e,n),r=t.find(e=>"entry"===e.name);e.kind===i.default.SyntaxKind.TypeAliasDeclaration?this.handleTypeAliasDeclaration(e,t,r,n):e.kind===i.default.SyntaxKind.InterfaceDeclaration||e.kind===i.default.SyntaxKind.ClassDeclaration?this.handleInterfaceOrClassDeclaration(e,t,r,n):e.kind===i.default.SyntaxKind.FunctionDeclaration&&this.handleFunctionDeclaration(e,t,n)}handleFunctionDeclaration(e,n,t){const i=e.type?this.getType(e.type,t):{kind:void 0,position:r.getPosition(e,t)},o={kind:"function",name:e.name?e.name.text:"",type:i,optional:!!e.questionToken,parameters:e.parameters.map(e=>this.handleFunctionParameter(e,t))};for(const e of n)e.comment?"method"===e.name?o.method=e.comment:"path"===e.name?o.path=e.comment:"description"===e.name?o.description=e.comment:"summary"===e.name?o.summary=e.comment:"tags"===e.name&&(o.tags=e.comment.split(",")):"deprecated"===e.name&&(o.deprecated=!0);this.declarations.push(o)}handleFunctionParameter(e,n){const t=this.getParameter(e,n),i=this.getJsDocs(e,n);for(const e of i)e.comment&&"in"===e.name?t.in=e.comment:this.setJsDoc(e,t.type,n);return t}handleInterfaceOrClassDeclaration(e,n,t,i){if(this.declarations.some(n=>"enum"===n.kind&&n.name===e.name.text))return;let o,{members:s,minProperties:a,maxProperties:m,additionalProperties:p}=this.getObjectMembers(e.members,i);({minProperties:a,maxProperties:m,additionalProperties:o}=this.handleHeritageClauses(e,s,a,m)),o&&(p=o);const u={kind:"object",name:e.name.text,members:s,minProperties:a,maxProperties:void 0===p?m:void 0,additionalProperties:p,entry:t?t.comment:void 0,position:r.getPosition(e,i)};for(const e of n)this.setJsDocObject(e,u);this.declarations.push(u)}handleHeritageClauses(e,n,t,r){let o;if(e.heritageClauses)for(const s of e.heritageClauses)if(s.kind===i.default.SyntaxKind.HeritageClause)for(const e of s.types)e.kind===i.default.SyntaxKind.ExpressionWithTypeArguments&&({minProperties:t,maxProperties:r,additionalProperties:o}=this.handleExpressionWithTypeArguments(e.expression,n,t,r));return{minProperties:t,maxProperties:r,additionalProperties:o}}handleExpressionWithTypeArguments(e,n,t,i){const r=e.text;let o;this.preHandleType(r);const s=this.declarations.find(e=>"object"===e.kind&&e.name===r);if(s&&"object"===s.kind){o=s.additionalProperties;for(const e of s.members)n.every(n=>n.name!==e.name)&&(n.push(e),i++,e.optional||t++)}return{minProperties:t,maxProperties:i,additionalProperties:o}}handleTypeAliasDeclaration(e,n,t,o){if(e.type.kind===i.default.SyntaxKind.ArrayType)this.handleArrayTypeInTypeAliasDeclaration(e.type,e.name,n,t,o);else if(e.type.kind===i.default.SyntaxKind.TypeLiteral||e.type.kind===i.default.SyntaxKind.UnionType||e.type.kind===i.default.SyntaxKind.IntersectionType)this.handleTypeLiteralOrUnionTypeOrIntersectionType(e.type,e.name,n,t,o);else if(e.type.kind===i.default.SyntaxKind.TypeReference){const n=e.type,t={kind:"reference",newName:e.name.text,name:n.typeName.text,position:r.getPosition(e,o)};this.declarations.push(t)}}handleTypeLiteralOrUnionTypeOrIntersectionType(e,n,t,o,s){if(e.kind===i.default.SyntaxKind.UnionType){const t=e;if(t.types.every(e=>e.kind===i.default.SyntaxKind.LiteralType||e.kind===i.default.SyntaxKind.NullKeyword))return void this.handleUnionTypeOfLiteralType(t,n,s);if(t.types.every(e=>e.kind===i.default.SyntaxKind.TypeReference)){const e={kind:"union",name:n.text,members:t.types.map(e=>this.getType(e,s)),entry:o?o.comment:void 0,position:r.getPosition(n,s)};return void this.declarations.push(e)}}const{members:a,minProperties:m,maxProperties:p,additionalProperties:u}=this.getMembersInfo(e,s),l={kind:"object",name:n.text,members:a,minProperties:m,maxProperties:void 0===u?p:void 0,additionalProperties:u,entry:o?o.comment:void 0,position:r.getPosition(n,s)};for(const e of t)this.setJsDocObject(e,l);this.declarations.push(l)}handleUnionTypeOfLiteralType(e,n,t){let o;const s=[];for(const n of e.types)if(n.kind===i.default.SyntaxKind.LiteralType){const{type:e,value:t}=this.getEnumOfLiteralType(n);void 0!==e&&(o=e),void 0!==t&&s.push(t)}else n.kind===i.default.SyntaxKind.NullKeyword&&s.push(null);if(o)if("string"===o){const e={kind:"string",name:n.text,enums:s,position:r.getPosition(n,t)};this.declarations.push(e)}else if("number"===o){const e={kind:"number",type:o,name:n.text,enums:s,position:r.getPosition(n,t)};this.declarations.push(e)}else if("boolean"===o){const i={kind:"union",name:n.text,members:e.types.map(e=>this.getType(e,t)),entry:void 0,position:r.getPosition(n,t)};this.declarations.push(i)}}handleArrayTypeInTypeAliasDeclaration(e,n,t,i,o){const s=this.getType(e.elementType,o),a={kind:"array",name:n.text,type:s,entry:i?i.comment:void 0,position:r.getPosition(n,o)};for(const e of t)this.setJsDocArray(e,a,o);this.declarations.push(a)}getJsDocs(e,n){const t=e.jsDoc,i=[];if(t&&t.length>0)for(const e of t)if(e.tags)for(const t of e.tags)i.push(this.getJsDocFromTag(t,n));return i}getJsDocFromTag(e,n){let t,i,r;if("param"===e.tagName.text){const o=e.typeExpression;t=this.getType(o.type,n),i=e.name.text,r=e.isBracketed}return{name:e.tagName.text,type:t,paramName:i,comment:e.comment,optional:r}}getType(e,n){if(e.kind===i.default.SyntaxKind.StringKeyword)return{kind:"string",position:r.getPosition(e,n)};if(e.kind===i.default.SyntaxKind.NumberKeyword)return{kind:"number",type:"number",position:r.getPosition(e,n)};if(e.kind===i.default.SyntaxKind.BooleanKeyword)return{kind:"boolean",position:r.getPosition(e,n)};if(e.kind===i.default.SyntaxKind.TypeLiteral)return this.getTypeOfTypeLiteral(e,n);if(e.kind===i.default.SyntaxKind.ArrayType){const t=e;return{kind:"array",type:this.getType(t.elementType,n),position:r.getPosition(e,n)}}if(e.kind===i.default.SyntaxKind.TypeReference)return this.getTypeOfTypeReference(e,n);if(e.kind===i.default.SyntaxKind.UnionType)return this.getTypeOfUnionType(e,n);if(e.kind===i.default.SyntaxKind.LiteralType)return this.getTypeOfLiteralType(e,n);if(e.kind===i.default.SyntaxKind.NullKeyword)return{kind:"null",position:r.getPosition(e,n)};if(e.kind===i.default.SyntaxKind.TupleType){const t=e;let i;for(const e of t.elementTypes)i=this.getType(e,n);if(i)return{kind:"array",type:i,minItems:t.elementTypes.length,maxItems:t.elementTypes.length,position:r.getPosition(e,n)}}const t=r.getPosition(e,n);return e.kind!==i.default.SyntaxKind.AnyKeyword&&r.warn(t,"parser"),{kind:void 0,position:t}}getEnumOfLiteralType(e){return e.literal.kind===i.default.SyntaxKind.StringLiteral?{type:"string",value:e.literal.text}:e.literal.kind===i.default.SyntaxKind.NumericLiteral?{type:"number",value:+e.literal.text}:e.literal.kind===i.default.SyntaxKind.TrueKeyword?{type:"boolean",value:!0}:e.literal.kind===i.default.SyntaxKind.FalseKeyword?{type:"boolean",value:!1}:{type:void 0,value:void 0}}getTypeOfLiteralType(e,n){let t;const i=[],{type:o,value:s}=this.getEnumOfLiteralType(e);return void 0!==o&&(t=o),void 0!==s&&i.push(s),t?{kind:"enum",type:t,name:t,enums:i,position:r.getPosition(e,n)}:{kind:void 0,position:r.getPosition(e,n)}}getTypeOfUnionType(e,n){if(!e.types.every(e=>e.kind===i.default.SyntaxKind.LiteralType))return{kind:"union",members:e.types.map(e=>this.getType(e,n)),position:r.getPosition(e,n)};{let t;const i=[];for(const n of e.types){const{type:e,value:r}=this.getEnumOfLiteralType(n);void 0!==e&&(t=e),void 0!==r&&i.push(r)}if(t)return{kind:"enum",type:t,name:t,enums:i,position:r.getPosition(e,n)}}return{kind:void 0,position:r.getPosition(e,n)}}getTypeOfArrayTypeReference(e,n){if(e.typeArguments&&1===e.typeArguments.length){const t=e.typeArguments[0];return{kind:"array",type:this.getType(t,n),position:r.getPosition(t,n)}}return{kind:"array",type:{kind:void 0},position:r.getPosition(e,n)}}getTypeOfTypeReference(e,n){if(e.typeName.kind===i.default.SyntaxKind.Identifier){if(o.includes(e.typeName.text))return{kind:"number",type:e.typeName.text,position:r.getPosition(e.typeName,n)};if("Array"===e.typeName.text||"ReadonlyArray"===e.typeName.text)return this.getTypeOfArrayTypeReference(e,n);if(("Promise"===e.typeName.text||"ReturnType"===e.typeName.text||"DeepReturnType"===e.typeName.text)&&e.typeArguments&&e.typeArguments.length>0){const t=e.typeArguments[0];if(t.kind===i.default.SyntaxKind.TypeReference)return this.getTypeOfTypeReference(t,n)}return{kind:"reference",name:e.typeName.text,position:r.getPosition(e.typeName,n)}}if(e.typeName.kind===i.default.SyntaxKind.QualifiedName){const t=e.typeName.left.text,i=this.declarations.find(e=>"enum"===e.kind&&e.name===t);if(i)return{kind:"enum",name:i.name,type:i.type,enums:i.members.map(e=>e.value),position:r.getPosition(e.typeName,n)}}return{kind:void 0,position:r.getPosition(e.typeName,n)}}getTypeOfTypeLiteral(e,n){if(1!==e.members.length||e.members[0].kind!==i.default.SyntaxKind.IndexSignature){const{members:t,minProperties:i,maxProperties:o,additionalProperties:s}=this.getMembersInfo(e,n);return{kind:"object",members:t,minProperties:i,maxProperties:void 0===s?o:void 0,additionalProperties:s,position:r.getPosition(e,n)}}{const t=e.members[0];if(1===t.parameters.length){const e=t.parameters[0].type;if(e&&t.type)return{kind:"map",key:this.getType(e,n),value:this.getType(t.type,n),position:r.getPosition(e,n)}}}return{kind:void 0,position:r.getPosition(e,n)}}getMembersInfo(e,n){if(e.kind===i.default.SyntaxKind.TypeLiteral){const t=e;return this.getObjectMembers(t.members,n)}return e.kind===i.default.SyntaxKind.UnionType?this.getMembersInfoOfUnionType(e,n):e.kind===i.default.SyntaxKind.IntersectionType?this.getMembersInfoOfIntersectionType(e,n):e.kind===i.default.SyntaxKind.ParenthesizedType?this.getMembersInfoOfParenthesizedType(e,n):e.kind===i.default.SyntaxKind.TypeReference?this.getMembersInfoOfTypeReference(e):{members:[],minProperties:0,maxProperties:0}}getMembersInfoOfUnionType(e,n){const t=[];let i=1/0,r=0;for(const o of e.types){const e=this.getMembersInfo(o,n);if(i>e.minProperties&&(i=e.minProperties),r<e.maxProperties&&(r=e.maxProperties),0===t.length){const n=JSON.parse(JSON.stringify(e.members));t.push(...n)}else{const n=e.members;this.setOptionalAndEnumOfUnionType(t,n);for(const e of n)if(t.every(n=>n.name!==e.name)){const n=JSON.parse(JSON.stringify(e));n.optional=!0,t.push(n)}}}return{members:t,minProperties:i,maxProperties:r}}setOptionalAndEnumOfUnionType(e,n){for(const t of e){const e=n.find(e=>e.name===t.name);e?this.setEnumOfUnionType(t,e):t.optional=!0}}setEnumOfUnionType(e,n){if("enum"===n.type.kind&&"enum"===e.type.kind)for(const t of n.type.enums)e.type.enums.every(e=>e!==t)&&e.type.enums.push(t)}getMembersInfoOfIntersectionType(e,n){const t=[];let i=0,r=0;for(const o of e.types){const e=this.getMembersInfo(o,n);i+=e.minProperties,r+=e.maxProperties;const s=e.members;for(const e of s)t.every(n=>n.name!==e.name)&&t.push(JSON.parse(JSON.stringify(e)))}return{members:t,minProperties:i,maxProperties:r}}getMembersInfoOfParenthesizedType(e,n){const t=[],i=this.getMembersInfo(e.type,n),r=i.minProperties,o=i.maxProperties,s=JSON.parse(JSON.stringify(i.members));for(const e of s)t.push(e);return{members:t,minProperties:r,maxProperties:o}}getMembersInfoOfTypeReference(e){const n=[];let t=0,i=0;const r=e.typeName.text;this.preHandleType(r);const o=this.declarations.find(e=>"object"===e.kind&&e.name===r);if(o&&"object"===o.kind)for(const e of o.members)n.every(n=>n.name!==e.name)&&(n.push(JSON.parse(JSON.stringify(e))),i++,e.optional||t++);return{members:n,minProperties:t,maxProperties:i}}preHandleType(e){if(this.declarations.some(n=>n.name===e))return;let n=!1;for(const t of this.sourceFiles){if(n)return;i.default.forEachChild(t,r=>{n||(r.kind===i.default.SyntaxKind.InterfaceDeclaration?r.name.text===e&&(n=!0,this.handleSourceFile(r,t)):r.kind===i.default.SyntaxKind.TypeAliasDeclaration&&r.name.text===e&&(n=!0,this.handleSourceFile(r,t)))})}}getObjectMembers(e,n){const t=[];let r,o=0,s=0;for(const a of e)if(a.kind===i.default.SyntaxKind.PropertySignature||a.kind===i.default.SyntaxKind.PropertyDeclaration){const e=a,i=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(e,n);t.push(i),e.questionToken||o++,s++}else if(a.kind===i.default.SyntaxKind.IndexSignature){const e=a;e.type&&(r=this.getType(e.type,n))}else if(a.kind===i.default.SyntaxKind.MethodSignature||a.kind===i.default.SyntaxKind.MethodDeclaration){const e=a,i=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(e,n);t.push(i)}else if(a.kind===i.default.SyntaxKind.Constructor){const e=a;for(const r of e.parameters)if(r.modifiers&&r.modifiers.some(e=>e.kind===i.default.SyntaxKind.PublicKeyword||e.kind===i.default.SyntaxKind.PrivateKeyword||e.kind===i.default.SyntaxKind.ProtectedKeyword)){const e=this.getObjectMemberOfPropertyOrMethodOrConstructorParameter(r,n);t.push(e),r.questionToken||o++,s++}}return{members:t,minProperties:o,maxProperties:s,additionalProperties:r}}getExpression(e,n,t){const{type:i,value:r}=this.getTypeAndValueOfExpression(e,t);return{name:n.text,type:i,value:r}}getTypeAndValueOfExpression(e,n){if(e.kind===i.default.SyntaxKind.StringLiteral)return{type:{kind:"string",position:r.getPosition(e,n)},value:e.text};if(e.kind===i.default.SyntaxKind.NumericLiteral)return{type:{kind:"number",type:"number",position:r.getPosition(e,n)},value:+e.text};if(e.kind===i.default.SyntaxKind.FalseKeyword||e.kind===i.default.SyntaxKind.TrueKeyword)return{type:{kind:"boolean",position:r.getPosition(e,n)},value:e.kind===i.default.SyntaxKind.TrueKeyword};if(e.kind===i.default.SyntaxKind.ArrayLiteralExpression){const t=e;let i={kind:void 0,position:r.getPosition(e,n)};const o=[];for(const e of t.elements){const{type:t,value:r}=this.getTypeAndValueOfExpression(e,n);i=t,o.push(r)}return{type:{kind:"array",type:i,position:r.getPosition(e,n)},value:o}}if(e.kind===i.default.SyntaxKind.ObjectLiteralExpression){const t=e,o=[],s={};for(const e of t.properties)if(e.kind===i.default.SyntaxKind.PropertyAssignment){const t=this.getExpression(e.initializer,e.name,n);o.push({name:t.name,type:t.type}),s[t.name]=t.value}return{type:{kind:"object",members:o,minProperties:o.length,position:r.getPosition(e,n)},value:s}}return{type:{kind:void 0,position:r.getPosition(e,n)},value:void 0}}getObjectMemberOfPropertyOrMethodOrConstructorParameter(e,n){const t={name:e.name.text,type:{kind:void 0,position:r.getPosition(e,n)}};let o;if(e.questionToken&&(t.optional=!0),(e.kind===i.default.SyntaxKind.PropertySignature||e.kind===i.default.SyntaxKind.PropertyDeclaration)&&e.initializer){const{type:i,value:r}=this.getTypeAndValueOfExpression(e.initializer,n);t.type=i,o=r}return e.type&&(t.type=this.getType(e.type,n)),void 0!==o&&(t.type.default=o),e.kind!==i.default.SyntaxKind.PropertySignature&&e.kind!==i.default.SyntaxKind.PropertyDeclaration||this.setPropertyJsDoc(e,t,n),e.kind!==i.default.SyntaxKind.MethodSignature&&e.kind!==i.default.SyntaxKind.MethodDeclaration||(t.parameters=e.parameters.map(e=>this.getParameter(e,n))),t}getParameter(e,n){let t,i;if(e.initializer){const r=this.getTypeAndValueOfExpression(e.initializer,n);t=r.type,i=r.value}return e.type&&(t=this.getType(e.type,n)),t||(t={kind:void 0,position:r.getPosition(e,n)}),t.default=i,{name:e.name.text,type:t,optional:!!e.questionToken}}setJsDoc(e,n,t){"mapValueType"===e.name?this.setJsDocMapValue(e,n):"type"===e.name?this.overrideType(n,e):"array"===n.kind?this.setJsDocArray(e,n,t):"number"===n.kind?this.setJsDocNumber(e,n):"string"===n.kind?this.setJsDocString(e,n):"boolean"===n.kind?this.setJsDocBoolean(e,n):"object"===n.kind?this.setJsDocObject(e,n):"reference"===n.kind&&this.setJsDocReference(e,n)}setPropertyJsDoc(e,n,t){const i=this.getJsDocs(e,t);for(const e of i)"tag"===e.name?this.setJsDocTag(e,n):"param"===e.name?this.setJsDocParam(e,n):this.setJsDoc(e,n.type,t)}setJsDocReference(e,n){if(e.comment)try{n.default=JSON.parse(this.getJsDocComment(e.comment))}catch(e){r.warn(n.position,"parser")}}setJsDocTag(e,n){e.comment&&(n.tag=+e.comment)}setJsDocMapValue(e,n){e.comment&&"map"===n.kind&&"number"===n.value.kind&&(n.value.type=e.comment)}setJsDocParam(e,n){e.paramName&&e.type&&(n.parameters||(n.parameters=[]),n.parameters.push({name:e.paramName,type:e.type,optional:e.optional})),this.overrideType(n.type,e)}setJsDocBoolean(e,n){e.comment&&("default"===e.name?n.default="true"===this.getJsDocComment(e.comment).toLowerCase():"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment))}getJsDocComment(e){return e.length>=2&&(e.startsWith("'")&&e.endsWith("'")||e.startsWith('"')&&e.endsWith('"')||e.startsWith("`")&&e.endsWith("`"))?e.substring(1,e.length-1):e}setJsDocString(e,n){e.comment&&("minLength"===e.name?n.minLength=+e.comment:"maxLength"===e.name?n.maxLength=+e.comment:"pattern"===e.name?n.pattern=e.comment:"default"===e.name?n.default=this.getJsDocComment(e.comment):"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment))}setJsDocNumber(e,n){e.comment&&("multipleOf"===e.name?n.multipleOf=+e.comment:"maximum"===e.name?n.maximum=+e.comment:"minimum"===e.name?n.minimum=+e.comment:"exclusiveMaximum"===e.name?n.exclusiveMaximum=+e.comment:"exclusiveMinimum"===e.name?n.exclusiveMinimum=+e.comment:"default"===e.name?n.default=+this.getJsDocComment(e.comment):"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment))}overrideType(e,n){n&&n.comment&&("number"===e.kind?e.type=n.comment:"array"===e.kind&&"number"===e.type.kind&&(e.type={kind:e.type.kind,type:n.comment,position:e.type.position}))}setJsDocArray(e,n,t){e.comment?"minItems"===e.name?n.minItems=+e.comment:"maxItems"===e.name?n.maxItems=+e.comment:"itemType"===e.name?this.overrideType(n,e):"number"===n.type.kind?this.setJsDocNumberArray(e,n.type):"string"===n.type.kind?this.setJsDocStringArray(e,n.type):"boolean"===n.type.kind?"itemDefault"===e.name&&(n.type.default="true"===this.getJsDocComment(e.comment).toLowerCase()):"default"===e.name&&(n.default=JSON.parse(this.getJsDocComment(e.comment))):"uniqueItems"===e.name?n.uniqueItems=!0:"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment)}setJsDocNumberArray(e,n){e.comment&&("itemMultipleOf"===e.name?n.multipleOf=+e.comment:"itemMinimum"===e.name?n.minimum=+e.comment:"itemMaximum"===e.name?n.maximum=+e.comment:"itemExclusiveMinimum"===e.name?n.exclusiveMinimum=+e.comment:"itemExclusiveMaximum"===e.name?n.exclusiveMaximum=+e.comment:"itemDefault"===e.name&&(n.default=+this.getJsDocComment(e.comment)))}setJsDocStringArray(e,n){e.comment&&("itemMinLength"===e.name?n.minLength=+e.comment:"itemMaxLength"===e.name?n.maxLength=+e.comment:"itemPattern"===e.name?n.pattern=e.comment:"itemDefault"===e.name&&(n.default=this.getJsDocComment(e.comment)))}setJsDocObject(e,n){e.comment?"minProperties"===e.name?n.minProperties=+e.comment:"maxProperties"===e.name?n.maxProperties=+e.comment:"default"===e.name?n.default=JSON.parse(this.getJsDocComment(e.comment)):"title"===e.name?n.title=e.comment:"description"===e.name&&(n.description=e.comment):"additionalProperties"===e.name&&(n.additionalProperties=!0)}};const o=["double","float","uint32","fixed32","integer","int32","sint32","sfixed32","uint64","fixed64","int64","sint64","sfixed64"]},185:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(11);function r(e,n){const t=[];let r=n.members.reduce((e,n)=>n.tag?Math.max(e,n.tag):e,0);for(const o of n.members){o.tag||r++;const{modifier:n,propertyType:a}=s(e,o.type);a?t.push(`    ${n}${a} ${o.name} = ${o.tag?o.tag:r};`):i.warn(o.type.position,"protobuf generator")}return`message ${n.name} {\n${t.join("\n")}\n}`}function o(e){const n=[];for(const t of e.members)"number"==typeof t.value&&n.push(`    ${t.name} = ${t.value};`);if(n.length>0)return`enum ${e.name} {\n${n.join("\n")}\n}`}function s(e,n){let t="",i="";return"map"===n.kind?i=function(e,n){let t="";"number"===n.value.kind?({propertyType:t}=s(e,n.value)):"reference"===n.value.kind&&(t=n.value.name);if(t)return`map<${n.key.kind}, ${t}>`;return""}(e,n):"array"===n.kind?(t="repeated ",({propertyType:i}=s(e,n.type))):"enum"===n.kind?i="string"===n.type?"string":n.name:"reference"===n.kind?i=function(e,n){const t=e.find(e=>"enum"===e.kind&&e.name===n.name);if(t&&"enum"===t.kind&&"string"===t.type)return"string";return n.name}(e,n):"number"===n.kind?i="number"===n.type?"double":"integer"===n.type?"int32":n.type:"string"===n.kind?i=n.kind:"boolean"===n.kind&&(i="bool"),{modifier:t,propertyType:i}}n.generateProtobuf=function(e){const n=[];for(const t of e)if("object"===t.kind){const i=r(e,t);n.push(i)}else if("enum"===t.kind){const e=o(t);e&&n.push(e)}return`syntax = "proto3";\n\n${n.join("\n\n")}\n`}},186:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(11),r="grapql schema generator";function o(e,n,t,i){if("object"===e.kind)for(const r of e.members){if(r.parameters)for(const e of r.parameters)if("reference"===e.type.kind){const i=e.type.name,r=n.find(e=>e.name===i);r&&o(r,n,t,!0)}if(i&&"reference"===r.type.kind){const e=r.type.name,i=n.find(n=>n.name===e);i&&o(i,n,t,!0)}}i&&!t.has(e)&&(t.add(e),o(e,n,t,!0))}function s(e,n,t){if(0===n.members.length)return;const i=n.members.map(n=>(function(e,n){const t=a(e,n.type);let i,r=!1;if(t.propertyType){r=t.hasJSON;let o="";if(n.parameters){const t=function(e,n){const t=[];let i=!1;for(const r of n){const n=a(e,r.type);n.propertyType&&(r.optional?t.push(`${r.name}: ${n.propertyType}`):t.push(`${r.name}: ${n.propertyType}!`),i=n.hasJSON)}return{result:t.length>0?`(${t.join(", ")})`:"",hasJSON:i}}(e,n.parameters);o=t.result,r||(r=t.hasJSON)}i=`  ${n.name}${o}: ${n.optional?t.propertyType:t.propertyType+"!"}`}return{result:i,hasJSON:r}})(e,n)),r=i.some(e=>e.hasJSON);return{result:`${t.has(n)?"input":"type"} ${n.name} {\n${i.filter(e=>e.result).map(e=>e.result).join("\n")}\n}`,hasJSON:r}}function a(e,n){let t="",o=!1;if("array"===n.kind){const i=a(e,n.type);i.propertyType&&(t=`[${i.propertyType}]`,o=i.hasJSON)}else if("enum"===n.kind)t="string"===n.name?"String":n.name;else if("reference"===n.kind){const s=function(e,n){const t=e.find(e=>e.name===n.name);let o=!1,s=n.name;t&&("enum"===t.kind&&"string"===t.type?s="String":"object"===t.kind&&0===t.members.length?(i.warn(n.position,r),s="JSON",o=!0):"union"===t.kind&&t.members.some(e=>"reference"!==e.kind)&&(i.warn(n.position,r),s="JSON",o=!0));return{propertyType:s,hasJSON:o}}(e,n);t=s.propertyType,o=s.hasJSON}else"number"===n.kind?t="number"===n.type||"float"===n.type||"double"===n.type?"Float":"Int":"string"===n.kind?t="String":"boolean"===n.kind?t="Boolean":"map"===n.kind?(i.warn(n.position,r),t="JSON",o=!0):"union"===n.kind?n.members.some(e=>"reference"!==e.kind)&&(i.warn(n.position,r),t="JSON",o=!0):void 0===n.kind&&(t="JSON",o=!0);return{propertyType:t,hasJSON:o}}n.generateGraphqlSchema=function(e){const n=new Set;for(const t of e)o(t,e,n,!1);const t=[];let a=!1;for(const o of e)if("object"===o.kind){const i=s(e,o,n);i&&(t.push(i.result),a||(a=i.hasJSON))}else if("enum"===o.kind){const e=o.members.map(e=>`  ${e.name}`);t.push(`enum ${o.name} {\n${e.join("\n")}\n}`)}else if("union"===o.kind)if(o.members.every(e=>"reference"===e.kind)){const e=o.members.map(e=>e.name);t.push(`union ${o.name} = ${e.join(" | ")}`)}else i.warn(o.position,r);else if("string"===o.kind&&o.enums){const e=o.enums.map(e=>`  ${e}`);t.push(`enum ${o.name} {\n${e.join("\n")}\n}`)}return(a?"scalar JSON\n\n":"")+t.join("\n\n")+"\n"}},187:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(11);function r(e,n){let t="";if("array"===n.kind){const o=r(e,n.type);o&&(t=`list(${i.toLowerCase(o)})`)}else"enum"===n.kind?t=n.name:"reference"===n.kind?t=function(e,n){const t=e.find(e=>"enum"===e.kind&&e.name===n.name);if(t&&"enum"===t.kind&&"string"===t.type)return"string";return n.name}(e,n):"number"===n.kind?t="number"===n.type||"float"===n.type||"double"===n.type?"float":"int":"string"===n.kind?t="string":"boolean"===n.kind&&(t="bool");return t}n.generateReasonTypes=function(e){const n=[];for(const t of e)if("object"===t.kind){const o=t.members.map(n=>{const t=r(e,n.type);if(t){const e=n.optional?`option(${i.toLowerCase(t)})`:i.toLowerCase(t);return`  ${n.name}: ${e}`}});n.push(`type ${i.toLowerCase(t.name)} = {\n  .\n${o.filter(e=>e).map(e=>e+",").join("\n")}\n};`)}else if("enum"===t.kind){const e=t.members.map(e=>`  | ${i.toUpperCase(e.name)}`).join("\n");n.push(`type ${i.toLowerCase(t.name)} =\n${e};`)}return n.join("\n\n")+"\n"}},188:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(11);function r(e,n){let t="";if("array"===n.kind){const o=r(e,n.type);o&&(t=`${i.toLowerCase(o)} list`)}else"enum"===n.kind?t=n.name:"reference"===n.kind?t=function(e,n){const t=e.find(e=>"enum"===e.kind&&e.name===n.name);if(t&&"enum"===t.kind&&"string"===t.type)return"string";return n.name}(e,n):"number"===n.kind?t="number"===n.type||"float"===n.type||"double"===n.type?"float":"int":"string"===n.kind?t="string":"boolean"===n.kind&&(t="bool");return t}n.generateOcamlTypes=function(e){const n=[];for(const t of e)if("object"===t.kind){const o=t.members.map(n=>{const t=r(e,n.type);if(t)return`  ${n.name}: ${n.optional?i.toLowerCase(t)+" option":i.toLowerCase(t)}`});n.push(`type ${i.toLowerCase(t.name)} = {\n${o.filter(e=>e).map(e=>e+";").join("\n")}\n}`)}else if("enum"===t.kind){const e=t.members.map(e=>`  | ${i.toUpperCase(e.name)}`).join("\n");n.push(`type ${i.toLowerCase(t.name)} =\n${e}`)}return n.join("\n\n")+"\n"}},189:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(11),r=t(190);function o(e,n){const t=e.members.map(e=>{const t=m(n,e.type,e.optional);if(t){const n=r(e.name);return e.name===n?`  pub ${r(e.name)}: ${t}`:`  #[serde(rename = "${e.name}")] pub ${r(e.name)}: ${t}`}});return`#[derive(Serialize, Deserialize, Debug)]\npub struct ${e.name} {\n${t.filter(e=>e).map(e=>e+",").join("\n")}\n}`}function s(e){const n=[];let t=!1;if("string"===e.type){t=!0;const r=e.members.map(e=>`  ${i.toUpperCase(e.name)},`).join("\n");n.push(`#[derive(Debug)]\npub enum ${e.name} {\n${r}\n}`);const o=e.members.map(n=>`      ${e.name}::${i.toUpperCase(n.name)} => "${n.value}",`).join("\n");n.push(`impl Serialize for ${e.name} {\n  fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>\n  where\n    S: Serializer,\n  {\n    serializer.serialize_str(match *self {\n${o}\n    })\n  }\n}`);const s=e.members.map(n=>`      "${n.value}" => Ok(${e.name}::${i.toUpperCase(n.name)}),`).join("\n");n.push(`impl<'de> Deserialize<'de> for ${e.name} {\n  fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>\n  where\n    D: Deserializer<'de>,\n  {\n    let s = String::deserialize(deserializer)?;\n    match s.as_str() {\n${s}\n      _ => Err(Error::custom("wrong enum value.")),\n    }\n  }\n}`)}else{const t=e.members.map(e=>`  ${i.toUpperCase(e.name)} = ${e.value},`).join("\n");n.push(`#[derive(Serialize, Deserialize, Debug)]\npub enum ${e.name} {\n${t}\n}`)}return{messages:n,useSerde:t}}function a(e,n){const t=e.members.map(e=>{const t=m(n,e,void 0);if(t)return`  ${t}(${t})`});return`#[derive(Serialize, Deserialize, Debug)]\npub enum ${e.name} {\n${t.filter(e=>e).map(e=>e+",").join("\n")}\n}`}function m(e,n,t){let i="";if("array"===n.kind){const t=m(e,n.type,void 0);t&&(i=`Vec<${t}>`)}else"enum"===n.kind?i="string"===n.name?"String":"boolean"===n.name?"bool":n.name:"reference"===n.kind?i=function(e,n){const t=e.find(e=>"enum"===e.kind&&e.name===n.name);if(t&&"enum"===t.kind&&"string"===t.type)return"String";return n.name}(e,n):"number"===n.kind?i=function(e){if("number"===e.type||"float"===e.type)return"f32";if("double"===e.type)return"f64";if("integer"===e.type||"int32"===e.type||"sint32"===e.type||"sfixed32"===e.type)return"i32";if("uint32"===e.type||"fixed32"===e.type)return"u32";if("int64"===e.type||"sint64"===e.type||"sfixed64"===e.type)return"i64";if("uint64"===e.type||"fixed64"===e.type)return"u64";return e.type}(n):"string"===n.kind?i="String":"boolean"===n.kind&&(i="bool");return t?`Option<${i}>`:i}n.generateRustTypes=function(e){const n=[];let t=!1;for(const r of e)if("object"===r.kind){const t=o(r,e);n.push(t)}else if("enum"===r.kind){const{messages:e,useSerde:i}=s(r);n.push(...e),i&&(t=!0)}else if("union"===r.kind){const t=a(r,e);n.push(t)}else if("reference"===r.kind){const e=`type ${(i=r).newName} = ${i.name};`;n.push(e)}var i;return t&&n.unshift("extern crate serde;\n\npub use self::serde::ser::{Serialize, Serializer};\npub use self::serde::de::{Deserialize, Deserializer, Error};"),n.join("\n\n")+"\n"}},191:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(11);function r(e){const n=e.members.map(e=>(function(e){const n=o(e.type,2,e.optional);return`  ${e.name}: ${n},`})(e));return`export const ${i.toLowerCase(e.name)}Schema = {\n${n.join("\n")}\n}`}function o(e,n,t){const i=[`type: ${function(e){let n="";if("string"===e.kind)n="String";else if("boolean"===e.kind)n="Boolean";else if("number"===e.kind)n="Number";else if("array"===e.kind){const t=o(e.type,4);n=`[\n      ${t}\n    ]`}else n="reference"===e.kind?"ObjectId"===e.name||"ObjectID"===e.name?"Schema.Types.ObjectId":"Date"===e.name?"Date":"Schema.Types.Mixed":"Schema.Types.Mixed";return n}(e)}`,`required: ${!t}`],r=function(e){if("number"==typeof e.default)return e.default;if("string"==typeof e.default)return s(e.default);return}(e);void 0!==r&&i.push(`default: ${r}`);const a=function(e){if("enum"===e.kind&&"string"===e.type&&e.enums&&e.enums.length>0)return e.enums.map(e=>`${s(e)}`).join(", ");return}(e);void 0!==a&&i.push(`enum: [${a}]`),"number"===e.kind&&(void 0!==e.minimum&&i.push(`min: ${e.minimum}`),void 0!==e.maximum&&i.push(`max: ${e.maximum}`)),"string"===e.kind&&(void 0!==e.minLength&&i.push(`minLength: ${e.minLength}`),void 0!==e.maxLength&&i.push(`maxLength: ${e.maxLength}`),void 0!==e.pattern&&i.push(`match: ${s(e.pattern)}`));const m="  ".repeat(n);return`{\n${m}${i.join(",\n"+m)}\n${"  ".repeat(n-1)}}`}function s(e){return JSON.stringify(e)}n.generateMongooseSchema=function(e){const n=[];for(const t of e)"object"===t.kind&&n.push(r(t));return"// tslint:disable\n\nimport { Schema } from 'mongoose'\n\n"+n.join("\n\n")+"\n"}},192:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(12).__importStar(t(41));function r(e,n,t){if(t&&t.length>0){return`input: { ${t.map(t=>{const i=t.optional?"?":"",r=s(t.type,e,n);return`${t.name}${i}: ${r}`}).join(", ")} }`}return"input: {}"}function o(e){return"string"===e||"number"===e||"boolean"===e}function s(e,n,t){if("array"===e.kind)return`Array<${s(e.type,n,t)}>`;if("enum"===e.kind)return o(e.name)||n.push(e),e.name;if("reference"===e.kind){const n=t.find(n=>n.name===e.name);return n&&("enum"===n.kind||"string"===n.kind&&n.enums)?e.name:e.name+"<TContext>"}if("map"===e.kind){return`{ [name: ${s(e.key,n,t)}]: ${s(e.value,n,t)} }`}return"union"===e.kind?e.members.map(e=>s(e,n,t)).join(" | "):void 0===e.kind?"any":e.kind}n.generateGraphqlRootType=function(e,n){const t=[],a=[],m=[],p=[],u=[];for(const n of e)if("object"===n.kind){const i="Query"===n.name||"Mutation"===n.name;if(i)for(const i of n.members){const n=s(i.type,u,e),o=r(u,e,i.parameters);t.push(`  ${i.name}(${o}, context: TContext, info: GraphQLResolveInfo): DeepPromisifyReturnType<${n}> | Promise<DeepPromisifyReturnType<${n}>>`),m.push(`  ${i.name}: DeepReturnType<${n}>`)}else{const t=[];for(const i of n.members){const n=s(i.type,u,e),o=i.optional?"?":"";if(i.parameters){const s=r(u,e,i.parameters);t.push(`  ${i.name}${o}(${s}, context: TContext, info: GraphQLResolveInfo): ${n} | Promise<${n}>`)}else t.push(`  ${i.name}${o}: ${n}`)}a.push(`export interface ${n.name}<TContext = any> {\n${t.join("\n")}\n}`)}const o=[],l=i?"":"?";for(const t of n.members){const n=r(u,e,t.parameters);o.push(`    ${t.name}${l}(parent: any, ${n}, context: TContext, info: GraphQLResolveInfo): any,`)}p.push(`  ${n.name}${l}: {\n${o.join("\n")}\n  },`)}else if("reference"===n.kind)a.push(`export type ${n.newName}<TContext = any> = ${n.name}<TContext>`);else if("union"===n.kind){const t=s(n,u,e);a.push(`export type ${n.name}<TContext = any> = ${t}`)}else"string"===n.kind?n.enums&&!o(n.name)&&u.push(n):"enum"===n.kind&&u.push(n);return`/**\n * This file is generated by 'types-as-schema'\n * It is not mean to be edited by hand\n */\n// tslint:disable\n\nimport { GraphQLResolveInfo } from 'graphql'\n\n${function(e,n){const t={};for(const n of e){const e=n.position.file;t[e]||(t[e]=[]),t[e].every(e=>e!==n.name)&&t[e].push(n.name)}const r=i.dirname(n),o=[];for(const e in t){let n=i.relative(r,e);n.startsWith("."+i.sep)||n.startsWith(".."+i.sep)||(n="."+i.sep+n),n=n.substring(0,n.length-i.extname(n).length),o.push(`import { ${t[e].join(", ")} } from '${n}'`)}return o.join("\n")}(u,n)}\n\nexport type DeepPromisifyReturnType<T> = {\n  [P in keyof T]: T[P] extends Array<infer U>\n    ? Array<DeepPromisifyReturnType<U>>\n    : T[P] extends ReadonlyArray<infer U>\n      ? ReadonlyArray<DeepPromisifyReturnType<U>>\n      : T[P] extends (...args: infer P) => infer R\n        ? (...args: P) => R | Promise<R>\n        : DeepPromisifyReturnType<T[P]>\n}\n\nexport type DeepReturnType<T> = {\n  [P in keyof T]: T[P] extends Array<infer U>\n    ? Array<DeepReturnType<U>>\n    : T[P] extends ReadonlyArray<infer U>\n      ? ReadonlyArray<DeepReturnType<U>>\n      : T[P] extends (...args: any[]) => infer R\n        ? R extends Promise<infer U>\n          ? U\n          : R\n        : DeepReturnType<T[P]>\n}\n\nexport interface Root<TContext = any> {\n${t.join("\n")}\n}\n\n${a.join("\n\n")}\n\nexport interface ApolloResolvers<TContext = any> {\n${p.join("\n")}\n}\n\nexport interface ResolveResult<TContext = any> {\n${m.join("\n")}\n}\n\n// tslint:enable\n`}},193:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(82);function r(e){const n=i.getJsonSchemaProperty(e);return"reference"===e.kind?{schema:n}:n}n.generateSwaggerDoc=function(e,n){const t={},o=[];for(const n of e)"function"===n.kind&&n.path&&n.method&&(t[n.path]||(t[n.path]={}),"reference"===n.type.kind&&o.push(n.type.name),t[n.path][n.method]={operationId:n.name,parameters:n.parameters.map(e=>("reference"===e.type.kind&&o.push(e.type.name),{name:e.name,required:!e.optional,in:e.in,...r(e.type)})),summary:n.summary,description:n.description,deprecated:n.deprecated,tags:n.tags,responses:{200:r(n.type)}});const s=i.getAllDefinitions(e),a={};for(const e of o){const n=i.getReferencedDefinitions(e,s,[]);Object.assign(a,n)}let m={swagger:"2.0",paths:t,definitions:a};return n&&(m={...n,...m}),JSON.stringify(m,null,2)}},194:function(e,n,t){"use strict";t.r(n);var i=t(12),r=t(15),o=t.n(r),s=t(42),a=t(83),m=t.n(a),p=t(84),u="type TypeLiteral = {\n  typeLiteralMember1: number;\n  typeLiteralMember2: string;\n}\n\n/**\n * @minProperties 1\n * @maxProperties 1\n */\ninterface Interface {\n  interfaceMember1?: number\n  interfaceMember2?: string\n\n  [name: string]: any\n}\n\ntype TypeUnion1 = TypeLiteral | {\n  typeUnionMember1: number;\n  typeUnionMember2: string;\n}\ntype TypeUnion2 =\n  {\n    kind: StringEnum.enumMember1;\n    typeUnionMember1: string;\n  } | {\n    kind: StringEnum.enumMember2;\n    typeUnionMember2: string;\n  }\ntype TypeUnion3 =\n  {\n    kind: NumberEnum.enumMember1;\n    typeUnionMember1: string;\n  } | {\n    kind: NumberEnum.enumMember2;\n    typeUnionMember2: string;\n  }\ntype TypeUnion4 =\n  {\n    kind: 'foo';\n    typeUnionMember1: string;\n  } | {\n    kind: 'bar';\n    typeUnionMember2: string;\n  }\ntype TypeUnion5 = TypeLiteral | Interface\ntype TypeUnion8 = 'foo' | 'bar' | null | false\nexport type TypeUnion9 = 'foo' | 'bar'\ntype TypeUnion = {\n  typeUnionMember1: TypeUnion1;\n  typeUnionMember2: TypeUnion2;\n  typeUnionMember3: TypeUnion3;\n  typeUnionMember4: TypeUnion4;\n  typeUnionMember5: TypeUnion5;\n  typeUnionMember6: string | null | false;\n  typeUnionMember7: 'foo' | 'bar';\n  typeUnionMember8: TypeUnion8;\n  typeUnionMember9: TypeUnion9;\n}\n\ninterface InterfaceExtends extends Interface {\n  interfaceExtendsMember1: number\n  interfaceExtendsMember2: string\n}\n\ntype TypeIntersection1 = Interface & {\n  typeIntersectionMember1: number;\n  typeIntersectionMember2: string;\n}\ntype TypeIntersection2 =\n  {\n    typeIntersectionMember1: number;\n    typeIntersectionMember2: string;\n  } & {\n    typeIntersectionMember3: number;\n    typeIntersectionMember4: string;\n  }\n\ntype TypeIntersection = {\n  typeIntersectionMember1: TypeIntersection1;\n  typeIntersectionMember2: TypeIntersection2;\n  typeIntersectionMember3: TypeLiteral & Interface;\n}\n\ntype TypeUnionAndIntersection =\n  {\n    typeIntersectionMember1: number;\n  } & (\n    {\n      kind: NumberEnum.enumMember1;\n      typeUnionMember1: string;\n    } | {\n      kind: NumberEnum.enumMember2;\n      typeUnionMember2: string;\n    }\n  )\n\nexport type TaggedField = {\n  /**\n   * @tag 2\n   */\n  taggedFieldMember1: number;\n  /**\n   * @tag 3\n   */\n  taggedFieldMember2: string;\n}\n\nexport const enum StringEnum {\n  enumMember1 = 'enum member 1',\n  enumMember2 = 'enum member 2'\n}\nexport const enum NumberEnum {\n  enumMember1,\n  enumMember2\n}\nexport const enum NumberEnum2 {\n  enumMember1 = 3,\n  enumMember2 = 4\n}\nexport type Enum = {\n  stringEnum: StringEnum;\n  numberEnum: NumberEnum;\n  numberEnum2: NumberEnum2;\n  stringEnum2: 'foo';\n}\n\ntype integer = number\ntype uint32 = number\ntype int32 = number\ntype sint32 = number\ntype fixed32 = number\ntype sfixed32 = number\ntype uint64 = number\ntype int64 = number\ntype sint64 = number\ntype fixed64 = number\ntype sfixed64 = number\ntype float = number\ntype double = number\n\ntype NumberType = {\n  /**\n   * @multipleOf 10\n   * @minimum 70\n   * @maximum 90\n   * @exclusiveMinimum 70\n   * @exclusiveMaximum 90\n   */\n  numberMember: number;\n\n  integerMember: integer;\n\n  uint32Member: uint32;\n  int32Member: int32;\n  sint32Member: sint32;\n  fixed32Member: fixed32;\n  sfixed32Member: sfixed32;\n\n  uint64Member: uint64;\n  int64Member: int64;\n  sint64Member: sint64;\n  fixed64Member: fixed64;\n  sfixed64Member: sfixed64;\n\n  floatMember: float;\n  doubleMember: double;\n\n  /**\n   * @title foo\n   * @description bar\n   */\n  titleMember: number;\n}\n\ntype StringType = {\n  /**\n   * @minLength 10\n   * @maxLength 20\n   * @pattern ^[A-z]{3}$\n   */\n  stringMember: string;\n}\n\ntype ArrayType = {\n  /**\n   * @itemMinLength 10\n   * @itemMaxLength 20\n   * @itemPattern ^[A-z]{3}$\n   */\n  arrayType1: string[];\n  /**\n   * @uniqueItems\n   * @minItems 1\n   * @maxItems 10\n   */\n  arrayType2: TypeLiteral[];\n  arrayType3: { literal: number }[];\n  /**\n   * @itemMultipleOf 100\n   * @itemMinimum 100\n   * @itemMaximum 200\n   * @itemExclusiveMinimum 300\n   * @itemExclusiveMaximum 400\n   */\n  arrayType4: uint32[];\n  arrayType5: { literal: number | string }[];\n  arrayType6: { literal: number | null }[];\n  arrayType7: { literal: TypeLiteral | null }[];\n  arrayType8: Array<{ literal: number }>;\n  arrayType9: ReadonlyArray<string>;\n}\n\ntype MapType7 = {\n  foo: string\n  [name: string]: string\n}\n\ntype MapType8 = {\n  [name: string]: string\n}\n\ntype MapType = {\n  mapType: { [name: string]: number };\n  mapType2: { [name: string]: TypeLiteral };\n  mapType3: { [name: string]: { literal: number } };\n  mapType4: { [name: string]: uint32 };\n  mapType5: { [name: string]: any };\n  mapType6: {\n    foo: number\n    [name: string]: number\n  };\n  mapType7: MapType7\n  mapType8: MapType8\n}\n\ntype ID = any\n\ntype Parameter = {\n  /**\n   * @param {string} name\n   * @param {number} age\n   */\n  member1: string\n  /**\n   * @param {string} [name]\n   */\n  member2: string\n}\n\ntype DefaultValue = {\n  /**\n   * @default foo\n   */\n  stringMember: string\n  /**\n   * @default 123\n   */\n  numberMember: number\n  /**\n   * @default true\n   */\n  booleanMember: boolean\n  /**\n   * @default 'foo bar'\n   */\n  stringMember2: string\n  /**\n   * @default ''\n   */\n  stringMember3: string\n  /**\n   * @default []\n   */\n  arrayMember: any[]\n  /**\n   * @default {}\n   */\n  objectMember: { foo: string }\n  /**\n   * @default 123\n   */\n  numberMember1: integer\n  /**\n   * @default {}\n   */\n  objectMember2: TypeLiteral\n}\n\ntype TypeReferenceMember2 = TypeLiteral\n\ntype ReferenceType = {\n  typeReferenceMember1: TypeLiteral\n  typeReferenceMember2: TypeReferenceMember2\n}\n\nclass ClassType1 {\n  classMember1: string\n  classMember2: number\n}\n\nclass ClassType2 extends ClassType1 {\n  constructor(public classMember3: string) { super() }\n  classMember4: number\n}\n\nclass ClassType3 {\n  classMember1 = 'foo'\n  classMember2 = 123\n  classMember3 = false\n  classMember4: string = 'foo'\n  classMember5 = ['foo']\n  classMember6 = { a: 1 }\n}\n\ntype ClassType = {\n  classType1: ClassType1;\n  classType2: ClassType2;\n  classType3: ClassType3;\n}\n\ntype Circular = {\n  children: Circular[]\n}\n\nimport { OuterType } from './case2'\n\n/**\n * @entry cases.json\n * @additionalProperties\n */\nexport type EntryType = {\n  optionalMember?: string;\n  booleanMember: boolean;\n  stringMember: string;\n  numberType: NumberType;\n  arrayType: ArrayType;\n  typeLiteral: { literal: number };\n  referenceType: ReferenceType;\n  interfaceType: Interface;\n  typeUnion: TypeUnion;\n  interfaceExtends: InterfaceExtends;\n  typeIntersection: TypeIntersection;\n  typeUnionAndIntersection: TypeUnionAndIntersection;\n  mapType: MapType;\n  taggedField: TaggedField;\n  enum: Enum;\n  stringNumber: StringType;\n  id: ID;\n  parameter: Parameter;\n  optionalArrayMember?: string[];\n  tupleType: [string, string];\n  defaultType: DefaultValue;\n  anyType: any;\n  classType: ClassType;\n  circular: Circular;\n  outerType: OuterType;\n  typeAlias: TypeAlias;\n}\n\nexport interface Mutation {\n  create(input: CreateInput): Promise<MutationResult>\n}\n\nexport interface CreateInput {\n  member1: string\n  member2: number\n  member3: CreateInputMember3\n}\n\nexport interface MutationResult {\n  result: boolean\n}\n\nexport abstract class Query {\n  abstract user(id: string): GetResult\n  abstract users(): GetResult\n}\n\nexport interface GetResult {\n  result: Result\n}\n\ninterface Result {\n  member1: string\n\n  member2(input: string): string\n}\n\ninterface CreateInputMember3 {\n  member1: string\n}\n\nexport interface TypeAlias {\n  result: Result2\n}\n\ntype Result2 = Result3\n\ninterface Result3 {\n  result3: string\n}\n\ninterface Pet {\n  id?: number\n  name: string\n  photoUrls: string[]\n  status: 'available' | 'pending' | 'sold'\n}\n\n/**\n * @method get\n * @path /pet/{id}\n * @summary get pet by id.\n * @description get pet by id\n * @deprecated\n * @tags pet\n */\nexport declare function getPetById(\n  /**\n   * @in path\n   * @description pet id\n   * @minimum 1\n   * @default 2\n   */\n  id: integer,\n  /**\n   * @in query\n   */\n  status: 'health' | 'sick',\n  /**\n   * @in body\n   * @minItems 1\n   */\n  tags: string[],\n  /**\n   * @in body\n   */\n  pet: Pet\n): Promise<Pet>\n\ntype ObjectId = any\n\nexport interface MongooseScheme {\n  objectId: ObjectId\n  date: Date\n}\n";function l(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"app"},[t("textarea",{directives:[{name:"model",rawName:"v-model",value:e.source,expression:"source"}],staticClass:"source",domProps:{value:e.source},on:{input:function(n){n.target.composing||(e.source=n.target.value)}}}),e._v(" "),t("div",{staticClass:"result"},[t("button",{on:{click:function(n){e.generate()}}},[e._v("generate")]),e._v(" "),t("div",{staticClass:"options"},[t("select",{directives:[{name:"model",rawName:"v-model",value:e.selectedOption,expression:"selectedOption"}],on:{change:function(n){var t=Array.prototype.filter.call(n.target.options,function(e){return e.selected}).map(function(e){return"_value"in e?e._value:e.value});e.selectedOption=n.target.multiple?t:t[0]}}},e._l(e.options,function(n){return t("option",{key:n,domProps:{value:n}},[e._v(e._s(n))])}))]),e._v(" "),"protobuf"===e.selectedOption?t("pre",{staticClass:"protobuf"},[e._v(e._s(e.protobuf))]):e._e(),e._v(" "),e.jsonSchema?t("pre",{staticClass:"json-schema"},[e._v(e._s(e.jsonSchema))]):e._e(),e._v(" "),"graphql schema"===e.selectedOption?t("pre",{staticClass:"graphql-schema"},[e._v(e._s(e.graphqlSchema))]):e._e(),e._v(" "),"reason types"===e.selectedOption?t("pre",{staticClass:"reason-types"},[e._v(e._s(e.reasonTypes))]):e._e(),e._v(" "),"ocaml types"===e.selectedOption?t("pre",{staticClass:"ocaml-types"},[e._v(e._s(e.ocamlTypes))]):e._e(),e._v(" "),"rust types"===e.selectedOption?t("pre",{staticClass:"rust-types"},[e._v(e._s(e.rustTypes))]):e._e(),e._v(" "),"mongoose schema"===e.selectedOption?t("pre",{staticClass:"mongoose-schema"},[e._v(e._s(e.mongooseSchema))]):e._e(),e._v(" "),"graphql root type"===e.selectedOption?t("pre",{staticClass:"graphql-root-type"},[e._v(e._s(e.graphqlRootType))]):e._e(),e._v(" "),"swagger doc"===e.selectedOption?t("pre",{staticClass:"swagger-doc"},[e._v(e._s(e.swaggerDoc))]):e._e()])])}var c=[];t.d(n,"App",function(){return y});var d="types-as-schema:source",y=function(e){function n(){var n=null!==e&&e.apply(this,arguments)||this;return n.protobuf="",n.options=["protobuf"],n.selectedOption="protobuf",n.graphqlSchema="",n.reasonTypes="",n.ocamlTypes="",n.rustTypes="",n.mongooseSchema="",n.graphqlRootType="",n.swaggerDoc="",n.innerSource=localStorage.getItem(d)||u,n.jsonSchemas=[],n}return i.__extends(n,e),Object.defineProperty(n.prototype,"source",{get:function(){return this.innerSource},set:function(e){this.innerSource=e,localStorage.setItem(d,e)},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"jsonSchema",{get:function(){var e=this;if(this.selectedOption){var n=this.jsonSchemas.find(function(n){return n.entry===e.selectedOption});if(n)return n.content}return""},enumerable:!0,configurable:!0}),n.prototype.generate=function(){var e,n;if(this.source){var t=o.a.createSourceFile("",this.source,o.a.ScriptTarget.ESNext,!1,o.a.ScriptKind.TS),r=new p.Generator([t]);this.protobuf=r.generateProtobuf(),this.options=["protobuf"],this.jsonSchemas=r.generateJsonSchemas().map(function(e){return{entry:e.entry,content:JSON.stringify(e.schema,null,"  ")}});try{for(var s=i.__values(this.jsonSchemas),a=s.next();!a.done;a=s.next()){var m=a.value;this.options.push(m.entry)}}catch(n){e={error:n}}finally{try{a&&!a.done&&(n=s.return)&&n.call(s)}finally{if(e)throw e.error}}this.graphqlSchema=r.generateGraphqlSchema(),this.options.push("graphql schema"),this.reasonTypes=r.generateReasonTypes(),this.options.push("reason types"),this.ocamlTypes=r.generateOcamlTypes(),this.options.push("ocaml types"),this.rustTypes=r.generateRustTypes(),this.options.push("rust types"),this.mongooseSchema=r.generateMongooseSchema(),this.options.push("mongoose schema"),this.graphqlRootType=r.generateGraphqlRootType("."),this.options.push("graphql root type"),this.swaggerDoc=r.generateSwaggerDoc(),this.options.push("swagger doc")}},n=i.__decorate([m()({render:l,staticRenderFns:c})],n)}(s.default);new y({el:"#container"})},82:function(e,n,t){"use strict";function i(e){const n={};for(const t of e)"object"===t.kind||"array"===t.kind||"union"===t.kind||"string"===t.kind||"number"===t.kind?n[t.name]=o(t):"reference"===t.kind?n[t.newName]={type:void 0,$ref:`#/definitions/${t.name}`}:"enum"===t.kind&&(1===t.members.length?n[t.name]={type:r(t.type),const:t.members[0]}:n[t.name]={type:r(t.type),enum:t.members.map(e=>e.value)});return n}function r(e){return"boolean"===e||"string"===e?e:"double"===e||"float"===e||"number"===e?"number":"integer"}function o(e){return"number"===e.kind?function(e){let n;n="double"===e.type||"float"===e.type?{type:"number",minimum:e.minimum,maximum:e.maximum}:"uint32"===e.type||"fixed32"===e.type?a(e,0,4294967295):"int32"===e.type||"sint32"===e.type||"sfixed32"===e.type?a(e,-2147483648,2147483647):"uint64"===e.type||"fixed64"===e.type?a(e,0,0x10000000000000000):"int64"===e.type||"sint64"===e.type||"sfixed64"===e.type?a(e,-0x8000000000000000,0x8000000000000000):"number"===e.type||"integer"===e.type?{type:e.type,minimum:e.minimum,maximum:e.maximum}:{type:e.kind,minimum:e.minimum,maximum:e.maximum};return Object.assign(n,{multipleOf:e.multipleOf,exclusiveMinimum:e.exclusiveMinimum,exclusiveMaximum:e.exclusiveMaximum,default:e.default,title:e.title,description:e.description}),n}(e):"boolean"===e.kind?{type:"boolean",default:e.default,title:e.title,description:e.description}:"map"===e.kind?{type:"object",additionalProperties:o(e.value)}:"array"===e.kind?{type:"array",items:o(e.type),uniqueItems:e.uniqueItems,minItems:e.minItems,maxItems:e.maxItems,default:e.default,title:e.title,description:e.description}:"enum"===e.kind?1===e.enums.length?{type:r(e.type),const:e.enums[0]}:{type:r(e.type),enum:e.enums}:"reference"===e.kind?{type:void 0,$ref:`#/definitions/${e.name}`,default:e.default}:"object"===e.kind?function(e){const n={},t=[];for(const i of e.members)i.optional||t.push(i.name),n[i.name]=o(i.type);let i;i=void 0===e.additionalProperties?void 0!==e.additionalProperties&&void 0:!0===e.additionalProperties||!1===e.additionalProperties?e.additionalProperties:o(e.additionalProperties);return{type:"object",properties:n,required:t,additionalProperties:i,minProperties:e.minProperties>e.members.filter(e=>!e.optional).length?e.minProperties:void 0,maxProperties:e.maxProperties&&e.maxProperties<e.members.length?e.maxProperties:void 0,default:e.default,title:e.title,description:e.description}}(e):"string"===e.kind?function(e){if(e.enums)return 1===e.enums.length?{type:"string",const:e.enums[0]}:{type:"string",enum:e.enums};return{type:e.kind,minLength:e.minLength,maxLength:e.maxLength,pattern:e.pattern,default:e.default,title:e.title,description:e.description}}(e):"union"===e.kind?function(e){if(e.members.every(e=>"enum"===e.kind||"null"===e.kind)){let n=[];for(const t of e.members)"enum"===t.kind?n=n.concat(t.enums):"null"===t.kind&&n.push(null);return{type:void 0,enum:n}}return{type:void 0,anyOf:e.members.map(e=>o(e))}}(e):"null"===e.kind?{type:"null"}:{type:e.kind}}function s(e,n,t){const i={},r="string"==typeof e?n[e]:e;if(void 0===r)return i;if("string"==typeof e){if(i[e]=r,t.includes(e))return i;t.push(e)}if("array"===r.type)Object.assign(i,s(r.items,n,t));else if("object"===r.type){if(r.properties)for(const e in r.properties)if(r.properties.hasOwnProperty(e)){const o=r.properties[e];Object.assign(i,s(o,n,t))}}else void 0===r.type&&Object.assign(i,function(e,n,t){const i={};if(e.$ref){const r=e.$ref.substring("#/definitions/".length);Object.assign(i,s(r,n,t))}if(e.anyOf)for(const r of e.anyOf)Object.assign(i,s(r,n,t));return i}(r,n,t));return"string"==typeof e&&t.pop(),i}function a(e,n,t){return{type:"integer",minimum:void 0!==e.minimum?e.minimum:n,maximum:void 0!==e.maximum?e.maximum:t}}Object.defineProperty(n,"__esModule",{value:!0}),n.generateJsonSchemas=function(e){const n=i(e);return e.filter(e=>("object"===e.kind||"array"===e.kind||"union"===e.kind)&&e.entry).map(e=>({entry:e.entry,schema:{$ref:`#/definitions/${e.name}`,definitions:s(e.name,n,[])}}))},n.getAllDefinitions=i,n.getJsonSchemaProperty=o,n.getReferencedDefinitions=s},84:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});const i=t(184),r=t(185),o=t(82),s=t(186),a=t(187),m=t(188),p=t(189),u=t(191),l=t(192),c=t(193);n.Generator=class{constructor(e){this.sourceFiles=e,this.declarations=[];const n=new i.Parser(e);this.declarations=n.parse()}generateProtobuf(){return r.generateProtobuf(this.declarations)}generateJsonSchemas(){return o.generateJsonSchemas(this.declarations)}generateGraphqlSchema(){return s.generateGraphqlSchema(this.declarations)}generateGraphqlRootType(e){return l.generateGraphqlRootType(this.declarations,e)}generateReasonTypes(){return a.generateReasonTypes(this.declarations)}generateOcamlTypes(){return m.generateOcamlTypes(this.declarations)}generateRustTypes(){return p.generateRustTypes(this.declarations)}generateMongooseSchema(){return u.generateMongooseSchema(this.declarations)}generateSwaggerDoc(e){return c.generateSwaggerDoc(this.declarations,e)}}},85:function(e,n){},86:function(e,n){},87:function(e,n){},91:function(e,n){},93:function(e,n){}});