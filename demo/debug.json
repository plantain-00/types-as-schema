[
  {
    "kind": "enum",
    "name": "StringEnum",
    "type": "string",
    "members": [
      {
        "name": "enumMember1",
        "value": "enum member 1"
      },
      {
        "name": "enumMember2",
        "value": "enum member 2"
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 107,
      "character": 0
    },
    "modifiers": [
      "export",
      "const"
    ]
  },
  {
    "kind": "enum",
    "name": "NumberEnum",
    "type": "uint32",
    "members": [
      {
        "name": "enumMember1",
        "value": 0
      },
      {
        "name": "enumMember2",
        "value": 1
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 111,
      "character": 0
    },
    "modifiers": [
      "export",
      "const"
    ]
  },
  {
    "kind": "enum",
    "name": "NumberEnum2",
    "type": "uint32",
    "members": [
      {
        "name": "enumMember1",
        "value": 3
      },
      {
        "name": "enumMember2",
        "value": 4
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 115,
      "character": 0
    },
    "modifiers": [
      "export",
      "const"
    ]
  },
  {
    "kind": "object",
    "name": "TypeLiteral",
    "members": [
      {
        "name": "typeLiteralMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 1,
            "character": 22
          }
        }
      },
      {
        "name": "typeLiteralMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 2,
            "character": 22
          }
        }
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 0,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "Interface",
    "members": [
      {
        "name": "interfaceMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 10,
            "character": 21
          }
        },
        "optional": true
      },
      {
        "name": "interfaceMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 11,
            "character": 21
          }
        },
        "optional": true
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "additionalProperties": {
      "position": {
        "file": "demo/cases.ts",
        "line": 13,
        "character": 18
      }
    },
    "position": {
      "file": "demo/cases.ts",
      "line": 9,
      "character": 0
    },
    "comments": [
      "/**\n * @minProperties 1\n * @maxProperties 1\n */"
    ],
    "jsDocs": [
      {
        "name": "minProperties",
        "comment": "1"
      },
      {
        "name": "maxProperties",
        "comment": "1"
      }
    ]
  },
  {
    "kind": "object",
    "name": "TypeUnion1",
    "members": [
      {
        "name": "typeLiteralMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 1,
            "character": 22
          }
        },
        "optional": true
      },
      {
        "name": "typeLiteralMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 2,
            "character": 22
          }
        },
        "optional": true
      },
      {
        "name": "typeUnionMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 17,
            "character": 20
          }
        },
        "optional": true
      },
      {
        "name": "typeUnionMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 18,
            "character": 20
          }
        },
        "optional": true
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 16,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "TypeUnion2",
    "members": [
      {
        "name": "kind",
        "type": {
          "kind": "enum",
          "name": "StringEnum",
          "type": "string",
          "enums": [
            "enum member 1",
            "enum member 2"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 22,
            "character": 10
          }
        }
      },
      {
        "name": "typeUnionMember1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 23,
            "character": 22
          }
        },
        "optional": true
      },
      {
        "name": "typeUnionMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 26,
            "character": 22
          }
        },
        "optional": true
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 20,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "TypeUnion3",
    "members": [
      {
        "name": "kind",
        "type": {
          "kind": "enum",
          "name": "NumberEnum",
          "type": "uint32",
          "enums": [
            0,
            1
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 30,
            "character": 10
          }
        }
      },
      {
        "name": "typeUnionMember1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 31,
            "character": 22
          }
        },
        "optional": true
      },
      {
        "name": "typeUnionMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 34,
            "character": 22
          }
        },
        "optional": true
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 28,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "TypeUnion4",
    "members": [
      {
        "name": "kind",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "foo",
            "bar"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 38,
            "character": 10
          }
        }
      },
      {
        "name": "typeUnionMember1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 39,
            "character": 22
          }
        },
        "optional": true
      },
      {
        "name": "typeUnionMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 42,
            "character": 22
          }
        },
        "optional": true
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 36,
      "character": 5
    }
  },
  {
    "kind": "union",
    "name": "TypeUnion5",
    "members": [
      {
        "kind": "reference",
        "referenceName": "TypeLiteral",
        "position": {
          "file": "demo/cases.ts",
          "line": 44,
          "character": 18
        }
      },
      {
        "kind": "reference",
        "referenceName": "Interface",
        "position": {
          "file": "demo/cases.ts",
          "line": 44,
          "character": 32
        }
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 44,
      "character": 5
    },
    "objectType": {
      "kind": "object",
      "name": "TypeUnion5",
      "members": [
        {
          "name": "typeLiteralMember1",
          "type": {
            "kind": "number",
            "type": "number",
            "position": {
              "file": "demo/cases.ts",
              "line": 1,
              "character": 22
            }
          },
          "optional": true
        },
        {
          "name": "typeLiteralMember2",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 2,
              "character": 22
            }
          },
          "optional": true
        },
        {
          "name": "interfaceMember1",
          "type": {
            "kind": "number",
            "type": "number",
            "position": {
              "file": "demo/cases.ts",
              "line": 10,
              "character": 21
            }
          },
          "optional": true
        },
        {
          "name": "interfaceMember2",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 11,
              "character": 21
            }
          },
          "optional": true
        }
      ],
      "minProperties": 0,
      "maxProperties": 2,
      "position": {
        "file": "demo/cases.ts",
        "line": 44,
        "character": 5
      }
    }
  },
  {
    "kind": "union",
    "name": "TypeUnion8",
    "members": [
      {
        "kind": "enum",
        "type": "string",
        "name": "string",
        "enums": [
          "foo"
        ],
        "position": {
          "file": "demo/cases.ts",
          "line": 45,
          "character": 18
        }
      },
      {
        "kind": "enum",
        "type": "string",
        "name": "string",
        "enums": [
          "bar"
        ],
        "position": {
          "file": "demo/cases.ts",
          "line": 45,
          "character": 26
        }
      },
      {
        "kind": "null",
        "position": {
          "file": "demo/cases.ts",
          "line": 45,
          "character": 34
        }
      },
      {
        "kind": "enum",
        "type": "boolean",
        "name": "boolean",
        "enums": [
          false
        ],
        "position": {
          "file": "demo/cases.ts",
          "line": 45,
          "character": 41
        }
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 45,
      "character": 5
    }
  },
  {
    "kind": "string",
    "name": "TypeUnion9",
    "enums": [
      "foo",
      "bar"
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 46,
      "character": 12
    }
  },
  {
    "kind": "object",
    "name": "TypeUnion",
    "members": [
      {
        "name": "typeUnionMember1",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion1",
          "position": {
            "file": "demo/cases.ts",
            "line": 48,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember2",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion2",
          "position": {
            "file": "demo/cases.ts",
            "line": 49,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember3",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion3",
          "position": {
            "file": "demo/cases.ts",
            "line": 50,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember4",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion4",
          "position": {
            "file": "demo/cases.ts",
            "line": 51,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember5",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion5",
          "position": {
            "file": "demo/cases.ts",
            "line": 52,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember6",
        "type": {
          "kind": "union",
          "members": [
            {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 53,
                "character": 20
              }
            },
            {
              "kind": "null",
              "position": {
                "file": "demo/cases.ts",
                "line": 53,
                "character": 29
              }
            },
            {
              "kind": "enum",
              "type": "boolean",
              "name": "boolean",
              "enums": [
                false
              ],
              "position": {
                "file": "demo/cases.ts",
                "line": 53,
                "character": 36
              }
            }
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 53,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember7",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "foo",
            "bar"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 54,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember8",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion8",
          "position": {
            "file": "demo/cases.ts",
            "line": 55,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionMember9",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion9",
          "position": {
            "file": "demo/cases.ts",
            "line": 56,
            "character": 20
          }
        }
      }
    ],
    "minProperties": 9,
    "maxProperties": 9,
    "position": {
      "file": "demo/cases.ts",
      "line": 47,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "InterfaceExtends",
    "members": [
      {
        "name": "interfaceExtendsMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 60,
            "character": 27
          }
        }
      },
      {
        "name": "interfaceExtendsMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 61,
            "character": 27
          }
        }
      },
      {
        "name": "interfaceMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 10,
            "character": 21
          }
        },
        "optional": true
      },
      {
        "name": "interfaceMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 11,
            "character": 21
          }
        },
        "optional": true
      }
    ],
    "minProperties": 2,
    "additionalProperties": {
      "position": {
        "file": "demo/cases.ts",
        "line": 13,
        "character": 18
      }
    },
    "position": {
      "file": "demo/cases.ts",
      "line": 59,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "TypeIntersection1",
    "members": [
      {
        "name": "interfaceMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 10,
            "character": 21
          }
        },
        "optional": true
      },
      {
        "name": "interfaceMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 11,
            "character": 21
          }
        },
        "optional": true
      },
      {
        "name": "typeIntersectionMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 65,
            "character": 27
          }
        }
      },
      {
        "name": "typeIntersectionMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 66,
            "character": 27
          }
        }
      }
    ],
    "minProperties": 2,
    "maxProperties": 4,
    "position": {
      "file": "demo/cases.ts",
      "line": 64,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "TypeIntersection2",
    "members": [
      {
        "name": "typeIntersectionMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 70,
            "character": 29
          }
        }
      },
      {
        "name": "typeIntersectionMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 71,
            "character": 29
          }
        }
      },
      {
        "name": "typeIntersectionMember3",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 73,
            "character": 29
          }
        }
      },
      {
        "name": "typeIntersectionMember4",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 74,
            "character": 29
          }
        }
      }
    ],
    "minProperties": 4,
    "maxProperties": 4,
    "position": {
      "file": "demo/cases.ts",
      "line": 68,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "TypeIntersection",
    "members": [
      {
        "name": "typeIntersectionMember1",
        "type": {
          "kind": "reference",
          "referenceName": "TypeIntersection1",
          "position": {
            "file": "demo/cases.ts",
            "line": 78,
            "character": 27
          }
        }
      },
      {
        "name": "typeIntersectionMember2",
        "type": {
          "kind": "reference",
          "referenceName": "TypeIntersection2",
          "position": {
            "file": "demo/cases.ts",
            "line": 79,
            "character": 27
          }
        }
      },
      {
        "name": "typeIntersectionMember3",
        "type": {
          "kind": "union",
          "members": [
            {
              "kind": "reference",
              "referenceName": "TypeLiteral",
              "position": {
                "file": "demo/cases.ts",
                "line": 80,
                "character": 27
              }
            },
            {
              "kind": "reference",
              "referenceName": "Interface",
              "position": {
                "file": "demo/cases.ts",
                "line": 80,
                "character": 41
              }
            }
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 80,
            "character": 27
          }
        }
      }
    ],
    "minProperties": 3,
    "maxProperties": 3,
    "position": {
      "file": "demo/cases.ts",
      "line": 77,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "TypeUnionAndIntersection",
    "members": [
      {
        "name": "typeIntersectionMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 85,
            "character": 29
          }
        }
      },
      {
        "name": "kind",
        "type": {
          "kind": "enum",
          "name": "NumberEnum",
          "type": "uint32",
          "enums": [
            0,
            1
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 88,
            "character": 12
          }
        }
      },
      {
        "name": "typeUnionMember1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 89,
            "character": 24
          }
        },
        "optional": true
      },
      {
        "name": "typeUnionMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 92,
            "character": 24
          }
        },
        "optional": true
      }
    ],
    "minProperties": 3,
    "maxProperties": 3,
    "position": {
      "file": "demo/cases.ts",
      "line": 83,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "TaggedField",
    "members": [
      {
        "name": "taggedFieldMember1",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 100,
            "character": 22
          }
        },
        "comments": [
          "/**\n   * @tag 2\n   */"
        ],
        "jsDocs": [
          {
            "name": "tag",
            "comment": "2"
          }
        ],
        "tag": 2
      },
      {
        "name": "taggedFieldMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 104,
            "character": 22
          }
        },
        "comments": [
          "/**\n   * @tag 3\n   */"
        ],
        "jsDocs": [
          {
            "name": "tag",
            "comment": "3"
          }
        ],
        "tag": 3
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 96,
      "character": 12
    }
  },
  {
    "kind": "object",
    "name": "Enum",
    "members": [
      {
        "name": "stringEnum",
        "type": {
          "kind": "reference",
          "referenceName": "StringEnum",
          "position": {
            "file": "demo/cases.ts",
            "line": 120,
            "character": 14
          }
        }
      },
      {
        "name": "numberEnum",
        "type": {
          "kind": "reference",
          "referenceName": "NumberEnum",
          "position": {
            "file": "demo/cases.ts",
            "line": 121,
            "character": 14
          }
        }
      },
      {
        "name": "numberEnum2",
        "type": {
          "kind": "reference",
          "referenceName": "NumberEnum2",
          "position": {
            "file": "demo/cases.ts",
            "line": 122,
            "character": 15
          }
        }
      },
      {
        "name": "stringEnum2",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "foo"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 123,
            "character": 15
          }
        }
      }
    ],
    "minProperties": 4,
    "maxProperties": 4,
    "position": {
      "file": "demo/cases.ts",
      "line": 119,
      "character": 12
    }
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 126,
      "character": 15
    },
    "name": "integer"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 127,
      "character": 14
    },
    "name": "uint32"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 128,
      "character": 13
    },
    "name": "int32"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 129,
      "character": 14
    },
    "name": "sint32"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 130,
      "character": 15
    },
    "name": "fixed32"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 131,
      "character": 16
    },
    "name": "sfixed32"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 132,
      "character": 14
    },
    "name": "uint64"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 133,
      "character": 13
    },
    "name": "int64"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 134,
      "character": 14
    },
    "name": "sint64"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 135,
      "character": 15
    },
    "name": "fixed64"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 136,
      "character": 16
    },
    "name": "sfixed64"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 137,
      "character": 13
    },
    "name": "float"
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 138,
      "character": 14
    },
    "name": "double"
  },
  {
    "kind": "object",
    "name": "NumberType",
    "members": [
      {
        "name": "numberMember",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 148,
            "character": 16
          },
          "multipleOf": 10,
          "minimum": 70,
          "maximum": 90,
          "exclusiveMinimum": 70,
          "exclusiveMaximum": 90
        },
        "comments": [
          "/**\n   * @multipleOf 10\n   * @minimum 70\n   * @maximum 90\n   * @exclusiveMinimum 70\n   * @exclusiveMaximum 90\n   */"
        ],
        "jsDocs": [
          {
            "name": "multipleOf",
            "comment": "10"
          },
          {
            "name": "minimum",
            "comment": "70"
          },
          {
            "name": "maximum",
            "comment": "90"
          },
          {
            "name": "exclusiveMinimum",
            "comment": "70"
          },
          {
            "name": "exclusiveMaximum",
            "comment": "90"
          }
        ]
      },
      {
        "name": "integerMember",
        "type": {
          "kind": "number",
          "type": "integer",
          "position": {
            "file": "demo/cases.ts",
            "line": 150,
            "character": 17
          }
        }
      },
      {
        "name": "uint32Member",
        "type": {
          "kind": "number",
          "type": "uint32",
          "position": {
            "file": "demo/cases.ts",
            "line": 152,
            "character": 16
          }
        }
      },
      {
        "name": "int32Member",
        "type": {
          "kind": "number",
          "type": "int32",
          "position": {
            "file": "demo/cases.ts",
            "line": 153,
            "character": 15
          }
        }
      },
      {
        "name": "sint32Member",
        "type": {
          "kind": "number",
          "type": "sint32",
          "position": {
            "file": "demo/cases.ts",
            "line": 154,
            "character": 16
          }
        }
      },
      {
        "name": "fixed32Member",
        "type": {
          "kind": "number",
          "type": "fixed32",
          "position": {
            "file": "demo/cases.ts",
            "line": 155,
            "character": 17
          }
        }
      },
      {
        "name": "sfixed32Member",
        "type": {
          "kind": "number",
          "type": "sfixed32",
          "position": {
            "file": "demo/cases.ts",
            "line": 156,
            "character": 18
          }
        }
      },
      {
        "name": "uint64Member",
        "type": {
          "kind": "number",
          "type": "uint64",
          "position": {
            "file": "demo/cases.ts",
            "line": 158,
            "character": 16
          }
        }
      },
      {
        "name": "int64Member",
        "type": {
          "kind": "number",
          "type": "int64",
          "position": {
            "file": "demo/cases.ts",
            "line": 159,
            "character": 15
          }
        }
      },
      {
        "name": "sint64Member",
        "type": {
          "kind": "number",
          "type": "sint64",
          "position": {
            "file": "demo/cases.ts",
            "line": 160,
            "character": 16
          }
        }
      },
      {
        "name": "fixed64Member",
        "type": {
          "kind": "number",
          "type": "fixed64",
          "position": {
            "file": "demo/cases.ts",
            "line": 161,
            "character": 17
          }
        }
      },
      {
        "name": "sfixed64Member",
        "type": {
          "kind": "number",
          "type": "sfixed64",
          "position": {
            "file": "demo/cases.ts",
            "line": 162,
            "character": 18
          }
        }
      },
      {
        "name": "floatMember",
        "type": {
          "kind": "number",
          "type": "float",
          "position": {
            "file": "demo/cases.ts",
            "line": 164,
            "character": 15
          }
        }
      },
      {
        "name": "doubleMember",
        "type": {
          "kind": "number",
          "type": "double",
          "position": {
            "file": "demo/cases.ts",
            "line": 165,
            "character": 16
          }
        }
      },
      {
        "name": "titleMember",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 171,
            "character": 15
          },
          "title": "foo",
          "description": "bar"
        },
        "comments": [
          "/**\n   * @title foo\n   * @description bar\n   */"
        ],
        "jsDocs": [
          {
            "name": "title",
            "comment": "foo"
          },
          {
            "name": "description",
            "comment": "bar"
          }
        ]
      }
    ],
    "minProperties": 15,
    "maxProperties": 15,
    "position": {
      "file": "demo/cases.ts",
      "line": 140,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "StringType",
    "members": [
      {
        "name": "stringMember",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 180,
            "character": 16
          },
          "minLength": 10,
          "maxLength": 20,
          "pattern": "^[A-z]{3}$"
        },
        "comments": [
          "/**\n   * @minLength 10\n   * @maxLength 20\n   * @pattern ^[A-z]{3}$\n   */"
        ],
        "jsDocs": [
          {
            "name": "minLength",
            "comment": "10"
          },
          {
            "name": "maxLength",
            "comment": "20"
          },
          {
            "name": "pattern",
            "comment": "^[A-z]{3}$"
          }
        ]
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 174,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "ArrayType",
    "members": [
      {
        "name": "arrayType1",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 189,
              "character": 14
            },
            "minLength": 10,
            "maxLength": 20,
            "pattern": "^[A-z]{3}$"
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 189,
            "character": 14
          }
        },
        "comments": [
          "/**\n   * @itemMinLength 10\n   * @itemMaxLength 20\n   * @itemPattern ^[A-z]{3}$\n   */"
        ],
        "jsDocs": [
          {
            "name": "itemMinLength",
            "comment": "10"
          },
          {
            "name": "itemMaxLength",
            "comment": "20"
          },
          {
            "name": "itemPattern",
            "comment": "^[A-z]{3}$"
          }
        ]
      },
      {
        "name": "arrayType2",
        "type": {
          "kind": "array",
          "type": {
            "kind": "reference",
            "referenceName": "TypeLiteral",
            "position": {
              "file": "demo/cases.ts",
              "line": 195,
              "character": 14
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 195,
            "character": 14
          },
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 10
        },
        "comments": [
          "/**\n   * @uniqueItems\n   * @minItems 1\n   * @maxItems 10\n   */"
        ],
        "jsDocs": [
          {
            "name": "uniqueItems"
          },
          {
            "name": "minItems",
            "comment": "1"
          },
          {
            "name": "maxItems",
            "comment": "10"
          }
        ]
      },
      {
        "name": "arrayType3",
        "type": {
          "kind": "array",
          "type": {
            "kind": "object",
            "members": [
              {
                "name": "literal",
                "type": {
                  "kind": "number",
                  "type": "number",
                  "position": {
                    "file": "demo/cases.ts",
                    "line": 196,
                    "character": 25
                  }
                }
              }
            ],
            "minProperties": 1,
            "maxProperties": 1,
            "position": {
              "file": "demo/cases.ts",
              "line": 196,
              "character": 14
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 196,
            "character": 14
          }
        }
      },
      {
        "name": "arrayType4",
        "type": {
          "kind": "array",
          "type": {
            "kind": "number",
            "type": "uint32",
            "position": {
              "file": "demo/cases.ts",
              "line": 204,
              "character": 14
            },
            "multipleOf": 100,
            "minimum": 100,
            "maximum": 200,
            "exclusiveMinimum": 300,
            "exclusiveMaximum": 400
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 204,
            "character": 14
          }
        },
        "comments": [
          "/**\n   * @itemMultipleOf 100\n   * @itemMinimum 100\n   * @itemMaximum 200\n   * @itemExclusiveMinimum 300\n   * @itemExclusiveMaximum 400\n   */"
        ],
        "jsDocs": [
          {
            "name": "itemMultipleOf",
            "comment": "100"
          },
          {
            "name": "itemMinimum",
            "comment": "100"
          },
          {
            "name": "itemMaximum",
            "comment": "200"
          },
          {
            "name": "itemExclusiveMinimum",
            "comment": "300"
          },
          {
            "name": "itemExclusiveMaximum",
            "comment": "400"
          }
        ]
      },
      {
        "name": "arrayType5",
        "type": {
          "kind": "array",
          "type": {
            "kind": "object",
            "members": [
              {
                "name": "literal",
                "type": {
                  "kind": "union",
                  "members": [
                    {
                      "kind": "number",
                      "type": "number",
                      "position": {
                        "file": "demo/cases.ts",
                        "line": 205,
                        "character": 25
                      }
                    },
                    {
                      "kind": "string",
                      "position": {
                        "file": "demo/cases.ts",
                        "line": 205,
                        "character": 34
                      }
                    }
                  ],
                  "position": {
                    "file": "demo/cases.ts",
                    "line": 205,
                    "character": 25
                  }
                }
              }
            ],
            "minProperties": 1,
            "maxProperties": 1,
            "position": {
              "file": "demo/cases.ts",
              "line": 205,
              "character": 14
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 205,
            "character": 14
          }
        }
      },
      {
        "name": "arrayType6",
        "type": {
          "kind": "array",
          "type": {
            "kind": "object",
            "members": [
              {
                "name": "literal",
                "type": {
                  "kind": "union",
                  "members": [
                    {
                      "kind": "number",
                      "type": "number",
                      "position": {
                        "file": "demo/cases.ts",
                        "line": 206,
                        "character": 25
                      }
                    },
                    {
                      "kind": "null",
                      "position": {
                        "file": "demo/cases.ts",
                        "line": 206,
                        "character": 34
                      }
                    }
                  ],
                  "position": {
                    "file": "demo/cases.ts",
                    "line": 206,
                    "character": 25
                  }
                }
              }
            ],
            "minProperties": 1,
            "maxProperties": 1,
            "position": {
              "file": "demo/cases.ts",
              "line": 206,
              "character": 14
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 206,
            "character": 14
          }
        }
      },
      {
        "name": "arrayType7",
        "type": {
          "kind": "array",
          "type": {
            "kind": "object",
            "members": [
              {
                "name": "literal",
                "type": {
                  "kind": "union",
                  "members": [
                    {
                      "kind": "reference",
                      "referenceName": "TypeLiteral",
                      "position": {
                        "file": "demo/cases.ts",
                        "line": 207,
                        "character": 25
                      }
                    },
                    {
                      "kind": "null",
                      "position": {
                        "file": "demo/cases.ts",
                        "line": 207,
                        "character": 39
                      }
                    }
                  ],
                  "position": {
                    "file": "demo/cases.ts",
                    "line": 207,
                    "character": 25
                  }
                }
              }
            ],
            "minProperties": 1,
            "maxProperties": 1,
            "position": {
              "file": "demo/cases.ts",
              "line": 207,
              "character": 14
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 207,
            "character": 14
          }
        }
      },
      {
        "name": "arrayType8",
        "type": {
          "kind": "array",
          "type": {
            "kind": "object",
            "members": [
              {
                "name": "literal",
                "type": {
                  "kind": "number",
                  "type": "number",
                  "position": {
                    "file": "demo/cases.ts",
                    "line": 208,
                    "character": 31
                  }
                }
              }
            ],
            "minProperties": 1,
            "maxProperties": 1,
            "position": {
              "file": "demo/cases.ts",
              "line": 208,
              "character": 20
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 208,
            "character": 20
          }
        }
      },
      {
        "name": "arrayType9",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 209,
              "character": 28
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 209,
            "character": 28
          }
        }
      },
      {
        "name": "arrayType10",
        "type": {
          "kind": "array",
          "type": {
            "kind": "enum",
            "type": "string",
            "name": "string",
            "enums": [
              "foo",
              "bar"
            ],
            "position": {
              "file": "demo/cases.ts",
              "line": 210,
              "character": 21
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 210,
            "character": 21
          }
        }
      }
    ],
    "minProperties": 10,
    "maxProperties": 10,
    "position": {
      "file": "demo/cases.ts",
      "line": 183,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "MapType7",
    "members": [
      {
        "name": "foo",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 214,
            "character": 7
          }
        }
      }
    ],
    "minProperties": 1,
    "additionalProperties": {
      "kind": "string",
      "position": {
        "file": "demo/cases.ts",
        "line": 215,
        "character": 18
      }
    },
    "position": {
      "file": "demo/cases.ts",
      "line": 213,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "MapType8",
    "members": [],
    "minProperties": 0,
    "additionalProperties": {
      "kind": "string",
      "position": {
        "file": "demo/cases.ts",
        "line": 219,
        "character": 18
      }
    },
    "position": {
      "file": "demo/cases.ts",
      "line": 218,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "MapType",
    "members": [
      {
        "name": "mapType",
        "type": {
          "kind": "map",
          "key": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 223,
              "character": 20
            }
          },
          "value": {
            "kind": "number",
            "type": "number",
            "position": {
              "file": "demo/cases.ts",
              "line": 223,
              "character": 29
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 223,
            "character": 20
          }
        }
      },
      {
        "name": "mapType2",
        "type": {
          "kind": "map",
          "key": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 224,
              "character": 21
            }
          },
          "value": {
            "kind": "reference",
            "referenceName": "TypeLiteral",
            "position": {
              "file": "demo/cases.ts",
              "line": 224,
              "character": 30
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 224,
            "character": 21
          }
        }
      },
      {
        "name": "mapType3",
        "type": {
          "kind": "map",
          "key": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 225,
              "character": 21
            }
          },
          "value": {
            "kind": "object",
            "members": [
              {
                "name": "literal",
                "type": {
                  "kind": "number",
                  "type": "number",
                  "position": {
                    "file": "demo/cases.ts",
                    "line": 225,
                    "character": 41
                  }
                }
              }
            ],
            "minProperties": 1,
            "maxProperties": 1,
            "position": {
              "file": "demo/cases.ts",
              "line": 225,
              "character": 30
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 225,
            "character": 21
          }
        }
      },
      {
        "name": "mapType4",
        "type": {
          "kind": "map",
          "key": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 226,
              "character": 21
            }
          },
          "value": {
            "kind": "number",
            "type": "uint32",
            "position": {
              "file": "demo/cases.ts",
              "line": 226,
              "character": 30
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 226,
            "character": 21
          }
        }
      },
      {
        "name": "mapType5",
        "type": {
          "kind": "map",
          "key": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 227,
              "character": 21
            }
          },
          "value": {
            "position": {
              "file": "demo/cases.ts",
              "line": 227,
              "character": 30
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 227,
            "character": 21
          }
        }
      },
      {
        "name": "mapType6",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "foo",
              "type": {
                "kind": "number",
                "type": "number",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 229,
                  "character": 9
                }
              }
            }
          ],
          "minProperties": 1,
          "additionalProperties": {
            "kind": "number",
            "type": "number",
            "position": {
              "file": "demo/cases.ts",
              "line": 230,
              "character": 20
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 228,
            "character": 12
          }
        }
      },
      {
        "name": "mapType7",
        "type": {
          "kind": "reference",
          "referenceName": "MapType7",
          "position": {
            "file": "demo/cases.ts",
            "line": 232,
            "character": 12
          }
        }
      },
      {
        "name": "mapType8",
        "type": {
          "kind": "reference",
          "referenceName": "MapType8",
          "position": {
            "file": "demo/cases.ts",
            "line": 233,
            "character": 12
          }
        }
      }
    ],
    "minProperties": 8,
    "maxProperties": 8,
    "position": {
      "file": "demo/cases.ts",
      "line": 222,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "Parameter",
    "members": [
      {
        "name": "member1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 243,
            "character": 11
          }
        },
        "comments": [
          "/**\n   * @param {string} name\n   * @param {number} age\n   */"
        ],
        "jsDocs": [
          {
            "name": "param",
            "type": {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 240,
                "character": 13
              }
            },
            "paramName": "name",
            "optional": false
          },
          {
            "name": "param",
            "type": {
              "kind": "number",
              "type": "number",
              "position": {
                "file": "demo/cases.ts",
                "line": 241,
                "character": 13
              }
            },
            "paramName": "age",
            "optional": false
          }
        ],
        "parameters": [
          {
            "name": "name",
            "type": {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 240,
                "character": 13
              }
            },
            "optional": false
          },
          {
            "name": "age",
            "type": {
              "kind": "number",
              "type": "number",
              "position": {
                "file": "demo/cases.ts",
                "line": 241,
                "character": 13
              }
            },
            "optional": false
          }
        ]
      },
      {
        "name": "member2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 247,
            "character": 11
          }
        },
        "comments": [
          "/**\n   * @param {string} [name]\n   */"
        ],
        "jsDocs": [
          {
            "name": "param",
            "type": {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 245,
                "character": 13
              }
            },
            "paramName": "name",
            "optional": true
          }
        ],
        "parameters": [
          {
            "name": "name",
            "type": {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 245,
                "character": 13
              }
            },
            "optional": true
          }
        ]
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 238,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "DefaultValue",
    "members": [
      {
        "name": "stringMember",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 254,
            "character": 16
          },
          "default": "foo"
        },
        "comments": [
          "/**\n   * @default foo\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "foo"
          }
        ]
      },
      {
        "name": "numberMember",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 258,
            "character": 16
          },
          "default": 123
        },
        "comments": [
          "/**\n   * @default 123\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "123"
          }
        ]
      },
      {
        "name": "booleanMember",
        "type": {
          "kind": "boolean",
          "position": {
            "file": "demo/cases.ts",
            "line": 262,
            "character": 17
          },
          "default": true
        },
        "comments": [
          "/**\n   * @default true\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "true"
          }
        ]
      },
      {
        "name": "stringMember2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 266,
            "character": 17
          },
          "default": "foo bar"
        },
        "comments": [
          "/**\n   * @default 'foo bar'\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "'foo bar'"
          }
        ]
      },
      {
        "name": "stringMember3",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 270,
            "character": 17
          },
          "default": ""
        },
        "comments": [
          "/**\n   * @default ''\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "''"
          }
        ]
      },
      {
        "name": "arrayMember",
        "type": {
          "kind": "array",
          "type": {
            "position": {
              "file": "demo/cases.ts",
              "line": 274,
              "character": 15
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 274,
            "character": 15
          },
          "default": []
        },
        "comments": [
          "/**\n   * @default []\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "[]"
          }
        ]
      },
      {
        "name": "objectMember",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "foo",
              "type": {
                "kind": "string",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 278,
                  "character": 23
                }
              }
            }
          ],
          "minProperties": 1,
          "maxProperties": 1,
          "position": {
            "file": "demo/cases.ts",
            "line": 278,
            "character": 16
          },
          "default": {}
        },
        "comments": [
          "/**\n   * @default {}\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "{}"
          }
        ]
      },
      {
        "name": "numberMember1",
        "type": {
          "kind": "number",
          "type": "integer",
          "position": {
            "file": "demo/cases.ts",
            "line": 282,
            "character": 17
          },
          "default": 123
        },
        "comments": [
          "/**\n   * @default 123\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "123"
          }
        ]
      },
      {
        "name": "objectMember2",
        "type": {
          "kind": "reference",
          "referenceName": "TypeLiteral",
          "position": {
            "file": "demo/cases.ts",
            "line": 286,
            "character": 17
          },
          "default": {}
        },
        "comments": [
          "/**\n   * @default {}\n   */"
        ],
        "jsDocs": [
          {
            "name": "default",
            "comment": "{}"
          }
        ]
      }
    ],
    "minProperties": 9,
    "maxProperties": 9,
    "position": {
      "file": "demo/cases.ts",
      "line": 250,
      "character": 5
    }
  },
  {
    "name": "TypeReferenceMember2",
    "kind": "reference",
    "referenceName": "TypeLiteral",
    "position": {
      "file": "demo/cases.ts",
      "line": 289,
      "character": 28
    }
  },
  {
    "kind": "object",
    "name": "ReferenceType",
    "members": [
      {
        "name": "typeReferenceMember1",
        "type": {
          "kind": "reference",
          "referenceName": "TypeLiteral",
          "position": {
            "file": "demo/cases.ts",
            "line": 292,
            "character": 24
          }
        }
      },
      {
        "name": "typeReferenceMember2",
        "type": {
          "kind": "reference",
          "referenceName": "TypeReferenceMember2",
          "position": {
            "file": "demo/cases.ts",
            "line": 293,
            "character": 24
          }
        }
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 291,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "ClassType1",
    "members": [
      {
        "name": "classMember1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 297,
            "character": 16
          }
        }
      },
      {
        "name": "classMember2",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 298,
            "character": 16
          }
        }
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 296,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "ClassType2",
    "members": [
      {
        "name": "classMember3",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 302,
            "character": 35
          }
        }
      },
      {
        "name": "classMember4",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 303,
            "character": 16
          }
        }
      },
      {
        "name": "classMember1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 297,
            "character": 16
          }
        }
      },
      {
        "name": "classMember2",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 298,
            "character": 16
          }
        }
      }
    ],
    "minProperties": 4,
    "maxProperties": 4,
    "position": {
      "file": "demo/cases.ts",
      "line": 301,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "ClassType3",
    "members": [
      {
        "name": "classMember1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 307,
            "character": 17
          },
          "default": "foo"
        }
      },
      {
        "name": "classMember2",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 308,
            "character": 17
          },
          "default": 123
        }
      },
      {
        "name": "classMember3",
        "type": {
          "kind": "boolean",
          "position": {
            "file": "demo/cases.ts",
            "line": 309,
            "character": 17
          },
          "default": false
        }
      },
      {
        "name": "classMember4",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 310,
            "character": 16
          },
          "default": "foo"
        }
      },
      {
        "name": "classMember5",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 311,
              "character": 18
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 311,
            "character": 17
          },
          "default": [
            "foo"
          ]
        }
      },
      {
        "name": "classMember6",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "a",
              "type": {
                "kind": "number",
                "type": "number",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 312,
                  "character": 22
                }
              }
            }
          ],
          "minProperties": 1,
          "position": {
            "file": "demo/cases.ts",
            "line": 312,
            "character": 17
          },
          "default": {
            "a": 1
          }
        }
      }
    ],
    "minProperties": 6,
    "maxProperties": 6,
    "position": {
      "file": "demo/cases.ts",
      "line": 306,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "ClassType",
    "members": [
      {
        "name": "classType1",
        "type": {
          "kind": "reference",
          "referenceName": "ClassType1",
          "position": {
            "file": "demo/cases.ts",
            "line": 316,
            "character": 14
          }
        }
      },
      {
        "name": "classType2",
        "type": {
          "kind": "reference",
          "referenceName": "ClassType2",
          "position": {
            "file": "demo/cases.ts",
            "line": 317,
            "character": 14
          }
        }
      },
      {
        "name": "classType3",
        "type": {
          "kind": "reference",
          "referenceName": "ClassType3",
          "position": {
            "file": "demo/cases.ts",
            "line": 318,
            "character": 14
          }
        }
      }
    ],
    "minProperties": 3,
    "maxProperties": 3,
    "position": {
      "file": "demo/cases.ts",
      "line": 315,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "Circular",
    "members": [
      {
        "name": "children",
        "type": {
          "kind": "array",
          "type": {
            "kind": "reference",
            "referenceName": "Circular",
            "position": {
              "file": "demo/cases.ts",
              "line": 322,
              "character": 12
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 322,
            "character": 12
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 321,
      "character": 5
    }
  },
  {
    "kind": "object",
    "name": "EntryType",
    "members": [
      {
        "name": "optionalMember",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 332,
            "character": 19
          }
        },
        "optional": true
      },
      {
        "name": "booleanMember",
        "type": {
          "kind": "boolean",
          "position": {
            "file": "demo/cases.ts",
            "line": 333,
            "character": 17
          }
        }
      },
      {
        "name": "stringMember",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 334,
            "character": 16
          }
        }
      },
      {
        "name": "numberType",
        "type": {
          "kind": "reference",
          "referenceName": "NumberType",
          "position": {
            "file": "demo/cases.ts",
            "line": 335,
            "character": 14
          }
        }
      },
      {
        "name": "arrayType",
        "type": {
          "kind": "reference",
          "referenceName": "ArrayType",
          "position": {
            "file": "demo/cases.ts",
            "line": 336,
            "character": 13
          }
        }
      },
      {
        "name": "typeLiteral",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "literal",
              "type": {
                "kind": "number",
                "type": "number",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 337,
                  "character": 26
                }
              }
            }
          ],
          "minProperties": 1,
          "maxProperties": 1,
          "position": {
            "file": "demo/cases.ts",
            "line": 337,
            "character": 15
          }
        }
      },
      {
        "name": "referenceType",
        "type": {
          "kind": "reference",
          "referenceName": "ReferenceType",
          "position": {
            "file": "demo/cases.ts",
            "line": 338,
            "character": 17
          }
        }
      },
      {
        "name": "interfaceType",
        "type": {
          "kind": "reference",
          "referenceName": "Interface",
          "position": {
            "file": "demo/cases.ts",
            "line": 339,
            "character": 17
          }
        }
      },
      {
        "name": "typeUnion",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnion",
          "position": {
            "file": "demo/cases.ts",
            "line": 340,
            "character": 13
          }
        }
      },
      {
        "name": "interfaceExtends",
        "type": {
          "kind": "reference",
          "referenceName": "InterfaceExtends",
          "position": {
            "file": "demo/cases.ts",
            "line": 341,
            "character": 20
          }
        }
      },
      {
        "name": "typeIntersection",
        "type": {
          "kind": "reference",
          "referenceName": "TypeIntersection",
          "position": {
            "file": "demo/cases.ts",
            "line": 342,
            "character": 20
          }
        }
      },
      {
        "name": "typeUnionAndIntersection",
        "type": {
          "kind": "reference",
          "referenceName": "TypeUnionAndIntersection",
          "position": {
            "file": "demo/cases.ts",
            "line": 343,
            "character": 28
          }
        }
      },
      {
        "name": "mapType",
        "type": {
          "kind": "reference",
          "referenceName": "MapType",
          "position": {
            "file": "demo/cases.ts",
            "line": 344,
            "character": 11
          }
        }
      },
      {
        "name": "taggedField",
        "type": {
          "kind": "reference",
          "referenceName": "TaggedField",
          "position": {
            "file": "demo/cases.ts",
            "line": 345,
            "character": 15
          }
        }
      },
      {
        "name": "enum",
        "type": {
          "kind": "reference",
          "referenceName": "Enum",
          "position": {
            "file": "demo/cases.ts",
            "line": 346,
            "character": 8
          }
        }
      },
      {
        "name": "stringNumber",
        "type": {
          "kind": "reference",
          "referenceName": "StringType",
          "position": {
            "file": "demo/cases.ts",
            "line": 347,
            "character": 16
          }
        }
      },
      {
        "name": "id",
        "type": {
          "kind": "reference",
          "referenceName": "ID",
          "position": {
            "file": "demo/cases.ts",
            "line": 348,
            "character": 6
          }
        }
      },
      {
        "name": "parameter",
        "type": {
          "kind": "reference",
          "referenceName": "Parameter",
          "position": {
            "file": "demo/cases.ts",
            "line": 349,
            "character": 13
          }
        }
      },
      {
        "name": "optionalArrayMember",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 350,
              "character": 24
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 350,
            "character": 24
          }
        },
        "optional": true
      },
      {
        "name": "tupleType",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 351,
              "character": 22
            }
          },
          "minItems": 2,
          "maxItems": 2,
          "position": {
            "file": "demo/cases.ts",
            "line": 351,
            "character": 13
          }
        }
      },
      {
        "name": "defaultType",
        "type": {
          "kind": "reference",
          "referenceName": "DefaultValue",
          "position": {
            "file": "demo/cases.ts",
            "line": 352,
            "character": 15
          }
        }
      },
      {
        "name": "anyType",
        "type": {
          "position": {
            "file": "demo/cases.ts",
            "line": 353,
            "character": 11
          }
        }
      },
      {
        "name": "classType",
        "type": {
          "kind": "reference",
          "referenceName": "ClassType",
          "position": {
            "file": "demo/cases.ts",
            "line": 354,
            "character": 13
          }
        }
      },
      {
        "name": "circular",
        "type": {
          "kind": "reference",
          "referenceName": "Circular",
          "position": {
            "file": "demo/cases.ts",
            "line": 355,
            "character": 12
          }
        }
      },
      {
        "name": "outerType",
        "type": {
          "kind": "reference",
          "referenceName": "OuterType",
          "position": {
            "file": "demo/cases.ts",
            "line": 356,
            "character": 13
          }
        }
      },
      {
        "name": "typeAlias",
        "type": {
          "kind": "reference",
          "referenceName": "TypeAlias",
          "position": {
            "file": "demo/cases.ts",
            "line": 357,
            "character": 13
          }
        }
      },
      {
        "name": "pick",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "result",
              "type": {
                "kind": "reference",
                "referenceName": "Result3",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 358,
                  "character": 8
                }
              }
            }
          ],
          "minProperties": 1,
          "maxProperties": 1,
          "position": {
            "file": "demo/cases.ts",
            "line": 358,
            "character": 8
          }
        }
      },
      {
        "name": "pick2",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "member1",
              "type": {
                "kind": "string",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 359,
                  "character": 9
                }
              }
            },
            {
              "name": "member2",
              "type": {
                "kind": "file",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 359,
                  "character": 9
                }
              }
            }
          ],
          "minProperties": 2,
          "maxProperties": 2,
          "position": {
            "file": "demo/cases.ts",
            "line": 359,
            "character": 9
          }
        }
      },
      {
        "name": "pick3",
        "type": {
          "kind": "reference",
          "referenceName": "CreateInput2",
          "position": {
            "file": "demo/cases.ts",
            "line": 360,
            "character": 9
          }
        }
      },
      {
        "name": "unknown",
        "type": {
          "kind": "reference",
          "referenceName": "LayoutMetadataMap",
          "position": {
            "file": "demo/cases.ts",
            "line": 361,
            "character": 11
          }
        }
      },
      {
        "name": "template",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "1-left-top",
            "1-right-top",
            "1-left-bottom",
            "1-right-bottom"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 362,
            "character": 12
          }
        }
      },
      {
        "name": "template2",
        "type": {
          "kind": "string",
          "templateLiteral": [
            {
              "kind": "enum",
              "enums": [
                "https://"
              ]
            },
            {
              "kind": "string"
            },
            {
              "kind": "enum",
              "enums": [
                ".svg"
              ]
            }
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 363,
            "character": 13
          }
        }
      },
      {
        "name": "template3",
        "type": {
          "kind": "string",
          "templateLiteral": [
            {
              "kind": "enum",
              "enums": [
                "/api/users/"
              ]
            },
            {
              "kind": "number"
            }
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 364,
            "character": 13
          }
        }
      },
      {
        "name": "template4",
        "type": {
          "kind": "string",
          "templateLiteral": [
            {
              "kind": "enum",
              "enums": [
                "https://"
              ]
            },
            {
              "kind": "string"
            },
            {
              "kind": "enum",
              "enums": [
                "."
              ]
            },
            {
              "kind": "enum",
              "enums": [
                "png",
                "jpg"
              ]
            }
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 365,
            "character": 13
          }
        }
      },
      {
        "name": "template5",
        "type": {
          "kind": "string",
          "templateLiteral": [
            {
              "kind": "enum",
              "enums": [
                "/api/users?isAdmin="
              ]
            },
            {
              "kind": "boolean"
            }
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 366,
            "character": 13
          }
        }
      },
      {
        "name": "keyof",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "member1",
            "member2"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 367,
            "character": 9
          }
        }
      }
    ],
    "minProperties": 34,
    "maxProperties": 36,
    "additionalProperties": true,
    "entry": "cases.json",
    "position": {
      "file": "demo/cases.ts",
      "line": 331,
      "character": 12
    },
    "comments": [
      "/**\n * @entry cases.json\n * @additionalProperties\n */"
    ],
    "jsDocs": [
      {
        "name": "entry",
        "comment": "cases.json"
      },
      {
        "name": "additionalProperties"
      }
    ]
  },
  {
    "kind": "object",
    "name": "Mutation",
    "members": [
      {
        "name": "create",
        "type": {
          "kind": "reference",
          "referenceName": "MutationResult",
          "position": {
            "file": "demo/cases.ts",
            "line": 371,
            "character": 38
          }
        },
        "parameters": [
          {
            "name": "input",
            "type": {
              "kind": "reference",
              "referenceName": "CreateInput",
              "position": {
                "file": "demo/cases.ts",
                "line": 371,
                "character": 16
              }
            },
            "optional": false
          }
        ]
      }
    ],
    "minProperties": 0,
    "maxProperties": 0,
    "position": {
      "file": "demo/cases.ts",
      "line": 370,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "object",
    "name": "CreateInput",
    "members": [
      {
        "name": "member1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 375,
            "character": 11
          }
        }
      },
      {
        "name": "member2",
        "type": {
          "kind": "file",
          "position": {
            "file": "demo/cases.ts",
            "line": 376,
            "character": 11
          }
        }
      },
      {
        "name": "member3",
        "type": {
          "kind": "reference",
          "referenceName": "CreateInputMember3",
          "position": {
            "file": "demo/cases.ts",
            "line": 377,
            "character": 11
          }
        }
      }
    ],
    "minProperties": 3,
    "maxProperties": 3,
    "position": {
      "file": "demo/cases.ts",
      "line": 374,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "object",
    "name": "MutationResult",
    "members": [
      {
        "name": "result",
        "type": {
          "kind": "boolean",
          "position": {
            "file": "demo/cases.ts",
            "line": 381,
            "character": 10
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 380,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "object",
    "name": "Query",
    "members": [
      {
        "name": "user",
        "type": {
          "kind": "reference",
          "referenceName": "GetResult",
          "position": {
            "file": "demo/cases.ts",
            "line": 385,
            "character": 29
          }
        },
        "parameters": [
          {
            "name": "id",
            "type": {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 385,
                "character": 20
              }
            },
            "optional": false
          }
        ]
      },
      {
        "name": "users",
        "type": {
          "kind": "reference",
          "referenceName": "GetResult",
          "position": {
            "file": "demo/cases.ts",
            "line": 386,
            "character": 20
          }
        },
        "parameters": []
      }
    ],
    "minProperties": 0,
    "maxProperties": 0,
    "position": {
      "file": "demo/cases.ts",
      "line": 384,
      "character": 0
    },
    "modifiers": [
      "export",
      "abstract"
    ]
  },
  {
    "kind": "object",
    "name": "GetResult",
    "members": [
      {
        "name": "result",
        "type": {
          "kind": "reference",
          "referenceName": "Result",
          "position": {
            "file": "demo/cases.ts",
            "line": 390,
            "character": 10
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 389,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "object",
    "name": "Result",
    "members": [
      {
        "name": "member1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 394,
            "character": 11
          }
        }
      },
      {
        "name": "member2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 396,
            "character": 26
          }
        },
        "parameters": [
          {
            "name": "input",
            "type": {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 396,
                "character": 17
              }
            },
            "optional": false
          }
        ]
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 393,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "CreateInputMember3",
    "members": [
      {
        "name": "member1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 400,
            "character": 11
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 399,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "TypeAlias",
    "members": [
      {
        "name": "result",
        "type": {
          "kind": "reference",
          "referenceName": "Result2",
          "position": {
            "file": "demo/cases.ts",
            "line": 404,
            "character": 10
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 403,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "name": "Result2",
    "kind": "reference",
    "referenceName": "Result3",
    "position": {
      "file": "demo/cases.ts",
      "line": 407,
      "character": 15
    }
  },
  {
    "kind": "object",
    "name": "Result3",
    "members": [
      {
        "name": "result3",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 410,
            "character": 11
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 409,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "Pet",
    "members": [
      {
        "name": "id",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 414,
            "character": 7
          }
        },
        "optional": true
      },
      {
        "name": "name",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 415,
            "character": 8
          }
        }
      },
      {
        "name": "photoUrls",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 416,
              "character": 13
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 416,
            "character": 13
          }
        }
      },
      {
        "name": "status",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "available",
            "pending",
            "sold"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 417,
            "character": 10
          }
        }
      }
    ],
    "minProperties": 3,
    "maxProperties": 4,
    "position": {
      "file": "demo/cases.ts",
      "line": 413,
      "character": 0
    }
  },
  {
    "kind": "function",
    "name": "getPetById",
    "type": {
      "kind": "reference",
      "referenceName": "Pet",
      "position": {
        "file": "demo/cases.ts",
        "line": 454,
        "character": 11
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "status",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "health",
            "sick"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 432,
            "character": 10
          }
        },
        "optional": false,
        "comments": [
          "/**\n   * @in query\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "query"
          }
        ],
        "in": "query"
      },
      {
        "name": "tags",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 437,
              "character": 8
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 437,
            "character": 8
          },
          "minItems": 1
        },
        "optional": false,
        "comments": [
          "/**\n   * @in body\n   * @minItems 1\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "body"
          },
          {
            "name": "minItems",
            "comment": "1"
          }
        ],
        "in": "body"
      },
      {
        "name": "pet",
        "type": {
          "kind": "reference",
          "referenceName": "Pet",
          "position": {
            "file": "demo/cases.ts",
            "line": 441,
            "character": 7
          }
        },
        "optional": false,
        "comments": [
          "/**\n   * @in body\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "body"
          }
        ],
        "in": "body"
      },
      {
        "name": "id",
        "type": {
          "kind": "number",
          "type": "integer",
          "position": {
            "file": "demo/cases.ts",
            "line": 448,
            "character": 6
          },
          "default": 2,
          "description": "pet id",
          "minimum": 1
        },
        "optional": true,
        "comments": [
          "/**\n   * @in path\n   * @description pet id\n   * @minimum 1\n   * @default 2\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "path"
          },
          {
            "name": "description",
            "comment": "pet id"
          },
          {
            "name": "minimum",
            "comment": "1"
          },
          {
            "name": "default",
            "comment": "2"
          }
        ],
        "in": "path"
      },
      {
        "name": "sortType",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "asc",
            "desc"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 453,
            "character": 12
          },
          "default": "asc"
        },
        "optional": true,
        "comments": [
          "/**\n   * @in query\n   * @default asc\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "query"
          },
          {
            "name": "default",
            "comment": "asc"
          }
        ],
        "in": "query"
      }
    ],
    "comments": [
      "/**\n * @method get\n * @path /pet/{id}\n * @summary get pet by id.\n * @description get pet by id\n * @deprecated\n * @tags pet\n */"
    ],
    "jsDocs": [
      {
        "name": "method",
        "comment": "get"
      },
      {
        "name": "path",
        "comment": "/pet/{id}"
      },
      {
        "name": "summary",
        "comment": "get pet by id."
      },
      {
        "name": "description",
        "comment": "get pet by id"
      },
      {
        "name": "deprecated"
      },
      {
        "name": "tags",
        "comment": "pet"
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 428,
      "character": 0
    },
    "modifiers": [
      "export",
      "declare"
    ],
    "method": "get",
    "path": "/pet/{id}",
    "summary": "get pet by id.",
    "description": "get pet by id",
    "deprecated": true,
    "tags": [
      "pet"
    ]
  },
  {
    "kind": "object",
    "name": "MongooseScheme",
    "members": [
      {
        "name": "objectId",
        "type": {
          "kind": "reference",
          "referenceName": "ObjectId",
          "position": {
            "file": "demo/cases.ts",
            "line": 459,
            "character": 12
          }
        }
      },
      {
        "name": "date",
        "type": {
          "kind": "reference",
          "referenceName": "Date",
          "position": {
            "file": "demo/cases.ts",
            "line": 460,
            "character": 8
          }
        }
      },
      {
        "name": "decimal128",
        "type": {
          "kind": "reference",
          "referenceName": "Decimal128",
          "position": {
            "file": "demo/cases.ts",
            "line": 461,
            "character": 14
          }
        }
      },
      {
        "name": "index1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 466,
            "character": 10
          }
        },
        "comments": [
          "/**\n   * @index\n   * @autoincrement\n   */"
        ],
        "jsDocs": [
          {
            "name": "index"
          },
          {
            "name": "autoincrement"
          }
        ],
        "index": true
      },
      {
        "name": "index2",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 470,
            "character": 10
          }
        },
        "comments": [
          "/**\n   * @unique\n   */"
        ],
        "jsDocs": [
          {
            "name": "unique"
          }
        ],
        "unique": true
      },
      {
        "name": "index3",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 479,
            "character": 10
          },
          "lowercase": true,
          "uppercase": true,
          "trim": true
        },
        "comments": [
          "/**\n   * @sparse\n   * @select\n   * @alias index4\n   * @lowercase\n   * @uppercase\n   * @trim\n   */"
        ],
        "jsDocs": [
          {
            "name": "sparse"
          },
          {
            "name": "select"
          },
          {
            "name": "alias",
            "comment": "index4"
          },
          {
            "name": "lowercase"
          },
          {
            "name": "uppercase"
          },
          {
            "name": "trim"
          }
        ],
        "sparse": true,
        "select": true,
        "alias": "index4"
      },
      {
        "name": "buffer",
        "type": {
          "kind": "reference",
          "referenceName": "Buffer",
          "position": {
            "file": "demo/cases.ts",
            "line": 480,
            "character": 10
          }
        }
      }
    ],
    "minProperties": 7,
    "maxProperties": 7,
    "position": {
      "file": "demo/cases.ts",
      "line": 458,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "number",
    "type": "number",
    "position": {
      "file": "demo/cases.ts",
      "line": 483,
      "character": 18
    },
    "name": "Decimal128"
  },
  {
    "name": "CreateInput2",
    "kind": "object",
    "members": [
      {
        "name": "member1",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 486,
            "character": 20
          }
        }
      },
      {
        "name": "member2",
        "type": {
          "kind": "file",
          "position": {
            "file": "demo/cases.ts",
            "line": 486,
            "character": 20
          }
        }
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 486,
      "character": 20
    }
  },
  {
    "kind": "object",
    "name": "LayoutMetadataMap",
    "members": [],
    "minProperties": 0,
    "additionalProperties": {
      "kind": "reference",
      "referenceName": "Metadata",
      "position": {
        "file": "demo/cases.ts",
        "line": 489,
        "character": 22
      }
    },
    "position": {
      "file": "demo/cases.ts",
      "line": 488,
      "character": 0
    }
  },
  {
    "kind": "object",
    "name": "Metadata",
    "members": [],
    "minProperties": 0,
    "additionalProperties": {
      "position": {
        "file": "demo/cases.ts",
        "line": 493,
        "character": 17
      }
    },
    "position": {
      "file": "demo/cases.ts",
      "line": 492,
      "character": 0
    }
  },
  {
    "kind": "union",
    "name": "WsCommand",
    "members": [
      {
        "kind": "reference",
        "referenceName": "CreateBlog",
        "position": {
          "file": "demo/cases.ts",
          "line": 497,
          "character": 4
        }
      },
      {
        "kind": "reference",
        "referenceName": "UpdateBlog",
        "position": {
          "file": "demo/cases.ts",
          "line": 498,
          "character": 4
        }
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 496,
      "character": 12
    },
    "objectType": {
      "kind": "object",
      "name": "WsCommand",
      "members": [
        {
          "name": "type",
          "type": {
            "kind": "enum",
            "type": "string",
            "name": "string",
            "enums": [
              "create blog",
              "update blog"
            ],
            "position": {
              "file": "demo/cases.ts",
              "line": 507,
              "character": 8
            }
          }
        },
        {
          "name": "content",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 508,
              "character": 11
            }
          }
        },
        {
          "name": "id",
          "type": {
            "kind": "number",
            "type": "number",
            "position": {
              "file": "demo/cases.ts",
              "line": 516,
              "character": 6
            }
          },
          "optional": true
        }
      ],
      "minProperties": 2,
      "maxProperties": 3,
      "position": {
        "file": "demo/cases.ts",
        "line": 496,
        "character": 12
      }
    }
  },
  {
    "kind": "object",
    "name": "CreateBlog",
    "members": [
      {
        "name": "type",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "create blog"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 507,
            "character": 8
          }
        }
      },
      {
        "name": "content",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 508,
            "character": 11
          }
        }
      }
    ],
    "minProperties": 2,
    "maxProperties": 2,
    "position": {
      "file": "demo/cases.ts",
      "line": 506,
      "character": 0
    },
    "comments": [
      "/**\n * @public\n */"
    ],
    "jsDocs": [
      {
        "name": "public"
      }
    ],
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "object",
    "name": "UpdateBlog",
    "members": [
      {
        "name": "type",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "update blog"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 515,
            "character": 8
          }
        }
      },
      {
        "name": "id",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 516,
            "character": 6
          }
        }
      },
      {
        "name": "content",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 517,
            "character": 11
          }
        }
      }
    ],
    "minProperties": 3,
    "maxProperties": 3,
    "position": {
      "file": "demo/cases.ts",
      "line": 514,
      "character": 0
    },
    "comments": [
      "/**\n * @public\n */"
    ],
    "jsDocs": [
      {
        "name": "public"
      }
    ],
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "union",
    "name": "WsPush",
    "members": [
      {
        "kind": "reference",
        "referenceName": "BlogChange",
        "position": {
          "file": "demo/cases.ts",
          "line": 501,
          "character": 4
        }
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 500,
      "character": 12
    },
    "objectType": {
      "kind": "object",
      "name": "WsPush",
      "members": [
        {
          "name": "type",
          "type": {
            "kind": "enum",
            "type": "string",
            "name": "string",
            "enums": [
              "blog change"
            ],
            "position": {
              "file": "demo/cases.ts",
              "line": 524,
              "character": 8
            }
          }
        },
        {
          "name": "id",
          "type": {
            "kind": "number",
            "type": "number",
            "position": {
              "file": "demo/cases.ts",
              "line": 525,
              "character": 6
            }
          }
        },
        {
          "name": "content",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 526,
              "character": 11
            }
          }
        }
      ],
      "minProperties": 3,
      "maxProperties": 3,
      "position": {
        "file": "demo/cases.ts",
        "line": 500,
        "character": 12
      }
    }
  },
  {
    "kind": "object",
    "name": "BlogChange",
    "members": [
      {
        "name": "type",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "blog change"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 524,
            "character": 8
          }
        }
      },
      {
        "name": "id",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 525,
            "character": 6
          }
        }
      },
      {
        "name": "content",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 526,
            "character": 11
          }
        }
      }
    ],
    "minProperties": 3,
    "maxProperties": 3,
    "position": {
      "file": "demo/cases.ts",
      "line": 523,
      "character": 0
    },
    "comments": [
      "/**\n * @public\n */"
    ],
    "jsDocs": [
      {
        "name": "public"
      }
    ],
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "object",
    "name": "TestController",
    "members": [
      {
        "name": "get",
        "type": {
          "position": {
            "file": "demo/cases.ts",
            "line": 531,
            "character": 2
          }
        },
        "parameters": [
          {
            "name": "foo",
            "type": {
              "kind": "number",
              "type": "number",
              "position": {
                "file": "demo/cases.ts",
                "line": 534,
                "character": 23
              }
            },
            "optional": false
          },
          {
            "name": "bar",
            "type": {
              "kind": "string",
              "position": {
                "file": "demo/cases.ts",
                "line": 535,
                "character": 23
              }
            },
            "optional": false
          }
        ]
      }
    ],
    "minProperties": 0,
    "maxProperties": 0,
    "position": {
      "file": "demo/cases.ts",
      "line": 529,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "string",
    "name": "Template",
    "enums": [
      "left-top",
      "right-top",
      "left-bottom",
      "right-bottom"
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 540,
      "character": 5
    }
  },
  {
    "kind": "function",
    "name": "downloadFile",
    "type": {
      "kind": "file",
      "position": {
        "file": "demo/cases.ts",
        "line": 546,
        "character": 48
      }
    },
    "optional": false,
    "parameters": [],
    "comments": [
      "/**\n * @method get\n * @path /download\n */"
    ],
    "jsDocs": [
      {
        "name": "method",
        "comment": "get"
      },
      {
        "name": "path",
        "comment": "/download"
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 546,
      "character": 0
    },
    "modifiers": [
      "export",
      "declare"
    ],
    "method": "get",
    "path": "/download"
  },
  {
    "kind": "function",
    "name": "returnEmpty",
    "type": {
      "kind": "void",
      "position": {
        "file": "demo/cases.ts",
        "line": 552,
        "character": 47
      }
    },
    "optional": false,
    "parameters": [],
    "comments": [
      "/**\n * @method get\n * @path /empty\n */"
    ],
    "jsDocs": [
      {
        "name": "method",
        "comment": "get"
      },
      {
        "name": "path",
        "comment": "/empty"
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 552,
      "character": 0
    },
    "modifiers": [
      "export",
      "declare"
    ],
    "method": "get",
    "path": "/empty"
  },
  {
    "kind": "function",
    "name": "uploadFile",
    "type": {
      "kind": "void",
      "position": {
        "file": "demo/cases.ts",
        "line": 563,
        "character": 11
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "file",
        "type": {
          "kind": "file",
          "position": {
            "file": "demo/cases.ts",
            "line": 562,
            "character": 8
          }
        },
        "optional": false,
        "comments": [
          "/**\n   * @in body\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "body"
          }
        ],
        "in": "body"
      }
    ],
    "comments": [
      "/**\n * @method post\n * @path /upload\n */"
    ],
    "jsDocs": [
      {
        "name": "method",
        "comment": "post"
      },
      {
        "name": "path",
        "comment": "/upload"
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 558,
      "character": 0
    },
    "modifiers": [
      "export",
      "declare"
    ],
    "method": "post",
    "path": "/upload"
  },
  {
    "kind": "function",
    "name": "",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 565,
        "character": 15
      }
    },
    "optional": false,
    "parameters": [],
    "position": {
      "file": "demo/cases.ts",
      "line": 565,
      "character": 15
    },
    "body": "{\n  return 1\n}"
  },
  {
    "kind": "function",
    "name": "Test1",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 569,
        "character": 0
      }
    },
    "optional": false,
    "parameters": [],
    "position": {
      "file": "demo/cases.ts",
      "line": 569,
      "character": 0
    },
    "body": "{\n  return 1\n}",
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "function",
    "name": "Test2",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 573,
        "character": 21
      }
    },
    "optional": false,
    "parameters": [],
    "position": {
      "file": "demo/cases.ts",
      "line": 573,
      "character": 21
    },
    "body": "{\n  return 1\n}",
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "function",
    "name": "getPetById",
    "type": {
      "kind": "reference",
      "referenceName": "Pet",
      "position": {
        "file": "demo/cases.ts",
        "line": 611,
        "character": 13
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "status",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "health",
            "sick"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 589,
            "character": 10
          }
        },
        "optional": false,
        "comments": [
          "/**\n   * @in query\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "query"
          }
        ],
        "in": "query"
      },
      {
        "name": "tags",
        "type": {
          "kind": "array",
          "type": {
            "kind": "string",
            "position": {
              "file": "demo/cases.ts",
              "line": 594,
              "character": 8
            }
          },
          "position": {
            "file": "demo/cases.ts",
            "line": 594,
            "character": 8
          },
          "minItems": 1
        },
        "optional": false,
        "comments": [
          "/**\n   * @in body\n   * @minItems 1\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "body"
          },
          {
            "name": "minItems",
            "comment": "1"
          }
        ],
        "in": "body"
      },
      {
        "name": "pet",
        "type": {
          "kind": "reference",
          "referenceName": "Pet",
          "position": {
            "file": "demo/cases.ts",
            "line": 598,
            "character": 7
          }
        },
        "optional": false,
        "comments": [
          "/**\n   * @in body\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "body"
          }
        ],
        "in": "body"
      },
      {
        "name": "id",
        "type": {
          "kind": "number",
          "type": "integer",
          "position": {
            "file": "demo/cases.ts",
            "line": 605,
            "character": 6
          },
          "default": 2,
          "description": "pet id",
          "minimum": 1
        },
        "optional": true,
        "comments": [
          "/**\n   * @in path\n   * @description pet id\n   * @minimum 1\n   * @default 2\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "path"
          },
          {
            "name": "description",
            "comment": "pet id"
          },
          {
            "name": "minimum",
            "comment": "1"
          },
          {
            "name": "default",
            "comment": "2"
          }
        ],
        "in": "path"
      },
      {
        "name": "sortType",
        "type": {
          "kind": "enum",
          "type": "string",
          "name": "string",
          "enums": [
            "asc",
            "desc"
          ],
          "position": {
            "file": "demo/cases.ts",
            "line": 610,
            "character": 12
          },
          "default": "asc"
        },
        "optional": true,
        "comments": [
          "/**\n   * @in query\n   * @default asc\n   */"
        ],
        "jsDocs": [
          {
            "name": "in",
            "comment": "query"
          },
          {
            "name": "default",
            "comment": "asc"
          }
        ],
        "in": "query"
      }
    ],
    "comments": [
      "/**\n * @method get\n * @path /pet/{id}\n * @summary get pet by id.\n * @description get pet by id\n * @deprecated\n * @tags pet\n */"
    ],
    "jsDocs": [
      {
        "name": "method",
        "comment": "get"
      },
      {
        "name": "path",
        "comment": "/pet/{id}"
      },
      {
        "name": "summary",
        "comment": "get pet by id."
      },
      {
        "name": "description",
        "comment": "get pet by id"
      },
      {
        "name": "deprecated"
      },
      {
        "name": "tags",
        "comment": "pet"
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 585,
      "character": 18
    },
    "method": "get",
    "path": "/pet/{id}",
    "summary": "get pet by id.",
    "description": "get pet by id",
    "deprecated": true,
    "tags": [
      "pet"
    ]
  },
  {
    "kind": "boolean",
    "position": {
      "file": "demo/cases.ts",
      "line": 613,
      "character": 15
    },
    "name": "Boolean"
  },
  {
    "name": "Pet1",
    "kind": "reference",
    "referenceName": "Pet",
    "position": {
      "file": "demo/cases.ts",
      "line": 618,
      "character": 12
    },
    "jsDocs": [
      {
        "name": "localStorage"
      }
    ],
    "comments": [
      "/**\n * @localStorage\n */"
    ]
  },
  {
    "kind": "object",
    "name": "a",
    "members": [
      {
        "name": "s",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 624,
            "character": 16
          }
        },
        "comments": [
          "/**\n   * @path b1\n   */"
        ],
        "jsDocs": [
          {
            "name": "path",
            "comment": "b1"
          }
        ],
        "parameters": [
          {
            "name": "b",
            "type": {
              "kind": "number",
              "type": "number",
              "position": {
                "file": "demo/cases.ts",
                "line": 624,
                "character": 7
              }
            },
            "optional": false
          }
        ]
      },
      {
        "name": "",
        "type": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 628,
            "character": 16
          }
        },
        "comments": [
          "/**\n   * @path b2\n   */"
        ],
        "jsDocs": [
          {
            "name": "path",
            "comment": "b2"
          }
        ],
        "parameters": [
          {
            "name": "b",
            "type": {
              "kind": "boolean",
              "position": {
                "file": "demo/cases.ts",
                "line": 628,
                "character": 6
              }
            },
            "optional": false
          }
        ]
      }
    ],
    "minProperties": 0,
    "maxProperties": 0,
    "position": {
      "file": "demo/cases.ts",
      "line": 620,
      "character": 5
    }
  },
  {
    "kind": "function",
    "name": "functionType",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 634,
        "character": 0
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "props",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "a",
              "type": {
                "kind": "function",
                "type": {
                  "kind": "number",
                  "type": "number",
                  "position": {
                    "file": "demo/cases.ts",
                    "line": 635,
                    "character": 20
                  }
                },
                "parameters": [
                  {
                    "name": "b",
                    "type": {
                      "kind": "string",
                      "position": {
                        "file": "demo/cases.ts",
                        "line": 635,
                        "character": 9
                      }
                    },
                    "optional": false
                  }
                ],
                "position": {
                  "file": "demo/cases.ts",
                  "line": 635,
                  "character": 5
                }
              }
            },
            {
              "name": "b",
              "type": {
                "kind": "reference",
                "referenceName": "React.ReactNode",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 636,
                  "character": 5
                }
              }
            },
            {
              "name": "c",
              "type": {
                "kind": "reference",
                "referenceName": "C.D",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 637,
                  "character": 5
                }
              }
            }
          ],
          "minProperties": 3,
          "maxProperties": 3,
          "position": {
            "file": "demo/cases.ts",
            "line": 634,
            "character": 29
          }
        },
        "optional": false
      }
    ],
    "comments": [
      "/**\n * functionType comment\n */"
    ],
    "jsDocs": [
      {
        "name": "",
        "comment": "functionType comment"
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 634,
      "character": 0
    },
    "body": "{\n  //\n}"
  },
  {
    "kind": "object",
    "name": "C.D",
    "members": [
      {
        "name": "d",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/cases.ts",
            "line": 644,
            "character": 7
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/cases.ts",
      "line": 643,
      "character": 2
    },
    "modifiers": [
      "export"
    ]
  },
  {
    "kind": "function",
    "name": "FancyButton",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 648,
        "character": 37
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "props",
        "type": {
          "position": {
            "file": "demo/cases.ts",
            "line": 648,
            "character": 38
          }
        },
        "optional": false
      },
      {
        "name": "ref",
        "type": {
          "position": {
            "file": "demo/cases.ts",
            "line": 648,
            "character": 45
          }
        },
        "optional": false
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 648,
      "character": 37
    },
    "body": "null"
  },
  {
    "kind": "function",
    "name": "FancyButton2",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 650,
        "character": 38
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "props",
        "type": {
          "position": {
            "file": "demo/cases.ts",
            "line": 650,
            "character": 39
          }
        },
        "optional": false
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 650,
      "character": 38
    },
    "body": "null",
    "typeArguments": [
      {
        "kind": "reference",
        "referenceName": "Props",
        "position": {
          "file": "demo/cases.ts",
          "line": 650,
          "character": 29
        }
      }
    ]
  },
  {
    "kind": "unknown",
    "name": "FancyButton3",
    "position": {
      "file": "demo/cases.ts",
      "line": 652,
      "character": 6
    },
    "typeArguments": [
      {
        "kind": "object",
        "members": [
          {
            "name": "a",
            "type": {
              "kind": "number",
              "type": "number",
              "position": {
                "file": "demo/cases.ts",
                "line": 652,
                "character": 37
              }
            }
          }
        ],
        "minProperties": 1,
        "maxProperties": 1,
        "position": {
          "file": "demo/cases.ts",
          "line": 652,
          "character": 32
        }
      }
    ]
  },
  {
    "kind": "function",
    "name": "FancyButton4",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 654,
        "character": 0
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "props",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "a",
              "type": {
                "kind": "reference",
                "referenceName": "T",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 654,
                  "character": 52
                }
              }
            }
          ],
          "minProperties": 1,
          "maxProperties": 1,
          "position": {
            "file": "demo/cases.ts",
            "line": 654,
            "character": 47
          }
        },
        "optional": false
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 654,
      "character": 0
    },
    "body": "{}",
    "typeParameters": [
      {
        "name": "T",
        "constraint": {
          "kind": "string",
          "position": {
            "file": "demo/cases.ts",
            "line": 654,
            "character": 32
          }
        }
      }
    ]
  },
  {
    "kind": "function",
    "name": "FancyButton5",
    "type": {
      "position": {
        "file": "demo/cases.ts",
        "line": 656,
        "character": 0
      }
    },
    "optional": false,
    "parameters": [
      {
        "name": "props",
        "type": {
          "kind": "object",
          "members": [
            {
              "name": "a",
              "type": {
                "kind": "reference",
                "referenceName": "Map<string, number>",
                "position": {
                  "file": "demo/cases.ts",
                  "line": 656,
                  "character": 34
                }
              }
            }
          ],
          "minProperties": 1,
          "maxProperties": 1,
          "position": {
            "file": "demo/cases.ts",
            "line": 656,
            "character": 29
          }
        },
        "optional": false
      }
    ],
    "position": {
      "file": "demo/cases.ts",
      "line": 656,
      "character": 0
    },
    "body": "{}"
  },
  {
    "kind": "object",
    "name": "OuterType",
    "members": [
      {
        "name": "outerType",
        "type": {
          "kind": "number",
          "type": "number",
          "position": {
            "file": "demo/case2.ts",
            "line": 1,
            "character": 13
          }
        }
      }
    ],
    "minProperties": 1,
    "maxProperties": 1,
    "position": {
      "file": "demo/case2.ts",
      "line": 0,
      "character": 0
    },
    "modifiers": [
      "export"
    ]
  }
]